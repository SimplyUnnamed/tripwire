{"version":3,"sources":["helpers.js","init.js","options.js","layout.js","tripwire.js","global-hooks.js","systemAnalysis.js","guidance.js","thera.js","chain-map-renderer-orgchart.js","chain-map-renderer-radial.js","chain-map.js","active.js","addSignature.js","api.js","automapper.js","comments.js","deleteSignature.js","editSignature.js","esi.js","eve.js","parse.js","paste.js","redo.js","serverStatus.js","sync.js","systemChange.js","tutorials.js","undo.js","activity-graph.js","ckeditor.js","dialogs/admin-dialog.js","dialogs/base-dialog.js","dialogs/options-dialog.js","dialogs/ping-dialog.js","dialogs/signature-delete-dialog.js","dialogs/signature-dialog.js","system-mutators/invasions.js"],"names":[],"mappingshrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACptoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxlrqzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpptjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlrlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AdentHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxzbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["Object.sort = function(obj, prop) {\n\tvar swapped, prev;\n\tdo {\n\t\tswapped = false, prev = null;\n\t\tfor (var i in obj) {\n\t\t\tif (prev && Number(obj[i][prop]) < Number(obj[prev][prop])) {\n\t\t\t\tvar tmp = obj[i];\n\t\t\t\tobj[i] = obj[prev];\n\t\t\t\tobj[prev] = tmp;\n\t\t\t\tswapped = true;\n\t\t\t}\n\t\t\tprev = i;\n\t\t}\n\t} while (swapped);\n}\n\nObject.index = function(obj, prop, val, cs) {\n\tfor (var key in obj) {\n\t\tif (!cs && obj[key][prop] == val) {\n\t\t\treturn key;\n\t\t} else if (obj[key][prop] && obj[key][prop].toLowerCase() == val.toLowerCase()) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nObject.find = function(obj, prop, val, cs) {\n\tfor (var key in obj) {\n\t\tif (!cs && obj[key][prop] == val) {\n\t\t\treturn obj[key];\n\t\t} else if (obj[key][prop] && obj[key][prop].toLowerCase() == val.toLowerCase()) {\n\t\t\treturn obj[key];\n\t\t}\n\t}\n\n\treturn false;\n}\n\nObject.maxTime = function(obj, prop) {\n\tvar maxTimeString = \"\", maxTime;\n\n\tfor (var key in obj) {\n\t\tif (!maxTime || maxTime < new Date(obj[key][prop])) {\n\t\t\tmaxTime = new Date(obj[key][prop]);\n\t\t\tmaxTimeString = obj[key][prop];\n\t\t}\n\t}\n\treturn maxTimeString;\n}\n\nObject.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n\n    return size;\n};\n\nObject.time = function(obj) {\n\tvar dates = [], key;\n\tfor (key in obj) {\n\t\tdates.push(new Date(obj[key].time));\n\t}\n\n\treturn dates.length ? dates.sort()[dates.length -1].getTime() /1000 : 0;\n};\n\n(function($){\n    $.fn.serializeObject = function(){\n\n        var self = this,\n            json = {},\n            push_counters = {},\n            patterns = {\n                \"validate\": /^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/,\n                \"key\":      /[a-zA-Z0-9_]+|(?=\\[\\])/g,\n                \"push\":     /^$/,\n                \"fixed\":    /^\\d+$/,\n                \"named\":    /^[a-zA-Z0-9_]+$/\n            };\n\n\n        this.build = function(base, key, value){\n            base[key] = value;\n            return base;\n        };\n\n        this.push_counter = function(key){\n            if(push_counters[key] === undefined){\n                push_counters[key] = 0;\n            }\n            return push_counters[key]++;\n        };\n\n        $.each($(this).serializeArray(), function(){\n\n            // skip invalid keys\n            if(!patterns.validate.test(this.name)){\n                return;\n            }\n\n            var k,\n                keys = this.name.match(patterns.key),\n                merge = this.value,\n                reverse_key = this.name;\n\n            while((k = keys.pop()) !== undefined){\n\n                // adjust reverse_key\n                reverse_key = reverse_key.replace(new RegExp(\"\\\\[\" + k + \"\\\\]$\"), '');\n\n                // push\n                if(k.match(patterns.push)){\n                    merge = self.build([], self.push_counter(reverse_key), merge);\n                }\n\n                // fixed\n                else if(k.match(patterns.fixed)){\n                    merge = self.build([], k, merge);\n                }\n\n                // named\n                else if(k.match(patterns.named)){\n                    merge = self.build({}, k, merge);\n                }\n            }\n\n            json = $.extend(true, json, merge);\n        });\n\n        return json;\n    };\n})(jQuery);\n\nvar numFormat = function(num) {\n\t//Seperates the components of the number\n\tvar n = num.toString().split(\".\");\n\t//Comma-fies the first part\n\tn[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t//Combines the two sections\n\treturn n.join(\".\");\n};\n\nvar letterToNumbers = function(string) {\n    string = string.toUpperCase();\n    var letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', sum = 0, i;\n    for (i = 0; i < string.length; i++) {\n        sum += Math.pow(letters.length, i) * (letters.indexOf(string.substr(((i + 1) * -1), 1)) + 1);\n    }\n    return sum;\n};\n\nvar sigFormat = function(input, type) {\n\tif (!input) return \"\";\n\n\tvar alpha = /^[a-zA-Z]+$/;\n\tvar numeric = /^[0-9]+$/;\n\tvar format = type == \"type\" ? options.chain.typeFormat || \"\" : options.chain.classFormat || \"\";\n\n\tfor (var x = 0, l = format.length; x < l; x++) {\n\t\tif (format[x].match(alpha)) {\n\t\t\tif (format[x].toUpperCase() == \"B\" && input == \"a\") {\n\t\t\t\treturn \"\";\n\t\t\t} else {\n\t\t\t\tif (format[x] == format[x].toUpperCase()) {\n\t\t\t\t\tformat = format.substr(0, x) + input.toUpperCase() + format.substr(x + 1, l);\n\t\t\t\t} else {\n\t\t\t\t\tformat = format.substr(0, x) + input + format.substr(x + 1, l);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (format[x].match(numeric)) {\n\t\t\tif (format[x] == 2 && input == \"a\") {\n\t\t\t\treturn \"\";\n\t\t\t} else {\n\t\t\t\tformat = format.substr(0, x) + letterToNumbers(input) + format.substr(x +1, l);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn format;\n};\n\nvar isEmpty = function(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n};\n\n/** Find the relative position of one element within the hierarchy tree of another */\nfunction positionRelativeTo(elem, ancestor) {\n\tconst elemPos = elem.getBoundingClientRect(),\n\t\tancestorPos = ancestor.getBoundingClientRect();\n\treturn { \n\t\tleft: elemPos.left - ancestorPos.left + ancestor.scrollLeft,\n\t\ttop: elemPos.top - ancestorPos.top + ancestor.scrollTop\n\t};\n}\n\n/** Look up one or more values in a comma separated string as keys in a data map, and return a property from the results in a new comma separated string.\nConvenience function for UI mapping.\nWill throw a failure message, unless suppress=true in which case it will return undefined, if \nany of the lookups fail to resolve. */\nfunction lookupMultiple(map, propertyName, lookupString, suppress) {\n\tconst values = lookupString.split(',');\n\tconst results = [];\n\tfor(var i = 0; i < values.length; i++) {\n\t\tconst v = values[i];\n\t\tconst r = map[v];\n\t\tif(!r) { \n\t\t\tif(suppress) { return undefined;}\n\t\t\telse { throw 'Value ' + v + ' did not match anything in ' + map; }\n\t\t}\n\t\tresults.push(r[propertyName]);\n\t}\n\treturn results.join(',');\n}\n\n/** Look up one or more values in a comma separated string as property values in a data map, and return the key from the results in a new comma separated string.\nConvenience function for UI mapping.\nWill throw a failure message, unless suppress=true in which case it will return undefined, if \nany of the lookups fail to resolve. */\nfunction lookupByPropertyMultiple(map, propertyName, lookupString, suppress) {\n\tconst values = lookupString.split(',');\n\tconst results = [];\n\tfor(var i = 0; i < values.length; i++) {\n\t\tconst v = values[i];\n\t\tconst r = Object.index(map, propertyName, v);\n\t\tif(!r) { \n\t\t\tif(suppress) { return undefined;}\n\t\t\telse { throw 'Value ' + v + ' did not match anything by property ' + propertyName + ' in ' + map; }\n\t\t}\n\t\tresults.push(r);\n\t}\n\treturn results.join(',');\n}\n\nvar getCookie = function(c_name) {\n\tvar c_value = document.cookie;\n\n\tvar c_start = c_value.indexOf(\" \" + c_name + \"=\");\n\tif (c_start == -1) {\n\t\tc_start = c_value.indexOf(c_name + \"=\");\n\t}\n\n\tif (c_start == -1) {\n\t\tc_value = null;\n\t} else {\n\t\tc_start = c_value.indexOf(\"=\", c_start) + 1;\n\t\tvar c_end = c_value.indexOf(\";\", c_start);\n\n\t\tif (c_end == -1) {\n\t\t\tc_end = c_value.length;\n\t\t}\n\n\t\tc_value = unescape(c_value.substring(c_start, c_end));\n\t}\n\n\treturn c_value;\n};\n\nvar setCookie = function(c_name, value, exdays) {\n\tvar exdate = new Date();\n\texdate.setDate(exdate.getDate() + exdays);\n\tvar c_value = escape(value) + ((exdays == null) ? \"\" : \"; expires=\"+exdate.toUTCString());\n\n\tdocument.cookie = c_name + \"=\" + c_value + \";\" + (document.location.protocol == \"https:\" ? \"secure;\" : \"\");\n};\n\n// Global CSS class change event\n(function($) {\n    var originalAddClassMethod = $.fn.addClass;\n\tvar originalRemoveClassMethod = $.fn.removeClass;\n\n    $.fn.addClass = function(className) {\n        // Execute the original method.\n        var result = originalAddClassMethod.apply(this, arguments);\n\n        // trigger a custom event\n        this.trigger('classchange', className);\n\n        // return the original result\n        return result;\n    }\n\n\t$.fn.removeClass = function(className) {\n        // Execute the original method.\n        var result = originalRemoveClassMethod.apply(this, arguments);\n\n        // trigger a custom event\n        this.trigger('classchange', className);\n\n        // return the original result\n        return result;\n    }\n})(jQuery);\n\nvar parseHeaders = function(headers) {\n\t\t// Convert the header string into an array\n\t\t// of individual headers\n\t\tvar arr = headers.trim().split(/[\\r\\n]+/);\n\n\t\t// Create a map of header names to values\n\t\tvar headerMap = {};\n\t\tarr.forEach(function (line) {\n\t\t\t\tvar parts = line.split(': ');\n\t\t\t\tvar header = parts.shift();\n\t\t\t\tvar value = parts.join(': ');\n\t\t\t\theaderMap[header] = value;\n\t\t});\n\t\treturn headerMap;\n}\n","var viewingSystem = $(\"meta[name=system]\").attr(\"content\");\nvar viewingSystemID = $(\"meta[name=systemID]\").attr(\"content\");\nvar server = $(\"meta[name=server]\").attr(\"content\");\nvar app_name = $(\"meta[name=app_name]\").attr(\"content\");\nvar version = $(\"meta[name=version]\").attr(\"content\");\n\n// Page cache indicator\nif (getCookie(\"loadedFromBrowserCache\") == \"true\") {\n\t$(\"#pageTime\").html(\"Page is Cached\");\n}\n\n// setCookie('loadedFromBrowserCache', true);\n\n// Use this to test performance of javascript code lines\n// var startTime = window.performance.now();\n// console.log(\"stint: \"+ (window.performance.now() - startTime));\n","var options = new function() {\n\tvar localOverrides = [\"grid\"];\n\tvar localOptions = JSON.parse(localStorage.getItem(\"tripwire_options\"));\n\tvar saveTimer;\n\n\tthis.userID = init.userID;\n\tthis.character = {id: init.characterID, name: init.characterName};\n\tthis.background = null;\n\tthis.uiscale = 1.0;\n\tthis.favorites = [];\n\tthis.grid = {};\n\tthis.tracking = {active: \"new\"};\n\tthis.masks = {active: init.corporationID + \".2\"};\n\tthis.chain = {typeFormat: null, classFormat: null, gridlines: true, active: 0, tabs: [], \"node-reference\": \"type\", zoom: 1.0, sigNameLocation: 'name', routingLimit: 15, routeSecurity: 'shortest', routeIgnore: { enabled: false, systems: [ 'Tama', 'Rancer' ] }, renderer: 'orgChart' };\n\tthis.signatures = {editType: \"unknown\", copySeparator: \",\", pasteLife: 72, alignment: {sigID: \"centerAlign\", sigType: \"centerAlign\", sigAge: \"centerAlign\", leadsTo: \"centerAlign\", sigLife: \"centerAlign\", sigMass: \"centerAlign\"}};\n\tthis.buttons = {follow: false, chainWidget: {viewing: false, favorites: false}, signaturesWidget: {autoMapper: false}};\n\n\tthis.saveDelay = function(delay) {\n\t\tif (saveTimer) clearTimeout(saveTimer);\n\n\t\tsaveTimer = setTimeout(\"options.save()\", delay);\n\t};\n\n\t// Saves options in both cookie and database\n\tthis.save = function() {\n\t\tvar options = JSON.stringify(window.options.get());\n\n\t\tlocalStorage.setItem(\"tripwire_options\", options);\n\n\t\treturn $.ajax({\n\t\t\turl: \"options.php\",\n\t\t\tdata: {mode: \"set\", options: options},\n\t\t\ttype: \"POST\",\n\t\t\tdataType: \"JSON\"\n\t\t});\n\t};\n\n\t// Loads options via passed object else cookie\n\tthis.load = function(data) {\n\t\tif (data && typeof(data) != \"undefined\") {\n\t\t\tthis.set(this, data);\n\t\t} else if (localOptions) {\n\t\t\tthis.set(this, localOptions);\n\t\t}\n\n\t\tthis.apply();\n\t};\n\n\t// Gets options from this by exluding types == function\n\tthis.get = function() {\n\t\tvar data = {};\n\n\t\tfor (var x in this) {\n\t\t\tif (typeof(this[x]) != \"function\") {\n\t\t\t\tdata[x] = this[x];\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t};\n\n\t// Sets this from passed object\n\tthis.set = function(local, data) {\n\t\tfor (var prop in data) {\n\t\t\tif (data[prop] && data[prop].constructor && data[prop].constructor === Object) {\n\t\t\t\tif (local) {\n\t\t\t\t\tthis.set(local[prop], data[prop]);\n\t\t\t\t}\n\t\t\t} else if (local && typeof(local[prop]) != \"undefined\") {\n\t\t\t\tlocal[prop] = data[prop];\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.reset = function() {\n\t\tfor (var x in this) {\n\t\t\tif (typeof(this[x]) != \"function\") {\n\t\t\t\tthis[x] = JSON.parse(JSON.stringify(this.reset.defaults[x]));\n\t\t\t}\n\t\t}\n\t};\n\n\t// Applies settings\n\tthis.apply = function() {\n\t\t// Local browser overrides\n\t\tif (localOptions) {\n            for (key in localOverrides) {\n                this[localOverrides[key]] = localOptions[localOverrides[key]];\n\t\t\t}\n\t\t}\n\n\t\t// Grid layout (detect old IGB setting options)\n\t\tif (this.grid.hasOwnProperty(\"oog\") && !isEmpty(this.grid.oog)) {\n\t\t\t$.each(this.grid.oog, function() {\n\t\t\t\t$(\"#\"+this.id).attr({\"data-col\": this.col, \"data-row\": this.row, \"data-sizex\": this.size_x, \"data-sizey\": this.size_y})\n\t\t\t\t\t.css({width: this.width, height: this.height});\n\t\t\t});\n\t\t} else if (!isEmpty(this.grid)) {\n\t\t\t$.each(this.grid, function() {\n\t\t\t\t$(\"#\"+this.id).attr({\"data-col\": this.col, \"data-row\": this.row, \"data-sizex\": this.size_x, \"data-sizey\": this.size_y})\n\t\t\t\t\t.css({width: this.width, height: this.height});\n\t\t\t});\n\t\t}\n\n\t\t// Make sure favorites are all ints and not strings\n\t\tthis.favorites = $.map(this.favorites, function(favorite) {\n\t\t\treturn parseInt(favorite);\n\t\t});\n\n\t\t// Buttons\n\t\tif (this.buttons.follow) $(\"#follow\").addClass(\"active\");\n\t\tif (this.buttons.chainWidget.home) $(\"#home\").addClass(\"active\");\n\t\tif (this.buttons.chainWidget.kspace) $(\"#k-space\").addClass(\"active\");\n\t\tif (this.buttons.chainWidget.viewing) $(\"#show-viewing\").addClass(\"active\");\n\t\tif (this.buttons.chainWidget.favorites) $(\"#show-favorite\").addClass(\"active\");\n\t\tif (this.buttons.chainWidget.evescout) $(\"#eve-scout\").addClass(\"active\");\n\t\tif ($.inArray(parseInt(viewingSystemID), this.favorites) !== -1) $(\"#system-favorite\").attr(\"data-icon\", \"star\").addClass(\"active\");\n\t\tif (this.buttons.signaturesWidget.autoMapper) $(\"#toggle-automapper\").addClass(\"active\");\n\n\t\t// UI Scale\n\t\tif (this.uiscale) {\n\t\t\t$(\"body\").css(\"zoom\", this.uiscale);\n\t\t}\n\n\t\t// Chain zoom\n\t\tif (this.chain.zoom) {\n\t\t\t$(\"#chainParent\").css(\"zoom\", this.chain.zoom);\n\t\t}\n\n\t\t// Background\n\t\tif (this.background) {\n\t\t\tvar a = $('<a>', { href:this.background } )[0];\n\t\t\t$(\"#wrapper\").attr(\"style\", \"background-image: url(https://\" + a.hostname + a.pathname + a.search + \");\");\n\t\t} else {\n\t\t\t$(\"#wrapper\").attr(\"style\", \"\");\n\t\t}\n\n\t\t// Characters in Options\n\t\t$(\"#dialog-options #characters\").html(\"<img src='https://image.eveonline.com/Character/\"+init.characterID+\"_64.jpg' />\");\n\n\t\t// Active mask\n\t\t$(\"#dialog-options input[name='mask']\").filter(\"[value='\"+this.masks.active+\"']\").attr(\"checked\", true);\n\n\t\t// Chain tabs\n\t\t$(\"#chainTabs\").html(\"\");\n\t\tfor (var x in this.chain.tabs) {\n\t\t\tif (this.chain.tabs[x]) {\n\t\t\t\tvar $tab = $(\"#chainTab .tab\").clone();\n\n\t\t\t\t$tab.attr(\"id\", x).find(\".name\").data(\"tab\", this.chain.tabs[x].systemID).html(this.chain.tabs[x].name);\n\t\t\t\tif (x == this.chain.active) { $tab.addClass(\"current\"); }\n\n\t\t\t\t$(\"#chainTabs\").append($tab);\n\t\t\t}\n\t\t}\n\n\t\t// Draw chain if Tripwire is initialized\n\t\tif (typeof(tripwire) !== \"undefined\") {\n\t\t\tchain.redraw();\n\t\t}\n\t};\n\n\tthis.reset.defaults = JSON.parse(JSON.stringify(this.get()));\n\tthis.load(init && init.options ? init.options : null);\n}\n","var grid = $(\".gridster ul\").gridster({\n\twidget_selector: \"li.gridWidget\",\n\tavoid_overlapped_widgets: false,\n\twidget_base_dimensions: [50, 50],\n\twidget_margins: [5, 5],\n\tautogrow_cols: true,\n\thelper: \"clone\",\n\tdraggable: {\n\t\tstart: function(e, ui) {\n\t\t\t$(\"div.gridster\").width($(\"div.gridster ul\").width());\n\t\t}\n\t},\n\tresize: {\n    \tenabled: true,\n    \thandle_class: \"grid-resize\",\n    \tmax_size: [30, 30],\n    \tmin_size: [4, 4],\n    \tstart: function(e) {\n    \t\t$(\"div.gridster\").width($(\"div.gridster ul\").width());\n    \t},\n    \tstop: function(e, ui, $widget) {\n    \t\t//var width = parseInt($(\".gridster\").css(\"margin-left\")) + this.container_width;\n    \t\t//$(\"#wrapper\").css({width: width + \"px\"})\n    \t\tswitch ($widget.attr(\"id\")) {\n    \t\t\tcase \"infoWidget\":\n    \t\t\t\tsetTimeout(\"activity.redraw();\", 300);\n    \t\t\t\tbreak;\n    \t\t}\n    \t}\n\t},\n\tserialize_params: function($w, wgd) {\n\t\treturn {\n\t\t\tid: $w.attr(\"id\"),\n\t\t\tcol: wgd.col,\n\t\t\trow: wgd.row,\n\t\t\tsize_x: wgd.size_x,\n\t\t\tsize_y: wgd.size_y,\n\t\t\twidth: $w.width(),\n\t\t\theight: $w.height()\n\t\t}\n\t}\n}).data(\"gridster\").disable();\n\ngrid.disable_resize();\n$(\".grid-resize\").addClass(\"hidden\").attr(\"data-icon\", \"resize\");\n\n$(\".gridster\").css({visibility: \"visible\"});\n$(\".gridster > *\").addClass(\"gridster-transition\");\n\n$(\"#layout\").click(function() {\n\tif (!$(this).hasClass(\"active\")) {\n\t\tgrid.enable();\n\t\tgrid.enable_resize();\n\t\t$(\".grid-resize\").removeClass(\"hidden\");\n\n\t\t$(this).addClass(\"active\");\n\t} else {\n\t\tgrid.disable();\n\t\tgrid.disable_resize();\n\t\t$(\".grid-resize\").addClass(\"hidden\");\n\n\t\t$(this).removeClass(\"active\");\n\n\t\toptions.grid = grid.serialize();\n\n\t\toptions.save();\n\t}\n});\n","var tripwire = new function() {\n    this.timer, this.xhr;\n\tthis.version = version;\n\tthis.client = {signatures: {}, wormholes: {}};\n\tthis.server = {signatures: {}, wormholes: {}};\n\tthis.signatures = {list: {}, undo: JSON.parse(sessionStorage.getItem(\"tripwire_undo\")) || {}, redo: JSON.parse(sessionStorage.getItem(\"tripwire_redo\")) || {}};\n\tthis.serverSignatureCount = 0;\n\tthis.activity = {};\n\tthis.data = {tracking: {}, esi: {}};\n\tthis.refreshRate = 5000;\n\tthis.connected = true;\n\tthis.ageFormat = \"HM\";\n\tthis.instance = window.name ? window.name : (new Date().getTime() / 1000, window.name = new Date().getTime() / 1000);\n\n    // Command to start/stop tripwire updates\n\t// ToDo: Include API and Server timers\n\tthis.stop = function() {\n\t\tclearTimeout(this.timer);\n\t\treturn this.timer;\n\t};\n\n\tthis.start = function() {\n\t\treturn this.sync();\n\t}\n\n    // Command to change Age format\n\t// ToDo: Cookie change to keep\n\tthis.setAgeFormat = function(format) {\n\t\tvar format = typeof(format) !== 'undefined' ? format : this.ageFormat;\n\n\t\t$(\"span[data-age]\").each(function() {\n\t\t\t$(this).countdown(\"option\", {format: format});\n\t\t});\n\n\t\treturn true;\n\t}\n\n    this.serverTime = function() {\n\t\tthis.time;\n\n\t\tthis.serverTime.getTime = function() {\n\t\t\treturn tripwire.serverTime.time;\n\t\t}\n\t}\n    this.serverTime();\n\n    // Handles putting chain together\n\tthis.chainMap = function() {\n\t\tthis.chainMap.parse = function(data) {\n\t\t\tchain.draw(data);\n\t\t}\n\t}\n    this.chainMap();\n\n    this.pastEOL = function() {\n\t\tvar options = {since: $(this).countdown('option', 'until'), format: \"HM\", layout: \"-{hnn}{sep}{mnn}&nbsp;\"};\n\t\t$(this).countdown(\"option\", options);\n\t}\n\n    // Handles WH Type hover-over tooltip\n\t// ToDo: Use native JS\n\tthis.whTooltip = function(sig) {\n\t\tif (viewingSystemID == sig.systemID) {\n\t\t\tif ($.inArray(sig.type, $.map(tripwire.wormholes, function(item, index) { return index;})) >= 0) {\n\t\t\t\tvar type = sig.type;\n\t\t\t\tvar tooltip = '';\n\t\t\t} else {\n\t\t\t\tvar type = sig.sig2Type;\n\t\t\t\tvar tooltip = \"<b>Type:</b> \"+type+\"<br/>\";\n\t\t\t}\n\t\t} else {\n\t\t\tif ($.inArray(sig.sig2Type, $.map(tripwire.wormholes, function(item, index) { return index;})) >= 0) {\n\t\t\t\tvar type = sig.sig2Type;\n\t\t\t\tvar tooltip = '';\n\t\t\t} else {\n\t\t\t\tvar type = sig.type;\n\t\t\t\tvar tooltip = \"<b>Type:</b> \"+type+\"<br/>\";\n\t\t\t}\n\t\t}\n\n\t\tif ($.inArray(type, $.map(tripwire.wormholes, function(item, index) { return index;})) >= 0) {\n\t\t\tvar whType = true;\n\t\t} else {\n\t\t\tvar whType = false;\n\t\t}\n\n\t\ttooltip += \"<b>Life:</b> \"+(whType?tripwire.wormholes[type].life:\"Unknown\")+\"<br/>\";\n\n\t\tif (whType) {\n\t\t\tswitch (tripwire.wormholes[type].leadsTo.split(\" \")[0]) {\n\t\t\t\tcase 'High-Sec':\n\t\t\t\t\ttooltip += \"<b>Leads To:</b> <span class='hisec'>\"+tripwire.wormholes[type].leadsTo+\"</span><br/>\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Low-Sec':\n\t\t\t\t\ttooltip += \"<b>Leads To:</b> <span class='lowsec'>\"+tripwire.wormholes[type].leadsTo+\"</span><br/>\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Null-Sec':\n\t\t\t\t\ttooltip += \"<b>Leads To:</b> <span class='nullsec'>\"+tripwire.wormholes[type].leadsTo+\"</span><br/>\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Class':\n\t\t\t\t\ttooltip += \"<b>Leads To:</b> <span class='wh'>\"+tripwire.wormholes[type].leadsTo+\"</span><br/>\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttooltip += \"<b>Leads To:</b> <span>\"+tripwire.wormholes[type].leadsTo+\"</span><br/>\";\n\t\t\t}\n\t\t} else {\n\t\t\ttooltip += \"<b>Leads To:</b> <span>Unknown</span><br/>\";\n\t\t}\n\n\t\ttooltip += \"<b>Max Mass</b>: \"+(whType?numFormat(tripwire.wormholes[type].mass):\"Unknown\")+\" Kg<br/>\";\n\n\t\ttooltip += \"<b>Max Jumpable</b>: \"+(whType?numFormat(tripwire.wormholes[type].jump):\"Unknown\")+\" Kg<br/>\";\n\n\t\treturn tooltip;\n\t}\n\n\t// Handles Age hover-over tooltip\n\t// ToDo: Use native JS\n\tthis.ageTooltip = function(sig) {\n\t\t// var date = new Date(sig.lifeTime);\n\t\t// var localOffset = date.getTimezoneOffset() * 60000;\n\t\t// date = new Date(date.getTime() + localOffset);\n        var date = new Date(sig.lifeTime);\n\n\t\tvar tooltip = \"<table class=\\\"age-tooltip-table\\\"><tr>\"\n        + \"<th>Created:</th><td>\"+(date.getMonth()+1)+\"/\"+date.getDate()+\" \"+(date.getHours() < 10?'0':'')+date.getHours()+\":\"+(date.getMinutes() < 10?'0':'')+date.getMinutes()+\"</td>\"\n        + \"<td>\"+sig.createdByName.replace(/'/g, '&#39;').replace(/\"/g, '&#34;')+\"</td>\"\n        + \"</tr>\";\n\n\t\tif (sig.lifeTime != sig.modifiedTime) {\n\t\t\tdate = new Date(sig.modifiedTime);\n\t\t\t// localOffset = date.getTimezoneOffset() * 60000;\n\t\t\t// date = new Date(date.getTime() + localOffset);\n      \n\t\t\ttooltip += \"<tr><th>Last Modified:</th><td>\"+(date.getMonth()+1)+\"/\"+date.getDate()+\" \"+(date.getHours() < 10?'0':'')+date.getHours()+\":\"+(date.getMinutes() < 10?'0':'')+date.getMinutes()+\"</td>\"\n          + \"<td>\"+sig.modifiedByName.replace(/'/g, '&#39;').replace(/\"/g, '&#34;')+\"</td>\"\n          + \"</tr>\";\n\t\t}\n\n\t\ttooltip += \"</table>\";\n\n\t\treturn tooltip;\n\t}\n\n    this.refresh = function(mode, data, successCallback, alwaysCallback) {\n\t\tvar mode = mode || 'refresh';\n\n\t\tthis.sync(mode, data, successCallback, alwaysCallback);\n\t}\n}\n","$(\"body\").on(\"click\", \"a[href^='.?system=']\", function(e) {\n\te.preventDefault();\n\n\tvar system = $(this).attr(\"href\").replace(\".?system=\", \"\");\n\tvar systemID = Object.index(tripwire.systems, \"name\", system);\n\n\ttripwire.systemChange(systemID);\n});\n\n$(\"body\").on(\"submit\", \"#systemSearch\", function(e) {\n\te.preventDefault();\n\n\tvar system = $(this).find(\"[name='system']\").val();\n\tvar systemID = Object.index(tripwire.systems, \"name\", system, true) || false;\n\n\tif (systemID !== false) {\n\t\ttripwire.systemChange(systemID);\n\t\t$(this).find(\"[name='system']\").val(\"\");\n\t\t$(\"#search\").click();\n\t}\n});\n\n$(\"body\").on(\"click\", \"#undo:not(.disabled)\", function() {\n\ttripwire.undo();\n});\n\n$(\"body\").on(\"click\", \"#redo:not(.disabled)\", function() {\n\ttripwire.redo();\n});\n\n// Chain map zooming (Gets funky if you push things too far)\n$(\"#chainParent\").on(\"mousewheel\", function(e) {\n\te.preventDefault();\n\tvar zoom = parseFloat($(\"#chainParent\").css(\"zoom\")) || 1.0;\n\tvar min = 0.6;\n\tvar max = 2.0;\n\n    if (e.originalEvent.wheelDelta / 120 > 0 && zoom < max) {\n\t\t$(\"#chainParent\").css(\"zoom\", zoom + 0.1);\n    } else if (e.originalEvent.wheelDelta / 120 < 0 && zoom > min) {\n\t\t$(\"#chainParent\").css(\"zoom\", zoom - 0.1);\n    }\n\n\t// Show the reset zoom button for awhile\n\t$(\"#chain-zoom-reset\").fadeIn(200);\n\tif (this.timeout) clearTimeout(this.timeout);\n\tthis.timeout = setTimeout('$(\"#chain-zoom-reset\").fadeOut(200);', 3000);\n\n\t// Save options\n\toptions.chain.zoom = parseFloat($(\"#chainParent\").css(\"zoom\"));\n\toptions.saveDelay(2000);\n});\n\n$(\"#chain-zoom-reset\").on(\"click\", function() {\n\t$(\"#chainParent\").css(\"zoom\", 1);\n\toptions.chain.zoom = 1;\n\toptions.saveDelay(2000);\n});\n\n$(document).keydown(function(e)\t{\n\t//Abort - user is in input or textarea\n\tif ($(document.activeElement).is(\"textarea, input\")) return;\n\n\t// Ctrl key hooks\n\tif (e.metaKey || e.ctrlKey) {\n\n\t\tif (e.keyCode === 89 && !$(\"#redo\").hasClass(\"disabled\")) {\n\t\t\t// Ctrl-y redo hook\n\t\t\te.preventDefault();\n\t\t\t$(\"#redo\").click();\n\t\t\tNotify.trigger(\"Redoing last undo\");\n\t\t} else if (e.keyCode === 90 && !$(\"#undo\").hasClass(\"disabled\")) {\n\t\t\t// Ctrl-z undo hook\n\t\t\te.preventDefault();\n\t\t\t$(\"#undo\").click();\n\t\t\tNotify.trigger(\"Undoing last action\");\n\t\t} else if (e.keyCode === 65) {\n\t\t\t// Ctrl-a select all (signatures) hook\n\t\t\te.preventDefault();\n\t\t\t$(\"#sigTable tbody tr\").addClass(\"selected\");\n\t\t\t$(\"#signaturesWidget #delete-signature\").trigger(\"delete:refresh\");\n\t\t} else if (e.keyCode === 67) {\n\t\t\t// Ctrl-c copy selected signatures hook\n\t\t\tif (window.getSelection().toString() === \"\") {\n\t\t\t\tvar output = \"\";\n\t\t\t\t$(\"#sigTable tbody tr.selected\").each(function(row) {\n\t\t\t\t\tvar signature = tripwire.client.signatures[$(this).data(\"id\")];\n\t\t\t\t\tvar row = [];\n\n\t\t\t\t\tif (signature.signatureID) {\n\t\t\t\t\t\trow.push(signature.signatureID.substring(0, 3).toUpperCase() + \"-\" + (signature.signatureID.substring(3, 6) || \"###\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.push(\"null\");\n\t\t\t\t\t}\n\n\t\t\t\t\trow.push(signature.type);\n\t\t\t\t\tif (signature.type === \"wormhole\") {\n\t\t\t\t\t\tvar wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n\t\t\t\t\t\tvar otherSignature = signature.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID];\n\t\t\t\t\t\trow.push(wormhole.type || \"null\" );\n\t\t\t\t\t\trow.push(tripwire.systems[signature.systemID] ? tripwire.systems[signature.systemID].name : tripwire.aSigSystems[signature.systemID]);\n\t\t\t\t\t\trow.push(tripwire.systems[otherSignature.systemID] ? tripwire.systems[otherSignature.systemID].name : tripwire.aSigSystems[otherSignature.systemID]);\n\t\t\t\t\t\trow.push(wormhole.life);\n\t\t\t\t\t\trow.push(wormhole.mass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.push(signature.name);\n\t\t\t\t\t}\n\n\t\t\t\t\trow.push(signature.createdByName);\n\t\t\t\t\trow.push(signature.lifeTime);\n\t\t\t\t\trow.push(signature.lifeLength);\n\t\t\t\t\trow.push(signature.lifeLeft);\n\t\t\t\t\trow.push(signature.modifiedByName);\n\t\t\t\t\trow.push(signature.modifiedTime);\n\t\t\t\t\toutput += row.join(options.signatures.copySeparator) + \"\\r\\n\";\n\t\t\t\t});\n\t\t\t\t$(\"#clipboard\").text(output);\n\t\t\t\t$(\"#clipboard\").focus();\n\t\t\t\t$(\"#clipboard\").select();\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// delete key keyhooks\n\t\tif (e.keyCode == 46 && $(\"#sigTable tr.selected\").length > 0) {\n\t\t\t$(\"#delete-signature\").click();\n\t\t}\n\t}\n});\n\n// $(\"#APIclock\").knob({angleArc: 359.9, height: 20, width: 20, max: 60, readOnly: true, displayInput: false, fgColor: \"#CCC\", bgColor: \"#666\"});\n\n$(\"#follow\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"active\"))\n\t\t$(this).removeClass(\"active\");\n\telse\n\t\t$(this).addClass(\"active\");\n\n\toptions.buttons.follow = $(this).hasClass(\"active\");\n\toptions.save();\n})\n\n$(\"#show-viewing\").click(function() {\n\tif ($(this).hasClass(\"active\"))\n\t\t$(this).removeClass(\"active\");\n\telse\n\t\t$(this).addClass(\"active\");\n\n\tchain.redraw();\n\n\toptions.buttons.chainWidget.viewing = $(this).hasClass(\"active\");\n\toptions.save();\n});\n\n$(\"#show-favorite\").click(function() {\n\tif ($(this).hasClass(\"active\"))\n\t\t$(this).removeClass(\"active\");\n\telse\n\t\t$(this).addClass(\"active\");\n\n\tchain.redraw();\n\n\toptions.buttons.chainWidget.favorites = $(this).hasClass(\"active\");\n\toptions.save();\n});\n\n$(\"#system-favorite\").click(function() {\n\tif ($(this).hasClass(\"active\")) {\n\t\t$(this).removeClass(\"active\").attr(\"data-icon\", \"star-empty\");\n\n\t\toptions.favorites.splice(options.favorites.indexOf(parseInt(viewingSystemID)), 1);\n\t} else {\n\t\t$(this).attr(\"data-icon\", \"star\").addClass(\"active\");\n\n\t\toptions.favorites.push(parseInt(viewingSystemID));\n\t}\n\n\tif ($(\"#show-favorite\").hasClass(\"active\"))\n\t\tchain.redraw();\n\n\toptions.save();\n});\n\n$(\"#search\").click(function(e) {\n\t$(\"#searchSpan\").toggle();\n\n\tif ($(this).hasClass(\"active\")) {\n\t\t$(this).removeClass(\"active\");\n\t\tif (tripwire.client.EVE && tripwire.client.EVE.systemName)\n\t\t\t$(\"#currentSpan\").show();\n\t} else {\n\t\t$(this).addClass(\"active\");\n\t\t$(\"#currentSpan\").hide();\n\n\t\t$(\"#searchSpan input[name=system]\").focus().select();\n\t}\n});\n\n$(\"#toggle-automapper\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"active\")) {\n\t\t$(this).removeClass(\"active\");\n\t} else {\n\t\t$(this).addClass(\"active\");\n\t}\n\n\toptions.buttons.signaturesWidget.autoMapper = $(this).hasClass(\"active\");\n\toptions.save();\n});\n\n$(\"#track\").on(\"click\", \".tracking-clone\", function() {\n\tvar characterID =$(this).attr(\"data-characterid\");\n\t$(\"#tracking .tracking-clone\").removeClass(\"active\");\n\n\tif (options.tracking.active == characterID) {\n\t\toptions.tracking.active = null;\n\t\ttripwire.EVE(false, true);\n\t\t$(\"#removeESI\").attr(\"disabled\", \"disabled\");\n\t} else {\n\t\toptions.tracking.active = characterID;\n\n\t\tif (tripwire.esi.characters[options.tracking.active]) {\n\t\t\t$(\"#tracking .tracking-clone[data-characterid='\"+ options.tracking.active +\"']\").addClass(\"active\");\n\t\t\ttripwire.EVE(tripwire.esi.characters[options.tracking.active], true);\n\t\t}\n\n\t\t$(\"#removeESI\").removeAttr(\"disabled\");\n\t}\n\n\toptions.save();\n});\n\n$(\"#login\").on(\"click\", \"#removeESI\", function() {\n\tvar characterID = options.tracking.active;\n\n\toptions.tracking.active = null;\n\ttripwire.EVE(false, true);\n\toptions.save();\n\n\t$(\"#tracking .tracking-clone[data-characterid='\"+ characterID +\"']\").remove();\n\n\t$(\"#removeESI\").attr(\"disabled\", \"disabled\");\n\n\tif ($.isArray(tripwire.data.esi.delete)) {\n\t\ttripwire.data.esiDelete.push(characterID);\n\t} else {\n\t\ttripwire.data.esiDelete = [characterID];\n\t}\n});\n\n$(\"#user\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"active\")) {\n\t\t$(this).removeClass(\"active\");\n\n\t\t$(\"#login > #panel\").css({display: \"none\"});\n\n\t\t//$(\"#wrapper\").unbind(\"click\");\n\t} else {\n\t\t$(this).addClass(\"active\");\n\n\t\t$(\"#login > #panel\").css({display: \"inline\"});\n\t\t$(\"#loginForm input[name=username]\").focus().select();\n\n\t\t// Click outside closes\n\t\t$(\"#wrapper\").click(function(e) {\n\t\t\t$(\"#login > #panel\").css({display: \"none\"});\n\t\t\t$(\"#user\").removeClass(\"active\");\n\t\t});\n\n\t\t$(\"#login\").click(function(e) {\n\t\t\te.stopPropagation();\n\t\t})\n\t}\n});\n\n$(\"#logout\").click(function() {\n\twindow.location = \"logout.php\";\n});\n\nvar Notify = new function() {\n\tthis.trigger = function(content, color, stick, id) {\n\t\tvar color = typeof(color) !== \"undefined\" ? color : \"blue\";\n\t\tvar stick = typeof(stick) !== \"undefined\" ? stick : 10000;\n\t\tvar id = typeof(id) !== \"undefined\" ? id : null;\n\n\t\tnew jBox(\"Notice\", {\n\t\t\tid: id,\n\t\t\tcontent: content,\n\t\t\toffset: {y: 35},\n\t\t\tanimation: \"flip\",\n\t\t\tcolor: color,\n\t\t\tautoClose: stick\n\t\t});\n\t}\n}\n\n// Init valdiation tooltips\nvar ValidationTooltips = new jBox(\"Tooltip\", {\n\ttrigger: null,\n\taddClass: \"validation-tooltip\",\n\tanimation: \"flip\",\n\tfade: 0\n});\n\nvar Tooltips = new jBox(\"Tooltip\", {\n\tattach: $(\"[data-tooltip]\"),\n\tgetContent: \"data-tooltip\",\n\tposition: {x: \"right\", y: \"center\"},\n\toutside: \"x\"\n});\n\nvar SystemActivityToolTips = new jBox(\"Tooltip\", {\n\tgetContent: \"data-tooltip\",\n\tposition: {y: \"bottom\"},\n\tappendTo: $(\"#chainParent\"),\n\treposition: true,\n\trepositionOnOpen: true,\n\tcreateOnInit: true,\n\tonOpen: function() {\n\t\tvar targetPos = positionRelativeTo(this.target[0], document.getElementById('chainParent'));\n\t\tvar nodePos = this.source.closest(\"[data-nodeid]\").position();\n\t\tvar parentPos = this.source.closest(\".nodeActivity\").position();\n\t\tvar nodeHeight = this.source.closest(\"[data-nodeid]\").height();\n\t\t// var nodeWidth = this.source.closest(\"[data-nodeid]\").width();\n\t\tvar tooltipWidth = this.container.parent().width();\n\t\t// var tooltipHeight = this.container.parent().height();\n\n\t\tthis.options.position = {x: targetPos.left + 3 - tooltipWidth /2 , y: targetPos.top + this.target[0].offsetHeight};\n\t}\n});\n\nvar WormholeRouteToolTips = new jBox(\"Tooltip\", {\n\tgetContent: \"data-tooltip\",\n\tposition: {y: \"bottom\"},\n\tappendTo: $(\"#chainParent\"),\n\treposition: true,\n\trepositionOnOpen: true,\n\tcreateOnInit: true,\n\tonOpen: function() {\n\t\tvar targetPos = positionRelativeTo(this.target[0], document.getElementById('chainParent'));\n\t\tvar nodeHeight = this.source.closest(\"[data-nodeid]\").height();\n\t\t// var nodeWidth = this.source.closest(\"[data-nodeid]\").width();\n\t\tvar tooltipWidth = this.container.parent().width();\n\t\t// var tooltipHeight = this.container.parent().height();\n\t\t\n\t\tthis.options.position = {x: targetPos.left + 3 - tooltipWidth /2 , y: targetPos.top + this.target[0].offsetHeight};\n\t}\n});\n\nvar WormholeTypeToolTips = new jBox(\"Tooltip\", {\n\tattach: $(\"#chainMap .whEffect[data-icon]\"),\n\tgetContent: \"data-tooltip\",\n\tposition: {x: \"left\", y: \"center\"},\n\tappendTo: $(\"#chainParent\"),\n\toutside: \"x\",\n\tadjustDistance: 100,\n\tresponsiveWidth: false,\n\treposition: true,\n\trepositionOnOpen: true,\n\tcreateOnInit: true,\n\tonOpen: function() {\n\t\tvar targetPos = positionRelativeTo(this.target[0], document.getElementById('chainParent'));\n\t\tvar tooltipWidth = this.container.parent().width();\n\n\t\tthis.options.position = {x: targetPos.left - tooltipWidth - 10, y: targetPos.top - 3};\n\t}\n});\n\nvar OccupiedToolTips = new jBox(\"Tooltip\", {\n\tpointer: \"top:-3\",\n\tposition: {x: \"right\", y: \"center\"},\n\tappendTo: $(\"#chainParent\"),\n\toutside: \"x\",\n\tminWidth: 100,\n\tanimation: \"move\",\n\tadjustDistance: 100,\n\tresponsiveWidth: false,\n\treposition: true,\n\trepositionOnOpen: true,\n\trepositionOnContent: true,\n\tcreateOnInit: true,\n\tonOpen: function() {\n\t\tvar tooltip = this;\n\t\tconst nodeElemJ = this.source.closest(\"[data-nodeid]\");\n\t\tvar systemID = nodeElemJ.data(\"nodeid\");\n\t\tvar targetPos = positionRelativeTo(this.target[0], document.getElementById('chainParent'));\n\n\t\tthis.options.position = {x: targetPos.left + this.target[0].offsetWidth, y: targetPos.top - 3};\n\n\t\ttooltip.setContent(\"&nbsp;\");\n\n\t\t$.ajax({\n\t\t\turl: \"occupants.php\",\n\t\t\tdataType: \"JSON\",\n\t\t\tdata: \"systemID=\"+systemID,\n\t\t\tcache: false\n\t\t}).done(function(data) {\n\t\t\tif (data && data.occupants) {\n\t\t\t\tvar chars = \"<table>\";\n\n\t\t\t\t// Sort by characterName\n\t\t\t\tdata.occupants.sort(function(a, b) {\n\t\t\t\t\tif (a.characterName.toLowerCase() < b.characterName.toLowerCase()) return -1;\n\t\t\t\t\tif (a.characterName.toLowerCase() > b.characterName.toLowerCase()) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tfor (var x in data.occupants) {\n\t\t\t\t\tchars += \"<tr><td>\"+data.occupants[x].characterName+\"</td><td style='padding-left: 10px;'>\"+(data.occupants[x].shipTypeName?data.occupants[x].shipTypeName:\"\")+\"</td></tr>\";\n\t\t\t\t}\n\n\t\t\t\tchars += \"</table>\";\n\t\t\t\ttooltip.setContent(chars);\n\t\t\t}\n\t\t});\n\t}\n});\n\n$(\"#chainTabs\").sortable({\n\titems: \"> .tab\",\n\taxis: \"x\",\n\tdelay: 150,\n\ttolerance: \"pointer\",\n\tcontainment: \"parent\",\n\tupdate: function(e, ui) {\n\t\tvar result = $(\"#chainTabs\").sortable(\"toArray\");\n\t\tvar newTabs = [];\n\n\t\tfor (var x in result) {\n\t\t\tnewTabs.push(options.chain.tabs[result[x]]);\n\t\t\t$(\"#chainTabs .tab:eq(\"+x+\")\").attr(\"id\", x);\n\t\t}\n\n\t\toptions.chain.active = $(\".tab.current\").index();\n\t\toptions.chain.tabs = newTabs;\n\t\toptions.save();\n\t}\n});\n\n$(\"#chainTabs\").on(\"click\", \".tab\", function(e) {\n\te.preventDefault();\n\tchain.setActiveTab($(this).hasClass(\"current\") ? null : $(this).index())\n});\n\n$(\"#chainTabs\").on(\"click\", \".closeTab\", function(e) {\n\te.stopPropagation();\n\tvar $tab = $(this).closest(\".tab\");\n\n\t$(\"#dialog-confirm #msg\").html(\"This tab will be removed, are you sure?\");\n\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\tbuttons: {\n\t\t\t\"Remove Tab\": function() {\n\t\t\t\tvar i = $tab.index();\n\n\t\t\t\toptions.chain.active = $(\".tab.current\").index();\n\t\t\t\toptions.chain.tabs.splice(i, 1);\n\t\t\t\toptions.save();\n\n\t\t\t\t$tab.remove();\n\t\t\t\tif ($(\"#chainTabs .tab.current\").length == 0) {\n\t\t\t\t\t$(\"#chainTabs .tab:last\").click();\n\t\t\t\t}\n\n\t\t\t\tfor (var x = 0, l = $(\"#chainTabs .tab\").length; x < l; x++) {\n\t\t\t\t\t$(\"#chainTabs .tab:eq(\"+x+\")\").attr(\"id\", x);\n\t\t\t\t}\n\n\t\t\t\t$(this).dialog(\"close\");\n\t\t\t},\n\t\t\tCancel: function() {\n\t\t\t\t$(this).dialog(\"close\");\n\t\t\t}\n\t\t}\n\t}).dialog(\"open\");\n});\n\n$(\"#newTab\").on(\"click\", function() {\n\t// check if dialog is open\n\tif (!$(\"#dialog-newTab\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-newTab\").dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 0,\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tOK: function() {\n\t\t\t\t\t$(\"#newTab_form\").submit();\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$(\"#dialog-newTab .name\").val(viewingSystem).focus();\n\t\t\t\t$(\"#dialog-newTab .sigSystemsAutocomplete\").val(viewingSystem);\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tValidationTooltips.close();\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\t$(\"#dialog-newTab .sigSystemsAutocomplete\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\n\t\t\t\t$(\"#newTab_form\").submit(function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar $tab = $(\"#chainTab .tab\").clone();\n\t\t\t\t\tvar name = $(\"#dialog-newTab .name\").val();\n\t\t\t\t\tvar systemID = lookupByPropertyMultiple(tripwire.systems, \"name\", $(\"#dialog-newTab .sigSystemsAutocomplete\").val(), true);\n\t\t\t\t\tvar thera = $(\"#tabThera\")[0].checked ? true : false;\n\n\t\t\t\t\tif (!name) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-newTab .name\")}).setContent(\"Must have a name!\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!systemID && $(\"#tabType1\")[0].checked) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-newTab .sigSystemsAutocomplete\")}).setContent(\"Must have valid systems (comma separated if multiple)!\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if ($(\"#tabType2\")[0].checked) {\n\t\t\t\t\t\tsystemID = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t$tab.attr(\"id\", $(\"#chainTabs .tab\").length).find(\".name\").data(\"tab\", systemID).html(name);\n\t\t\t\t\toptions.chain.tabs.push({systemID: systemID, name: name, evescout: thera});\n\t\t\t\t\toptions.save();\n\n\t\t\t\t\t$(\"#chainTabs\").append($tab);\n\n\t\t\t\t\t$(\"#dialog-newTab\").dialog(\"close\");\n\t\t\t\t});\n\n\t\t\t\t$(\"#dialog-newTab .sigSystemsAutocomplete\").click(function(e) {\n\t\t\t\t\t$(\"#dialog-newTab #tabType1\").click();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-newTab\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-newTab\").dialog(\"open\");\n\t}\n});\n\n$(\"#chainTabs\").on(\"click\", \".editTab\", function(e) {\n\te.stopPropagation();\n\n\t// check if dialog is open\n\tif (!$(\"#dialog-editTab\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-editTab\").dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 0,\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tOK: function() {\n\t\t\t\t\t$(\"#editTab_form\").submit();\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$(\"#dialog-editTab .name\").val(options.chain.tabs[options.chain.active].name).focus();\n\t\t\t\t$(\"#dialog-editTab .sigSystemsAutocomplete\").val(options.chain.tabs[options.chain.active].systemID != 0 ? lookupMultiple(tripwire.systems, 'name', options.chain.tabs[options.chain.active].systemID) : \"\");\n\t\t\t\toptions.chain.tabs[options.chain.active].systemID != 0 ? $(\"#dialog-editTab #editTabType1\")[0].checked = true : $(\"#dialog-editTab #editTabType2\")[0].checked = true;\n\t\t\t\t$(\"#dialog-editTab #editTabThera\")[0].checked = options.chain.tabs[options.chain.active].evescout;\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tValidationTooltips.close();\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\t$(\"#dialog-editTab .sigSystemsAutocomplete\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\n\t\t\t\t$(\"#editTab_form\").submit(function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar $tab = $(\"#chainTabs .tab\").eq([options.chain.active]);\n\t\t\t\t\tvar name = $(\"#dialog-editTab .name\").val();\n\t\t\t\t\tvar systemID = lookupByPropertyMultiple(tripwire.systems, \"name\", $(\"#dialog-editTab .sigSystemsAutocomplete\").val(), true);\n\t\t\t\t\tvar thera = $(\"#editTabThera\")[0].checked ? true : false;\n\n\t\t\t\t\tif (!name) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-editTab .name\")}).setContent(\"Must have a name!\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!systemID && $(\"#editTabType1\")[0].checked) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-editTab .sigSystemsAutocomplete\")}).setContent(\"Must have valid systems (comma separated if multiple)!\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if ($(\"#editTabType2\")[0].checked) {\n\t\t\t\t\t\tsystemID = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t$tab.attr(\"id\", $(\"#chainTabs .tab\").length).find(\".name\").data(\"tab\", systemID).html(name);\n\t\t\t\t\toptions.chain.tabs[options.chain.active] = {systemID: systemID, name: name, evescout: thera};\n\t\t\t\t\toptions.save();\n\t\t\t\t\tchain.redraw();\n\n\t\t\t\t\ttripwire.parse(tripwire.client, \"refresh\");\n\n\t\t\t\t\t//$(\"#chainTabs\").append($tab);\n\n\t\t\t\t\t$(\"#dialog-editTab\").dialog(\"close\");\n\t\t\t\t});\n\n\t\t\t\t$(\"#dialog-editTab .sigSystemsAutocomplete\").click(function(e) {\n\t\t\t\t\t$(\"#dialog-editTab #editTabType1\").click();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-editTab\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-editTab\").dialog(\"open\");\n\t}\n});\n\n// Signature column context menu\n$(\"#signaturesWidget #sigTable thead\").contextmenu({\n\tdelegate: \"th.sortable\",\n\tmenu: \"#signatureColumnMenu\",\n\tposition: function(event, ui) {\n        return {my: \"left top\", at: \"center\", of: ui.target};\n    },\n\tselect: function(e, ui) {\n\t\tvar col = $(ui.target).parent().parent().children().index($(ui.target).parent()) + 1;\n\n\t\tswitch(col) {\n\t\t\tcase 1:\n\t\t\t\tcolName = \"sigID\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcolName = \"sigType\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcolName = \"sigAge\";\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tcolName = \"leadsTo\";\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tcolName = \"sigLife\";\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tcolName = \"sigMass\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch(ui.cmd) {\n\t\t\tcase \"leftAlign\":\n\t\t\t\t$(\"#signaturesWidget #sigTable tbody td:nth-child(\"+ col +\")\").removeClass(\"centerAlign rightAlign\").addClass(\"leftAlign\");\n\t\t\t\toptions.signatures.alignment[colName] = \"leftAlign\";\n\t\t\t\tbreak;\n\t\t\tcase \"centerAlign\":\n\t\t\t\t$(\"#signaturesWidget #sigTable tbody td:nth-child(\"+ col +\")\").removeClass(\"leftAlign rightAlign\").addClass(\"centerAlign\");\n\t\t\t\toptions.signatures.alignment[colName] = \"centerAlign\";\n\t\t\t\tbreak;\n\t\t\tcase \"rightAlign\":\n\t\t\t\t$(\"#signaturesWidget #sigTable tbody td:nth-child(\"+ col +\")\").removeClass(\"centerAlign leftAlign\").addClass(\"rightAlign\");\n\t\t\t\toptions.signatures.alignment[colName] = \"rightAlign\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\toptions.save();\n\t},\n\tbeforeOpen: function(e, ui) {\n\t\tvar col = $(ui.target).parent().parent().children().index($(ui.target).parent()) + 1;\n\n\t\tswitch(col) {\n\t\t\tcase 1:\n\t\t\t\tcolName = \"sigID\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcolName = \"sigType\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcolName = \"sigAge\";\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tcolName = \"leadsTo\";\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tcolName = \"sigLife\";\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tcolName = \"sigMass\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$(this).contextmenu(\"enableEntry\", \"leftAlign\", true);\n\t\t$(this).contextmenu(\"enableEntry\", \"centerAlign\", true);\n\t\t$(this).contextmenu(\"enableEntry\", \"rightAlign\", true);\n\n\t\t$(this).contextmenu(\"enableEntry\", options.signatures.alignment[colName], false);\n\t}\n});\n\n// Chain Map Context Menu\n$(\"#chainParent\").contextmenu({\n\tappendTo: \"#chainParent\",\n\tdelegate: \".nodeSystem a\",\n\tposition: function(event, ui) {\n        return {my: \"left top-1\", at: \"right top\", of: ui.target};\n    },\n\tmenu: \"#chainMenu\",\n\tshow: {effect: \"slideDown\", duration: 150},\n\tselect: function(e, ui) {\n\t\tconst nodeElem = $(ui.target[0]).closest(\"[data-nodeid]\");\n\t\tvar id = nodeElem.data(\"nodeid\");\n\t\tvar row = nodeElem.attr(\"id\").replace(\"node\", \"\") -1;\n\n\t\tswitch(ui.cmd) {\n\t\t\tcase \"showInfo\":\n\t\t\t\ttripwire.esi.showInfo(id, options.tracking.active);\n\t\t\t\tbreak;\n\t\t\tcase \"setDest\":\n\t\t\t\ttripwire.esi.setDestination(id, options.tracking.active, true);\n\t\t\t\tbreak;\n\t\t\tcase \"addWay\":\n\t\t\t\ttripwire.esi.setDestination(id, options.tracking.active, false);\n\t\t\t\tbreak;\n\t\t\tcase \"showMap\":\n\t\t\t\t// CCPEVE.showMap(id);\n\t\t\t\tbreak;\n\t\t\tcase \"red\":\n\t\t\t\tnodeElem.hasClass(\"redNode\") ? $(this).contextmenu(\"removeFlare\", id, ui) : $(this).contextmenu(\"setFlare\", id, ui.cmd, ui);\n\t\t\t\tbreak;\n\t\t\tcase \"yellow\":\n\t\t\t\tnodeElem.hasClass(\"yellowNode\") ? $(this).contextmenu(\"removeFlare\", id, ui) : $(this).contextmenu(\"setFlare\", id, ui.cmd, ui);\n\t\t\t\tbreak;\n\t\t\tcase \"green\":\n\t\t\t\tnodeElem.hasClass(\"greenNode\") ? $(this).contextmenu(\"removeFlare\", id, ui) : $(this).contextmenu(\"setFlare\", id, ui.cmd, ui);\n\t\t\t\tbreak;\n\t\t\tcase \"mass\":\n\t\t\t\t$(\"#dialog-mass\").data(\"id\", nodeElem.data(\"sigid\")).data(\"systemID\", id).dialog(\"open\");\n\t\t\t\tbreak;\n\t\t\tcase \"ping\":\n\t\t\t\t$(\"#dialog-ping\").data(\"id\", nodeElem.data(\"sigid\") || null).data(\"systemID\", id).dialog(\"open\");\n\t\t\t\tbreak;\n\t\t\tcase \"collapse\":\n\t\t\t\tvar toggle = options.chain.tabs[options.chain.active] ? ($.inArray(id, options.chain.tabs[options.chain.active].collapsed) == -1 ? true : false) : true;\n\t\t\t\tchain.renderer.collapse(id, toggle);\n\t\t\t\tbreak;\n\t\t\tcase \"makeTab\":\n\t\t\t\tconst existingTabIndex = Object.index(options.chain.tabs, 'systemID', '' + id, false);\n\t\t\t\tif(undefined !== existingTabIndex) {\n\t\t\t\t\tchain.setActiveTab(existingTabIndex);\n\t\t\t\t} else {\n\t\t\t\t\tconst systemName = tripwire.systems[id].name;\n\t\t\t\t\toptions.chain.tabs.push({systemID: '' + id, name: systemName});\n\t\t\t\t\tvar newTab = $(\"#chainTab .tab\").clone();\n\t\t\t\t\tnewTab.attr('id', options.chain.tabs.length - 1).find(\".name\").data(\"tab\", id).html(systemName);\n\t\t\t\t\t$(\"#chainTabs\").append(newTab);\n\t\t\t\t\tchain.setActiveTab(options.chain.tabs.length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tbeforeOpen: function(e, ui) {\n\t\tvar wormholeID = $(ui.target[0]).closest(\"[data-nodeid]\").data(\"sigid\") || null;\n\t\tvar systemID = $(ui.target[0]).closest(\"[data-nodeid]\").data(\"nodeid\");\n\n\t\t// Add check for k-space\n\t\tif (tripwire.systems[systemID].class || !tripwire.esi.characters[options.tracking.active]) {\n\t\t\t$(this).contextmenu(\"enableEntry\", \"setDest\", false);\n\t\t\t$(this).contextmenu(\"enableEntry\", \"addWay\", false);\n\t\t\t$(this).contextmenu(\"enableEntry\", \"showMap\", false);\n\t\t} else {\n\t\t\t$(this).contextmenu(\"enableEntry\", \"setDest\", true);\n\t\t\t$(this).contextmenu(\"enableEntry\", \"addWay\", true);\n\t\t\t$(this).contextmenu(\"enableEntry\", \"showMap\", false);\n\t\t}\n\t\t\n\t\t// Add check for in-sig\n\t\tif (wormholeID) {\n\t\t\t$(this).contextmenu(\"enableEntry\", \"mass\", true);\n\t\t} else {\n\t\t\t$(this).contextmenu(\"enableEntry\", \"mass\", false);\n\t\t}\n\t\t\n\t\t// Add check for tab validity\n\t\tconst existingTab = Object.find(options.chain.tabs, 'systemID', '' + systemID, false);\n\t\t$('#makeTabMenuItem').text(existingTab ? 'View Tab' : 'Make Tab' );\n\t},\n\tcreate: function(e, ui) {\n\t\t// Fix some bad CSS from jQuery Position\n\t\t$(this).find(\".ui-front\").css(\"width\", \"10em\");\n\t\t$(this).find(\".ui-front\").css(\"position\", \"\");\n\n\t\t$(\"#dialog-mass\").dialog({\n\t\t\tautoOpen: false,\n\t\t\twidth: \"auto\",\n\t\t\theight: \"auto\",\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tClose: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\tvar wormholeID = $(this).data(\"id\");\n\t\t\t\tvar systemID = $(this).data(\"systemID\");\n\t\t\t\tvar wormhole = tripwire.client.wormholes[wormholeID];\n\t\t\t\tvar signature = tripwire.client.signatures[wormhole.initialID];\n\t\t\t\tvar otherSignature = tripwire.client.signatures[wormhole.secondaryID];\n\n\t\t\t\t$(\"#dialog-mass\").dialog(\"option\", \"title\", \"From \"+tripwire.systems[signature.systemID].name+\" to \"+tripwire.systems[otherSignature.systemID].name);\n\n\t\t\t\t$(\"#dialog-mass #massTable tbody tr\").remove();\n\n\t\t\t\tvar payload = {wormholeID: wormhole.id};\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: \"mass.php\",\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: payload,\n\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t}).done(function(data) {\n\t\t\t\t\tif (data && data.mass) {\n                        var totalMass = 0;\n\t\t\t\t\t\tfor (x in data.mass) {\n                            totalMass += parseFloat(data.mass[x].mass);\n\t\t\t\t\t\t\t$(\"#dialog-mass #massTable tbody\").append(\"<tr><td>\"+data.mass[x].characterName+\"</td><td>\"+(data.mass[x].toID == systemID ? \"In\" : \"Out\")+\"</td><td>\"+data.mass[x].shipType+\"</td><td>\"+numFormat(data.mass[x].mass)+\"Kg</td><td>\"+data.mass[x].time+\"</td></tr>\");\n\t\t\t\t\t\t}\n                        $(\"#dialog-mass #massTable tbody\").append(\"<tr><td></td><td></td><td></td><th>\"+ numFormat(totalMass) +\"Kg</th><td></td></tr>\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$.moogle.contextmenu.prototype.setFlare = function(systemID, flare, ui) {\n\t\t\tvar data = {\"systemID\": systemID, \"flare\": flare};\n\n\t\t\t$.ajax({\n\t\t\t\turl: \"flares.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdata: data,\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tif (data && data.result) {\n\t\t\t\t\t// $(ui.target[0]).closest(\"td\").removeClass(\"redNode yellowNode greenNode\").addClass(flare+\"Node\");\n\n\t\t\t\t\tchain.data.flares.flares.push({systemID: systemID, flare: flare, time: null});\n\t\t\t\t\tchain.flares(chain.data.flares);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$.moogle.contextmenu.prototype.removeFlare = function(systemID, ui) {\n\t\t\tvar data = {\"systemID\": systemID};\n\n\t\t\t$.ajax({\n\t\t\t\turl: \"flares.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdata: data,\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tif (data && data.result) {\n\t\t\t\t\t// $(ui.target[0]).closest(\"td\").removeClass(\"redNode yellowNode greenNode\");\n\n\t\t\t\t\tchain.data.flares.flares.splice(Object.index(chain.data.flares.flares, \"systemID\", systemID), 1);\n\t\t\t\t\tchain.flares(chain.data.flares);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// Used to generate eve-survival guide link\nfunction linkSig(sigName) {\n\tvar wormholeSignatures = [\n\t\t// Ore sites\n\t\t\"Average Frontier Deposit\",\n\t\t\"Unexceptional Frontier Deposit\",\n\t\t\"Common Perimeter Deposit\",\n\t\t\"Exceptional Core Deposit\",\n\t\t\"Infrequent Core Deposit\",\n\t\t\"Unusual Core Deposit\",\n\t\t\"Rarified Core Deposit\",\n\t\t\"Isolated Core Deposit\",\n\t\t\"Ordinary Permiter Deposit\",\n\t\t\"Uncommon Core Deposit\",\n\n\t\t// Gas Sites\n\t\t\"Barren Perimeter Reservoir\",\n\t\t\"Minor Perimeter Reservoir\",\n\t\t\"Ordinary Perimeter Reservoir\",\n\t\t\"Sizeable Perimeter Reservoir\",\n\t\t\"Token Perimeter Reservoir\",\n\t\t\"Bountiful Frontier Reservoir\",\n\t\t\"Vast Frontier Reservoir\",\n\t\t\"Instrumental Core Reservoir\",\n\t\t\"Vital Core Reservoir\",\n\n\t\t// Class 1\n\t\t\"Perimeter Ambush Point\",\n\t\t\"Perimeter Camp\",\n\t\t\"Phase Catalyst Node\",\n\t\t\"The Line\",\n\t\t\"Forgotten Perimeter Coronation Platform\",\n\t\t\"Forgotten Perimeter Power Array\",\n\t\t\"Unsecured Perimeter Amplifier\",\n\t\t\"Unsecured Perimeter Information Center\",\n\n\t\t// Class 2\n\t\t\"Perimeter Checkpoint\",\n\t\t\"Perimeter Hangar\",\n\t\t\"The Ruins of Enclave Cohort 27\",\n\t\t\"Sleeper Data Sanctuary\",\n\t\t\"Forgotten Perimeter Gateway\",\n\t\t\"Forgotten Perimeter Habitation Coils\",\n\t\t\"Unsecured Perimeter Comms Relay\",\n\t\t\"Unsecured Perimeter Transponder Farm\",\n\n\t\t// Class 3\n\t\t\"Fortification Frontier Stronghold\",\n\t\t\"Outpost Frontier Stronghold\",\n\t\t\"Solar Cell\",\n\t\t\"The Oruze Construct\",\n\t\t\"Forgotten Frontier Quarantine Outpost\",\n\t\t\"Forgotten Frontier Recursive Depot\",\n\t\t\"Unsecured Frontier Database\",\n\t\t\"Unsecured Frontier Receiver\",\n\n\t\t// Class 4\n\t\t\"Frontier Barracks\",\n\t\t\"Frontier Command Post\",\n\t\t\"Integrated Terminus\",\n\t\t\"Sleeper Information Sanctum\",\n\t\t\"Forgotten Frontier Conversion Module\",\n\t\t\"Forgotten Frontier Evacuation Center\",\n\t\t\"Unsecured Frontier Digital Nexus\",\n\t\t\"Unsecured Frontier Trinary Hub\",\n\n\t\t// Class 5\n\t\t\"Core Garrison\",\n\t\t\"Core Stronghold\",\n\t\t\"Oruze Osobnyk\",\n\t\t\"Quarantine Area\",\n\t\t\"Forgotten Core Data Field\",\n\t\t\"Forgotten Core Information Pen\",\n\t\t\"Unsecured Frontier Enclave Relay\",\n\t\t\"Unsecured Frontier Server Bank\",\n\n\t\t// Class 6\n\t\t\"Core Citadel\",\n\t\t\"Core Bastion\",\n\t\t\"Strange Energy Readings\",\n\t\t\"The Mirror\",\n\t\t\"Forgotten Core Assembly Hall\",\n\t\t\"Forgotten Core Circuitry Disassembler\",\n\t\t\"Unsecured Core Backup Array\",\n\t\t\"Unsecured Core Emergence\"\n\t];\n\n\tif (wormholeSignatures.indexOf(sigName) > -1) {\n\t\treturn '<a href=\"http://eve-survival.org/wikka.php?wakka='+sigName.replace(/ /g, '')+'\" target=\"_blank\" class=\"siteLink\">'+sigName+'</a>';\n\t}\n\n\treturn sigName;\n}\n\n// Custom inlinecomplete + dropdown input\n$.widget(\"custom.inlinecomplete\", $.ui.autocomplete, {\n\t_create: function() {\n\t\tif (!this.element.is(\"input\")) {\n\t\t\tthis._selectInit();\n\t\t}\n\n\t\t// Invoke the parent function\n\t\treturn this._super();\n\t},\n\t_value: function() {\n\t\t// Invoke the parent function\n\t\tvar originalReturn = this._superApply(arguments);\n\n\t\tthis.element.change();\n\n\t\treturn originalReturn;\n\t},\n\t_suggest: function(items) {\n\t\t// if (this.element.val() != items[0].value) {\n\t\t\t// this.element.val(items[0].value.substr(0, this.element.val().length));\n\t\t// }\n\n\t\t// Invoke the parent function\n\t\treturn this._super(items);\n\t},\n\t_initSource: function() {\n\t\tif ($.isArray(this.options.source)) {\n\t\t\tthis.source = function(request, response) {\n\t\t\t\tvar matcher = new RegExp(\"^\" + $.ui.autocomplete.escapeRegex(request.term), \"i\");\n\t\t\t\tvar results = new Array(); // results array\n\t\t\t\tvar data = this.options.source;\n\t\t\t\tvar maxSize = this.options.maxSize || 25; // maximum result size\n\t\t\t\t// simple loop for the options\n\t\t\t\tfor (var i = 0, l = data.length; i < l; i++) {\n\t\t\t\t\tif (matcher.test(data[i])) {\n\t\t\t\t\t\tresults.push(data[i]);\n\n\t\t\t\t\t\tif (maxSize && results.length > maxSize) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t // send response\n\t\t\t\t response(results);\n\t\t\t}\n\t\t} else {\n\t\t\t// Invoke the parent function\n\t\t\treturn this._super();\n\t\t}\n\t},\n\t_close: function(event) {\n\t\tthis.options.source = this.options.input_source ? this.options.input_source : this.options.source;\n\n\t\t// Invoke the parent function\n\t\treturn this._super(event);\n\t},\n\taddToSelect: function(value) {\n\t\tthis.options.select_added_value = value;\n\t\tthis.options.select_source.unshift(value);\n\t},\n\tremoveFromSelect: function(value) {\n\t\tif (value) {\n\t\t\tthis.options.select_source.splice(value, 1);\n\t\t} else if (this.options.select_added_value) {\n\t\t\tthis.options.select_source.splice(this.options.select_added_value, 1);\n\t\t}\n\t\tthis.options.select_added_value = null;\n\t},\n\t_selectInit: function() {\n\t\tthis.element.addClass(\"custom-combobox\");\n\t\tthis.wrapper = this.element;\n\t\tthis.element = this.wrapper.find(\"input:first\");\n\t\tthis.select = this.wrapper.find(\"select:first\").remove();\n\n\t\tthis.options.input_source = this.options.source;\n\t\tthis.options.select_source = this.select.children(\"option[value!='']\").map(function() {\n            return $.trim(this.text);\n        }).toArray();\n\n\t\tthis._createShowAllButton();\n\t},\n\t_createShowAllButton: function() {\n        var that = this,\n          wasOpen = false;\n\n        $(\"<a>\")\n\t\t\t.attr(\"tabIndex\", that.element.prop(\"tabindex\"))\n\t\t\t.attr(\"title\", \"\")\n\t\t\t.appendTo(that.wrapper)\n\t\t\t.button({icons: {primary: \"ui-icon-triangle-1-s\"}, text: false})\n\t\t\t.removeClass(\"ui-corner-all\")\n\t\t\t.addClass(\"custom-combobox-toggle ui-corner-right\")\n\t\t\t.on(\"mousedown\", function() {\n\t\t\t\twasOpen = that.widget().is(\":visible\");\n\t\t\t})\n\t\t\t.on(\"click\", function() {\n\t\t\t\tthat.element.trigger(\"focus\");\n\n\t\t\t\t// Close if already visible\n\t\t\t\tif (wasOpen) {\n\t\t\t\t  return;\n\t\t\t\t}\n\n\t\t\t\t// Pass empty string as value to search for, displaying all results\n\t\t\t\tthat.options.source = that.options.select_source;\n\t\t\t\tthat._search(\"\");\n\t\t\t});\n\t},\n});\n\n// Initialize tablesorter plugin on signaturesWidget table\n$(\"#sigTable\").tablesorter({\n\tsortReset: true,\n\twidgets: ['saveSort'],\n\ttextExtraction: {\n\t\t2: function(node) { return $(node).find(\"span\").data(\"age\"); }\n\t}\n});\n\n// Highlight signaturesWidget tr on click\n$(\"#sigTable tbody\").on(\"click\", \"tr\", function(e) {\n\tif (e.metaKey || e.ctrlKey) {\n\t\t// ctrl or cmd key\n\t\t$(this).toggleClass(\"selected\");\n\t} else if (e.shiftKey) {\n\t\t// shift key\n\t\t$(this).addClass(\"selected\");\n\t\t$(\"#sigTable tbody tr.selected:first\").nextUntil(\"#sigTable tbody tr.selected:last\").addBack().add(\"#sigTable tbody tr.selected:last\").addClass(\"selected\");\n\t} else {\n\t\t$(\"#sigTable tbody tr.selected\").removeClass(\"selected\");\n\t\t$(this).addClass(\"selected\");\n\t}\n});\n\n// Un-Highlight signaturesWidget tr on clicking outside\n$(document).click(function(e) {\n    if(!$(e.target).closest('#sigTable tbody').length && !$(e.target).closest('#edit-signature').length && !$(e.target).closest('#delete-signature').length) {\n\t\t$(\"#sigTable tbody tr.selected\").removeClass(\"selected\");\n    }\n});\n\n// Monitor custom 'classchange' event\n$(\"#sigTable tbody\").on(\"classchange\", \"tr\", function(e, className) {\n\t// Trigger signaturesWidget selected row change custom event\n\tif (className === \"selected\") {\n\t\t$(\"#signaturesWidget\").trigger(\"selected:change\");\n\t}\n});\n\n// Update signaturesWidget based on .selected rows change\n$(\"#signaturesWidget\").on(\"selected:change\", function() {\n\t// Enable/Disable delete icon\n\tif ($(\"#sigTable tr.selected\").length === 0) {\n\t\t$(\"#signaturesWidget #delete-signature\").addClass(\"disabled\");\n\t} else {\n\t\t$(\"#signaturesWidget #delete-signature\").removeClass(\"disabled\");\n\t}\n\n\t// Enable/Disable edit icon\n\tif ($(\"#sigTable tr.selected\").length === 1) {\n\t\t$(\"#signaturesWidget #edit-signature\").removeClass(\"disabled\");\n\t} else {\n\t\t$(\"#signaturesWidget #edit-signature\").addClass(\"disabled\");\n\t}\n})\n\n$(\"#dialog-error\").dialog({\n\tautoOpen: false,\n\tresizable: false,\n\tminHeight: 0,\n\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\tbuttons: {\n\t\tOk: function() {\n\t\t\t$(this).dialog(\"close\");\n\t\t}\n\t},\n\tcreate: function() {\n\t\t$(this).dialog(\"option\", \"show\", {effect: \"shake\", duration: 150, easing: \"easeOutElastic\"});\n\t}\n});\n\n$(\"#dialog-msg\").dialog({\n\tautoOpen: false,\n\tresizable: false,\n\tminHeight: 0,\n\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\tbuttons: {\n\t\tOk: function() {\n\t\t\t$(this).dialog(\"close\");\n\t\t}\n\t}\n});\n\n$(\"#dialog-confirm\").dialog({\n\tautoOpen: false,\n\tresizable: false,\n\tminHeight: 0,\n\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\tbuttons: {\n\t\tCancel: function() {\n\t\t\t$(this).dialog(\"close\");\n\t\t}\n\t}\n});\n\nif (window.location.href.indexOf(\"galileo\") != -1) {\n\tNotify.trigger(\"This is the test version of Tripwire.<br/>Please use <a href='https://tripwire.cloud-things.com'>Tripwire</a>\")\n}\n","const systemAnalysis = new function() {\n\tconst mutators = [];\n\tthis.addMutator = function(m) { mutators.push(m); }\n\t\n\t/** Extract attributes of the system, and allow mutators to add/modify them.\n\t\tOptionally, pass in a system object */\n\tthis.analyse = function(systemID, system) {\n\t\tif(!system) { system = tripwire.systems[systemID]; }\n\t\tif(!system) { return system; }\n\t\tconst r = Object.assign({}, system);\n\t\t\n\t\t// Defaults or saved original values\n\t\tr.baseSecurity = 1 * system.security;\n\t\tr.pathSymbol = '■';\n\t\tr.systemTypeModifiers = [];\t\t\n\t\t\n\t\tmutators.forEach(function(m) { m.mutate(r, systemID); });\n\t\t\n\t\t// Calculated final values\n\t\tr.systemTypeClass = r.class ? 'wh class-' + r.class :\n\t\t\tr.factionID == 500026 ? 'triglavian' :\n\t\t\tr.security >= 0.45 ? 'hisec' :\n\t\t\tr.security > 0.0 ? 'lowsec' :\n\t\t\tr.security <= 0.0 ? 'nullsec' :\n\t\t\t'unknown';\n\t\tr.systemTypeName = r.class ? 'C' + r.class :\n\t\t\tr.factionID == 500026 ? 'Trig' :\n\t\t\tr.baseSecurity >= 0.45 ? 'HS' :\n\t\t\tr.baseSecurity > 0.0 ? 'LS' :\n\t\t\tr.baseSecurity <= 0.0 ? 'NS' :\n\t\t\t' ';\n\t\t\t\n\t\treturn r;\n\t};\n\n}","var guidance = (function (undefined) {\n\n\tvar extractKeys = function (obj) {\n\t\tvar keys = [];\n\n\t\tfor (var key in obj) {\n\t\t    Object.prototype.hasOwnProperty.call(obj,key) && keys.push(key);\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tvar sorter = function (a, b) {\n\t\treturn parseFloat (a) - parseFloat (b);\n\t}\n\n\tfunction adjustCostForOptions(mapCost, system) {\n\t\tvar system = systemAnalysis.analyse(30000000 + 1 * system);\n\t\tif(!system) { return mapCost; }\n\t\tif(options.chain.routeIgnore.enabled && options.chain.routeIgnore.systems.indexOf(system.name) >= 0) {\n\t\t\tmapCost += 100;\t// Penalty for an avoided system\n\t\t}\n\t\tswitch(options.chain.routeSecurity) {\n\t\t\tcase 'highsec': return mapCost + (system.security < 0.45 ? 100 : 0);\n\t\t\tcase 'avoid-high': return mapCost + (system.security >= 0.45 ? 100 : 0);\n\t\t\tcase 'avoid-null': return mapCost + (system.security <= 0.0 ? 100 : 0);\n\t\t\tdefault: return mapCost;\t// in case of some invalid option, default to shortest\n\t\t}\n\t}\n\n\tvar findPaths = function (map, start, end, infinity) {\n\t\tinfinity = infinity || Infinity;\n\n\t\tvar costs = {},\n\t\t    open = {'0': [start]},\n\t\t    predecessors = {},\n\t\t    keys;\n\n\t\tvar addToOpen = function (cost, vertex) {\n\t\t\tvar key = \"\" + cost;\n\t\t\tif (!open[key]) open[key] = [];\n\t\t\topen[key].push(vertex);\n\t\t}\n\n\t\tcosts[start] = 0;\n\n\t\twhile (open && !costs[end]) {\n\t\t\tif(!(keys = extractKeys(open)).length) break;\n\n\t\t\tkeys.sort(sorter);\n\n\t\t\tvar key = keys[0],\n\t\t\t    bucket = open[key],\n\t\t\t    node = bucket.shift(),\n\t\t\t    currentCost = parseFloat(key),\n\t\t\t    adjacentNodes = map[node] || {};\n\n\t\t\tif (!bucket.length) delete open[key];\n\n\t\t\tfor (var vertex in adjacentNodes) {\n\t\t\t    if (Object.prototype.hasOwnProperty.call(adjacentNodes, vertex)) {\n\t\t\t\t\tvar cost = adjustCostForOptions(adjacentNodes[vertex], vertex),\n\t\t\t\t\t    totalCost = cost + currentCost,\n\t\t\t\t\t    vertexCost = costs[vertex];\n\n\t\t\t\t\tif ((vertexCost === undefined) || (vertexCost > totalCost)) {\n\t\t\t\t\t\tcosts[vertex] = totalCost;\n\t\t\t\t\t\taddToOpen(totalCost, vertex);\n\t\t\t\t\t\tpredecessors[vertex] = node;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (costs[end] === undefined) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn predecessors;\n\t\t}\n\n\t}\n\n\tvar extractShortest = function (predecessors, end) {\n\t\tvar nodes = [],\n\t\t    u = end;\n\n\t\twhile (u) {\n\t\t\tnodes.push(u);\n\t\t\tpredecessor = predecessors[u];\n\t\t\tu = predecessors[u];\n\t\t}\n\n\t\tnodes.reverse();\n\t\treturn nodes;\n\t}\n\n\tvar findShortestPath = function (map, nodes) {\n\t\tvar start = nodes.shift(),\n\t\t    end,\n\t\t    predecessors,\n\t\t    path = [],\n\t\t    shortest;\n\n\t\twhile (nodes.length) {\n\t\t\tend = nodes.shift();\n\t\t\tpredecessors = findPaths(map, start, end);\n\n\t\t\tif (predecessors) {\n\t\t\t\tshortest = extractShortest(predecessors, end);\n\t\t\t\tif (nodes.length) {\n\t\t\t\t\tpath.push.apply(path, shortest.slice(0, -1));\n\t\t\t\t} else {\n\t\t\t\t\treturn path.concat(shortest);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tstart = end;\n\t\t}\n\t}\n\n\tvar toArray = function (list, offset) {\n\t\ttry {\n\t\t\treturn Array.prototype.slice.call(list, offset);\n\t\t} catch (e) {\n\t\t\tvar a = [];\n\t\t\tfor (var i = offset || 0, l = list.length; i < l; ++i) {\n\t\t\t\ta.push(list[i]);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t}\n\n\tvar Guidance = function (map) {\n\t\tthis.map = map;\n\t}\n\n\tGuidance.prototype.findShortestPath = function (start, end) {\n\t\tvar result;\n\n\t\tif (Object.prototype.toString.call(start) === '[object Array]') {\n\t\t\tresult = findShortestPath(this.map, start);\n\t\t} else if (arguments.length === 2) {\n\t\t\tresult = findShortestPath(this.map, [start, end]);\n\t\t} else {\n\t\t\tresult = findShortestPath(this.map, toArray(arguments));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tGuidance.findShortestPath = function (map, start, end) {\n\t\tif (Object.prototype.toString.call(start) === '[object Array]') {\n\t\t\treturn findShortestPath(map, start);\n\t\t} else if (arguments.length === 3) {\n\t\t\treturn findShortestPath(map, [start, end]);\n\t\t} else {\n\t\t\treturn findShortestPath(map, toArray(arguments, 1));\n\t\t}\n\t}\n\n\treturn Guidance;\n})();\n","const thera = new _TheraConnection();\n\nfunction _TheraConnection() {\n\tconst _this = this;\n\t\n\tthis.links = [];\n\t\n\tthis.active = function() {\n\t\treturn options.chain.tabs[options.chain.active] && options.chain.tabs[options.chain.active].evescout;\n\t}\n\t\n\tthis.nodeNameSuffix = 'eve-scout-thera';\n\t\n\tthis.findLinks = function(systemID, ids) {\n\t\tif(!_this.active()) { return; }\n\t\t\n\t\tconst r = [];\n\t\tfor(var ti = 0; ti < this.links.length; ti++) {\n\t\t\tvar theraNode;\n\t\t\tconst theraLink = this.links[ti];\n\t\t\tconst theraID = 'T-' + theraLink.id;\n\t\t\t\n\t\t\tconst nodeDefaults = {\n\t\t\t\tlife: theraLink.wormholeEol,\n\t\t\t\tmass: theraLink.wormholeMass,\n\t\t\t\tid: theraID,\n\t\t\t};\n\t\t\t\n\t\t\tif(theraLink.solarSystemId == systemID) {\t// Connection from this hole\n\t\t\t\tr.push(Object.assign({\n\t\t\t\t\t\n\t\t\t\t\tparent: {\n\t\t\t\t\t\tid: ids.parentID,\n\t\t\t\t\t\tsystemID: systemID,\n\t\t\t\t\t\tsignatureID: theraLink.wormholeDestinationSignatureId,\n\t\t\t\t\t\ttype: theraLink.sourceWormholeType.name,\n\t\t\t\t\t},\tchild: {\n\t\t\t\t\t\tid: ids.nextChildID++,\n\t\t\t\t\t\tsystemID: theraLink.wormholeDestinationSolarSystemId,\n\t\t\t\t\t\tsignatureID: theraLink.signatureId,\n\t\t\t\t\t\ttype: theraLink.destinationWormholeType.name,\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}, nodeDefaults));\n\t\t\t} else if(theraLink.wormholeDestinationSolarSystemId == systemID) { // Connection to this hole\n\t\t\t\tr.push(Object.assign({\n\t\t\t\t\tparent: {\n\t\t\t\t\t\tid: ids.parentID,\n\t\t\t\t\t\tsystemID: systemID,\n\t\t\t\t\t\tsignatureID: theraLink.signatureId,\n\t\t\t\t\t\ttype: theraLink.destinationWormholeType.name,\n\t\t\t\t\t},\tchild: {\n\t\t\t\t\t\tid: ids.nextChildID++,\n\t\t\t\t\t\tsystemID: theraLink.solarSystemId,\n\t\t\t\t\t\tsignatureID: theraLink.wormholeDestinationSignatureId,\n\t\t\t\t\t\ttype: theraLink.sourceWormholeType.name,\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}, nodeDefaults));\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn r;\n\t}\n\t\n\t/** Refresh the Thera data from the public Eve-Scout API */\n\tthis.refresh = function() {\n\t\tif(!_this.active()) {\n\t\t\treturn;\t// only look for Thera data if on a tab with the option selected\n\t\t}\n\t\t\n\t\t$.ajax({\n\t\t\turl: `https://api.allorigins.win/get?url=${encodeURIComponent('https://www.eve-scout.com/api/wormholes')}`,\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"JSON\"\n\t\t}).done(function(data, status, xhr) {\t\n            const wormholes = JSON.parse(data.contents);\n\t\t\tif(!_.isEqual(wormholes, _this.links)) {\n                \n\t\t\t\tconsole.info('Updating map for Thera update');\n\t\t\t\t_this.links = wormholes;\n\t\t\t\tchain.redraw();\n\t\t\t}\n\t\t}).fail(function(xhr, status, error) {\n\t\t\tconsole.warn('Failed to fetch Thera from eve-scout.com: ' + status, error);\n\t\t});\n\t};\n\t\n\tsetInterval(this.refresh, 60000);\n\tthis.refresh();\n}","const ChainMapRendererOrgchart = function(owner) {\n\tconst _this = this;\n\t\n\t/** Initialiser - callback from chart onload */\n\tthis.init = function() {\n\t\t_this.map = new google.visualization.OrgChart(document.getElementById(\"chainMap\"));\n\t\t_this.options = {allowHtml: true, allowCollapse: true, size: \"medium\", nodeClass: \"node\"};\n\n\t\tgoogle.visualization.events.addListener(_this.map, \"collapse\", _this.collapseHandler);\n\n\t\t_this.map.draw(new google.visualization.DataView(new google.visualization.DataTable({cols:[{label: \"System\", type: \"string\"}, {label: \"Parent\", type: \"string\"}]})), _this.options);\n\t}\n\t\n\t/** Is this renderer ready to accept draw calls? */\n\tthis.ready = function() { return !this.drawing && !!this.map; }\n\t\n\t/** Switch to this renderer. The renderer can be in a blank state; draw() will be called after */\n\tthis.switchTo = function() {\n\t\tdocument.getElementById('chainGrid').style.display = '';\n\t\tif(!_this.map) { google.charts.setOnLoadCallback(this.init); }\n\t}\n\t\n\t/** Switch away from this renderer. All node divs should be removed from the DOM */\n\tthis.switchFrom = function() {\n\t\tdocument.getElementById('chainGrid').style.display = 'none';\n\t\t_this.map.draw(new google.visualization.DataView(new google.visualization.DataTable({cols:[{label: \"System\", type: \"string\"}, {label: \"Parent\", type: \"string\"}]})), _this.options);\t\t\n\t}\n\t\n\t/** Redraw the map, based on the given node set, line overrides and list of collapsed systems */\n\tthis.draw = function(map, lines, collapsed) {\n\t\tthis.drawing = true;\n\t\tthis.map.draw(newView(map), this.options); \n\t\t\n\t\tfor (var x in collapsed) {\n\t\t\tconst s = collapsed[x];\n\t\t\tconst nodeId = $(\"#chainMap [data-nodeid='\"+s+\"']\").attr(\"id\");\n\t\t\tif (nodeId) {\n\t\t\t\tconst nodeVal = nodeId.split(\"node\")[1];\n\t\t\t\tthis.map.collapse(nodeVal - 1, true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tupdateLines(map, lines);\n\t\tthis.drawing = false;\n\t};\n\t\n\tconst newView = function(json) {\n\t\tconst view = new google.visualization.DataView(new google.visualization.DataTable(json));\n\t\treturn view;\n\t};\n\t\n\tconst updateLines = function(map, lines) {\n\t\t_this.lastLineData = { map: map, lines: lines };\n\t\tfunction drawNodeLine(system, parent, mode, signatureID) {\n\t\t\t/*\tfunction for drawing colored lines  */\n\t\t\tif(typeof mode == 'string') { mode = [mode]; }\n\n\t\t\tfunction addModes(jquerySelector, prefixes) { return doModeClasses(jquerySelector, prefixes, function(s, c) { s.addClass(c); }); }\n\t\t\tfunction removeModes(jquerySelector, prefixes) { return doModeClasses(jquerySelector, prefixes, function(s, c) { s.removeClass(c); }); }\n\t\t\tfunction doModeClasses(jquerySelector, prefixes, classFunc) {\n\t\t\t\tprefixes = prefixes || [];\n\t\t\t\tprefixes.push('');\n\t\t\t\tprefixes.forEach(function(prefix) { \n\t\t\t\t\tmode.forEach( function(mode) { classFunc(jquerySelector, (prefix.length ? prefix + '-' : '') + mode); });\n\t\t\t\t});\n\t\t\t\treturn jquerySelector;\n\t\t\t}\n\n\t\t\t// Find node in chainmap\n\t\t\t//var $node = $(\"#chainMap [data-nodeid='\"+system+\"']\").parent();\n\t\t\tvar $node = $(\"#chainMap #node\"+system).parent();\n\n\t\t\tif ($node.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Get node # in this line\n\t\t\tvar nodeIndex = Math.ceil(($node[0].cellIndex + 1) / 2 - 1);\n\n\t\t\t// applly to my top line\n\t\t\tvar $connector = addModes($($node.parent().prev().children(\"td.google-visualization-orgchart-lineleft, td.google-visualization-orgchart-lineright\")[nodeIndex]), [ 'left', 'right' ]);\n\n\t\t\t// Find parent node\n\t\t\t//var $parent = $(\"#chainMap [data-nodeid='\"+parent+\"']\").parent();\n\t\t\tvar $parent = $(\"#chainMap #node\"+parent).parent();\n\n\t\t\tif ($parent.length == 0 || $connector.length == 0)\n\t\t\t\treturn false;\n\n\t\t\t// Find the col of my top line\n\t\t\tvar nodeCol = 0, connectorCell = $connector[0].cellIndex;\n\t\t\t$node.parent().prev().find(\"td\").each(function(index) {\n\t\t\t\tnodeCol += this.colSpan;\n\n\t\t\t\tif (index == connectorCell) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get node # in this line\n\t\t\tvar parentIndex = Math.ceil(($parent[0].cellIndex + 1) / 2 - 1);\n\n\t\t\t// Compensate for non-parent nodes (slight performance hit ~10ms)\n\t\t\tvar newparentIndex = parentIndex;\n\t\t\tfor (var i = 0; i <= parentIndex; i++) {\n\t\t\t\tvar checkSystem = 0;//$node.parent().prev().prev().prev().find(\"td:has([data-nodeid]):eq(\"+i+\")\").find(\"[data-nodeid]\").data(\"nodeid\");\n\t\t\t\t$node.parent().prev().prev().prev().find(\"td > [data-nodeid]\").each(function(index) {\n\t\t\t\t\tif (index == i) {\n\t\t\t\t\t\tcheckSystem = $(this).attr(\"id\").replace(\"node\", \"\");//$(this).data(\"nodeid\");\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ($.map(map.rows, function(node) { return node.c[1].v == checkSystem ? node : null; }).length <= 0) {\n\t\t\t\t\tnewparentIndex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentIndex = newparentIndex;\n\n\t\t\t// Apply to parent bottom line\n\t\t\tvar $connecte = addModes($($node.parent().prev().prev().children(\"td.google-visualization-orgchart-lineleft, td.google-visualization-orgchart-lineright\")[parentIndex]), [ 'left', 'right'] );\n\n\t\t\t// the beans\n\t\t\tvar col = 0, parent = false, me = false;\n\t\t\t$node.parent().prev().prev().find(\"td\").each(function(index, value) {\n\t\t\t\tcol += this.colSpan;\n\n\t\t\t\tif (me && parent) {\n\t\t\t\t\t// All done - get outta here\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (typeof($connecte[0]) != \"undefined\" && $connecte[0].cellIndex == index) {\n\t\t\t\t\tparent = true;\n\n\t\t\t\t\taddModes($(this), ['left']);\n\n\t\t\t\t\t// remove bottom border that points to the right\n\t\t\t\t\tif (!me && col != nodeCol) {\n\t\t\t\t\t\taddModes($(this), ['bottom']);\n\t\t\t\t\t}\n\n\t\t\t\t\t// parent and node are same - we are done\n\t\t\t\t\tif (nodeCol == col) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (col == nodeCol) {\n\t\t\t\t\tme = true;\n\n\t\t\t\t\taddModes($(this), [ 'bottom' ]);\n\t\t\t\t} else if (me || parent) {\n\t\t\t\t\tvar tempCol = 0, breaker = false, skip = false;\n\n\t\t\t\t\t$node.parent().prev().find(\"td\").each(function(index) {\n\t\t\t\t\t\ttempCol += this.colSpan;\n\n\t\t\t\t\t\tif (tempCol == col && ($(this).hasClass(\"google-visualization-orgchart-lineleft\") || $(this).hasClass(\"google-visualization-orgchart-lineright\"))) {\n\t\t\t\t\t\t\tif (parent == false) {\n\t\t\t\t\t\t\t\t// Stop looking cuz there is another node between us and parent\n\t\t\t\t\t\t\t\tbreaker = true;\n\t\t\t\t\t\t\t\tremoveModes($connecte, [ 'left', 'right' ]);\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} else if (parent == true) {\n\t\t\t\t\t\t\t\t// Lets make sure there isnt a node between the parent and me\n\t\t\t\t\t\t\t\tremoveModes($connecte, [ 'left', 'right' ]);\n\n\t\t\t\t\t\t\t\t$node.parent().prev().prev().find(\"td\").each(function(index) {\n\t\t\t\t\t\t\t\t\tif (index >= $connecte[0].cellIndex) {\n\t\t\t\t\t\t\t\t\t\t// there is a node after parent but before me\n\t\t\t\t\t\t\t\t\t\tremoveModes($(this), [ 'bottom' ]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (breaker) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\taddModes($(this), ['bottom'] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var x in lines) {\n\t\t\tdrawNodeLine(lines[x][0], lines[x][1], lines[x][2], lines[x][3]);\n\t\t}\n\t};\n\n\tthis.collapseHandler = function() {\t\t\n\t\tif(_this.drawing) { return; }\n\t\t\n\t\tconst collapsed = _this.map.getCollapsedNodes();\n\t\tconst collapsedSystems = [];\n\t\tfor (x in collapsed) {\n\t\t\tvar systemID = $(\"#chainMap #node\"+(collapsed[x] +1)).data(\"nodeid\");\n\t\t\tcollapsedSystems.push(systemID);\n\t\t}\n\t\towner.updateCollapsed(collapsedSystems);\n\t\t\n\t\tif(_this.lastLineData) { updateLines(_this.lastLineData.map, _this.lastLineData.lines); }\n\t}\n\n\n};","const ChainMapRendererRadial = function(owner) {\n\t/** Is this renderer ready to accept draw calls? */\n\tthis.ready = function() { return !this.drawing; }\n\t\n\t/** Switch to this renderer. The renderer can be in a blank state; draw() will be called after */\n\tthis.switchTo = function() {\n\t\tif(!document.getElementById('map-container')) {\n\t\t\tconst newDiv = document.createElement('div');\n\t\t\tnewDiv.id = 'map-container';\n\t\t\tnewDiv.className = 'radial-map';\n\t\t\tdocument.getElementById('chainMap').appendChild(newDiv);\n\t\t}\n\t\tthis.container = document.getElementById('map-container');\n\t\tthis.container.style.display = '';\n\t}\n\t\n\t/** Switch away from this renderer. All node divs should be removed from the DOM */\n\tthis.switchFrom = function() {\n\t\tconst div = document.getElementById('map-container');\n\t\tif(div) { div.parentNode.removeChild(div); }\n\t\tthis.container = null;\n\t}\n\t\n\tthis.collapse = function(systemID, collapse) {\n\t\tif(collapse) { this.mapData.collapsed.push(systemID); }\n\t\telse {  this.mapData.collapsed = this.mapData.collapsed.filter(x => x != systemID); }\n\t\towner.updateCollapsed(this.mapData.collapsed);\n\t\tdrawInner(this.mapData.map, this.mapData.lines, this.mapData.collapsed);\n\t}\n\t\n\t/** Redraw the map, based on the given node set, line overrides and list of collapsed systems */\n\tthis.draw = function(map, lines, collapsed) {\n\t\tthis.drawing = true;\n\t\tthis.mapData = {map: map, lines: lines, collapsed: collapsed};\n\t\t\n\t\t// Clear the map for a new one\n\t\t//this.switchFrom(); this.switchTo();\n\n\t\ttry { drawInner(map, lines, collapsed); }\n\t\tfinally { this.drawing = false; }\n\t}\n\t\n\tconst CIRCLE_SIZE = { x: 70, y: 60, first_ring_delta: 0.3,\n\t\tringX: function(ci) { return ci == 0 ? 0 : (ci + this.first_ring_delta) * this.x},\n\t\tringY: function(ci) { return ci == 0 ? 0 : (ci + this.first_ring_delta) * this.y},\n\t };\n\n\tconst _this = this;\n\tconst drawInner = function(map, lines, collapsed) {\n\t\tconst maps = [];\n\t\tconst nodesById = {};\n\t\t\n\t\t// First pass: arrange nodes into rings\n\t\tfor(var ri = 0; ri < map.rows.length; ri++) {\n\t\t\tconst item = map.rows[ri];\n\t\t\tconst inNode = item.c[0], id = inNode.v, parent = item.c[1].v;\n\t\t\t\n\t\t\tconst mapNode = { id: id, children: [], systemID: inNode.systemID, minArc: 0 };\n\t\t\t\n\t\t\tif(parent == null) {\n\t\t\t\tconst newMap =  { circles: [ { arc: 0, nodes: [ mapNode ] } ] };\n\t\t\t\tmapNode.map = newMap;\n\t\t\t\tmapNode.circle = 0;\n\t\t\t\tmaps.push(newMap);\n\t\t\t} else {\n\t\t\t\tconst parentNode = nodesById[parent];\n\t\t\t\tif(!parentNode) { throw 'Parent id ' + parent + ' not on map yet'; }\n\t\t\t\tparentNode.children.push(mapNode);\n\t\t\t\tmapNode.parent = parentNode;\n\t\t\t\tmapNode.connection = lines.filter(function(l) { return l[0] == id; })[0] || [id, parent, [], '?'];\n\t\t\t\tmapNode.connection[2].unshift('connection');\n\t\t\t\tmapNode.map = parentNode.map;\n\t\t\t\tmapNode.circle = parentNode.circle + 1;\n\t\t\t\tif(mapNode.map.circles.length <= mapNode.circle) {\n\t\t\t\t\tmapNode.map.circles.push({ arc: 0, nodes:[mapNode] });\n\t\t\t\t} else { mapNode.map.circles[mapNode.circle].nodes.push(mapNode); }\n\t\t\t}\n\t\t\tnodesById[id] = mapNode;\n\t\t\tmapNode.markup = inNode.f;\n\t\t}\n\n\t\t// Second pass - for each map, find the allocation of arc needed for each node\n\t\tfor(var mi = 0; mi < maps.length; mi++) {\n\t\t\tconst map = maps[mi];\n\t\t\tfor(var ci = map.circles.length - 1; ci >= 1; ci--) {\t// don't need to calculate ring 0\n\t\t\t\tfor(var ni = 0; ni < map.circles[ci].nodes.length; ni++) {\n\t\t\t\t\tconst node = map.circles[ci].nodes[ni];\n\t\t\t\t\tnode.minArc *= ci / (ci + 1.0);\n\t\t\t\t\tif(node.minArc < 1 || collapsed.indexOf(node.systemID * 1) >= 0) { node.minArc = 1; }\n\t\t\t\t\tnode.parent.minArc += node.minArc;\n\t\t\t\t\tmap.circles[ci].arc += node.minArc;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Third pass - lay out each ring based on the arc values\n\t\tfor(var mi = 0; mi < maps.length; mi++) {\n\t\t\tconst map = maps[mi];\n\t\t\tvar mapDiv = document.getElementById(\"map\" + mi);\n\t\t\tif(!mapDiv) {\n\t\t\t\tmapDiv = document.createElement('div');\n\t\t\t\tmapDiv.id = \"map\" + mi;\n\t\t\t\tmapDiv.className = \"map-chain-wrapper\";\n\t\t\t}\n\t\t\tmapDiv.innerHTML = '<div class=\"map-outer-container\"><div class=\"map-inner-container\"><canvas class=\"map-drawing\" id=\"map-canvas-' + mi + '\"/></div></div>';\n\t\t\tconst innerContainer = mapDiv.firstChild.firstChild;\n\t\t\tdocument.getElementById('map-container').appendChild(mapDiv);\n\n\t\t\tmap.bounds = makeDivsForRing(innerContainer, 0, map.circles[0].nodes, 0, Math.PI * 2, collapsed);\n\t\t\tmap.domNode = mapDiv;\n\t\t\tmap.innerContainer = innerContainer;\n\t\t}\n\n\t\t// Fourth pass: update div and canvas bounds, and draw rings/links\n\t\tconst CANVAS_SCALE = 1;\n\t\tfor(var mi = 0; mi < maps.length; mi++) {\n\t\t\tconst map = maps[mi];\n\t\t\tconst finalPositions = {\n\t\t\t\tw: 200 + map.bounds.x[1] - map.bounds.x[0],\n\t\t\t\th: 100 + map.bounds.y[1] - map.bounds.y[0],\n\t\t\t\tcx: 100 - map.bounds.x[0],\n\t\t\t\tcy: 50 - map.bounds.y[0]\n\t\t\t}\n\t\t\t\n\t\t\t// Fill the space available, if we didn't already\n\t\t\tif(maps.length == 1) {\n\t\t\t\tconst parentWidth = -38 + _this.container.offsetWidth;\t// 20px for map margins, 18 for scrollbar\n\t\t\t\tif(finalPositions.w < parentWidth) {\n\t\t\t\t\tfinalPositions.cx += 0.5 * (parentWidth - finalPositions.w);\n\t\t\t\t\tfinalPositions.w = parentWidth;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t\tconst parentHeight = document.getElementById('chainParent').offsetHeight;\n\t\t\tif(finalPositions.h < parentHeight) {\n\t\t\t\tfinalPositions.cy += 0.5 * (parentHeight - finalPositions.h);\n\t\t\t\tfinalPositions.h = parentHeight;\n\t\t\t}\n\t\t\t\n\t\t\t// If there's enough space to centre the top level node now, do it\n\t\t\tif(finalPositions.h >= 2 * (map.bounds.y[1] > -map.bounds.y[0] ? map.bounds.y[1] : -map.bounds.y[0])) {\n\t\t\t\tfinalPositions.cy = finalPositions.h / 2;\n\t\t\t}\n\t\t\tif(finalPositions.w >= 2 * (map.bounds.x[1] > -map.bounds.x[0] ? map.bounds.x[1] : -map.bounds.x[0])) {\n\t\t\t\tfinalPositions.cx = finalPositions.w / 2;\n\t\t\t}\t\t\t\n\t\t\tmap.domNode.style.width = finalPositions.w + 'px';\n\t\t\tmap.domNode.style.height = finalPositions.h + 'px';\n\t\t\tconst outerContainer = map.domNode.firstChild;\n\t\t\touterContainer.style.left = finalPositions.cx + 'px';\n\t\t\touterContainer.style.top = finalPositions.cy + 'px';\n\t\t\tconst canvas = outerContainer.getElementsByTagName('canvas')[0];\n\t\t\tcanvas.width = CANVAS_SCALE * finalPositions.w;\n\t\t\tcanvas.style.width = finalPositions.w + 'px';\n\t\t\tcanvas.height = CANVAS_SCALE * finalPositions.h;\n\t\t\tcanvas.style.height = finalPositions.h + 'px';\n\t\t\tcanvas.style.left = -finalPositions.cx + 'px';\n\t\t\tcanvas.style.top = -finalPositions.cy + 'px';\n\t\t\tconst ctx = canvas.getContext('2d');\n\t\t\tctx.scale(CANVAS_SCALE, CANVAS_SCALE);\n\t\t\tctx.translate(finalPositions.cx, finalPositions.cy);\n\t\t\t\t\n\t\t\tfor(var ci = map.bounds.maxCi; ci >= 1; ci--) {\t// don't need to draw ring 0\n\t\t\t\tif(options.chain.gridlines) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tif(ctx.ellipse) {\n\t\t\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\t\t\tctx.setLineDash([]);\n\t\t\t\t\t\tctx.ellipse(0, 0, CIRCLE_SIZE.ringX(ci), CIRCLE_SIZE.ringY(ci), 0, 0, Math.PI * 2);\n\t\t\t\t\t}\n\t\t\t\t\tctx.strokeStyle = propertyFromCssClass('grid-default', 'color');\n\t\t\t\t\tctx.stroke();\t\t\n\t\t\t\t}\n\t\t\t\tif(ci >= map.circles.length) { continue; }\n\t\t\t\t\n\t\t\t\tfor(var ni = 0; ni < map.circles[ci].nodes.length; ni++) {\n\t\t\t\t\tconst node = map.circles[ci].nodes[ni];\n\t\t\t\t\tif(!node.position) { continue; }\t// not drawn on map\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = node.connection[2].reduce(function(w, c) { return c == 'frig' ? 1 : w; }, 3);\n\t\t\t\t\tctx.moveTo(node.position.x, node.position.y);\n\t\t\t\t\tconst cp1 = radToCartesian({ r: node.radPosition.r - 0.5, theta: (node.radPosition.theta + 2 * node.parent.radPosition.theta) / 3.0 });\n\t\t\t\t\tconst cp2 = radToCartesian({ r: node.radPosition.r - 0.5, theta: (2 * node.radPosition.theta + node.parent.radPosition.theta) / 3.0 });\n\t\t\t\t\t\n\t\t\t\t\tif(ci > 1) {\t\t\t\t\n\t\t\t\t\t\tctx.bezierCurveTo(cp2.x, cp2.y, cp1.x, cp1.y, node.parent.position.x, node.parent.position.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.lineTo(node.parent.position.x, node.parent.position.y);\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tconst dist2 = (node.position.y - node.parent.position);\n\t\t\t\t\tctx.strokeStyle = propertyFromCssClass(node.connection[2], 'border-top-color');\n\t\t\t\t\tctx.setLineDash ({ dashed: [3, 2] }[propertyFromCssClass(node.connection[2], 'border-top-style')] || []);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\t\n\t\t// Remove any maps which aren't in use any more\n\t\tfor(var mi = maps.length; ; mi++) {\n\t\t\tconst div = document.getElementById('map' + mi);\n\t\t\tif(div) { div.parentNode.removeChild(div); }\n\t\t\telse { break; }\n\t\t}\n\t}\n\t\n\tfunction makeDivsForRing(innerContainer, ci, nodes, minRad, maxRad, collapsed) {\n\t\tconst bounds = { x: [0, 0], y: [0, 0], maxCi: ci };\n\t\tif(!nodes.length) { return bounds; }\n\t\tconst parentCollapsed = collapsed.indexOf(1 * (nodes[0].parent || {}).systemID) >= 0;\n\t\tconst max_nodes_per_rad = 1.4;\n\t\tif(ci > 0 && !parentCollapsed) {\n\t\t\tvar skipped = 0;\n\t\t\twhile(++skipped < 2 && nodes.length > max_nodes_per_rad * ci * (maxRad - minRad)) { ci++; }\n\t\t}\n\t\tconst totalArc = parentCollapsed ? nodes.length : nodes.reduce(function(acc, x) { return acc + x.minArc; }, 0);\n\t\tconst rads_per_arc = (maxRad - minRad) / totalArc;\n\t\tvar rad_offset = minRad;\n\t\tvar alignment_delta = 0;\n\t\t\n\t\tfor(var ni = 0; ni < nodes.length; ni++) {\n\t\t\tconst node = nodes[ni];\t\n\t\t\t\n\t\t\t// Make the node\n\t\t\tconst frag = document.createRange().createContextualFragment('<div class=\"node-wrapper\">' + node.markup + '</div>');\n\t\t\tnode.domNode = frag.firstChild;\n\t\t\tinnerContainer.appendChild(node.domNode);\n\t\t\tconst systemID = 1 * node.systemID;\n\t\t\t$(node.domNode).dblclick(() => _this.collapse(systemID, collapsed.indexOf(systemID) < 0));\n\t\t\t\n\t\t\t// Position the node\n\t\t\tconst dr = (parentCollapsed ? 1 : node.minArc) * rads_per_arc;\n\t\t\tconst rad_centre = rad_offset + (dr / 2);\n\t\t\t\n\t\t\tif(ci == 1 && ni == 0) { // First node on first ring should be axis aligned\n\t\t\t\talignment_delta -= rad_centre;\n\t\t\t}\n\t\t\t\n\t\t\tnode.radPosition = { r: ci, theta: rad_centre + alignment_delta };\n\t\t\tnode.position = radToCartesian(node.radPosition);\n\t\t\t\n\t\t\tif(node.position.x < bounds.x[0]) { bounds.x[0] = node.position.x; }\n\t\t\tif(node.position.x > bounds.x[1]) { bounds.x[1] = node.position.x; }\n\t\t\tif(node.position.y < bounds.y[0]) { bounds.y[0] = node.position.y; }\n\t\t\tif(node.position.y > bounds.y[1]) { bounds.y[1] = node.position.y; }\n\t\t\t\n\t\t\tnode.domNode.style.left = node.position.x + 'px';\n\t\t\tnode.domNode.style.top = node.position.y + 'px';\n\t\t\t\n\t\t\tif(parentCollapsed) {\n\t\t\t\tnode.domNode.style.display = 'none';\n\t\t\t} else {\t\t\t\t\n\t\t\t\t// Do the segment of the next circle\n\t\t\t\tconst excess = (ci > 0 && dr > node.minArc * ci) ? dr - node.minArc * ci : 0;\n\t\t\t\tif(node.children.length) {\n\t\t\t\t\tconst nextBounds = makeDivsForRing(innerContainer, ci + 1, node.children, rad_offset + (0.5 * excess) + alignment_delta, rad_offset - (0.5 * excess) + alignment_delta + dr, collapsed);\n\t\t\t\t\tif(nextBounds.x[0] < bounds.x[0]) { bounds.x[0] = nextBounds.x[0]; }\n\t\t\t\t\tif(nextBounds.x[1] > bounds.x[1]) { bounds.x[1] = nextBounds.x[1]; }\n\t\t\t\t\tif(nextBounds.y[0] < bounds.y[0]) { bounds.y[0] = nextBounds.y[0]; }\n\t\t\t\t\tif(nextBounds.y[1] > bounds.y[1]) { bounds.y[1] = nextBounds.y[1]; }\n\t\t\t\t\tif(nextBounds.maxCi > bounds.maxCi) { bounds.maxCi = nextBounds.maxCi; }\n\t\t\t\t}\n\t\t\t}\n\t\t\trad_offset += dr;\n\t\t}\n\t\t\n\t\treturn bounds;\n\t}\n\n\tfunction radToCartesian(rad) {\n\t\treturn { \n\t\t\tx: CIRCLE_SIZE.ringX(rad.r) * Math.sin(rad.theta), \n\t\t\ty: CIRCLE_SIZE.ringY(rad.r) * Math.cos(rad.theta)\n\t\t};\n\n\t}\n\n\t/** https://stackoverflow.com/questions/40978050 */\n\tfunction propertyFromCssClass(className, property) {\n\t\tif(Array.isArray(className)) { className = className.join(' '); }\n\t\tvar elem = document.getElementById('temp-div-' + className);\n\t\tif(!elem) {\n\t\t  elem = document.createElement(\"div\");\n\t\t  elem.id = 'temp-div-' + className;\n\t\t  elem.style.cssText = \"position:fixed;left:-100px;top:-100px;width:1px;height:1px\";\n\t\t  elem.className = className + ' temp';\n\t\t  document.body.appendChild(elem);  // required in some browsers\n\t\t  }\n\t  const color = getComputedStyle(elem).getPropertyValue(property);\n\t  //document.body.removeChild(tmp);\n\t  return color;\n\t}\t\n};","var chain = new function() {\n\tvar chain = this;\n\tthis.map, this.view, this.drawing, this.data = {};\n\t\n\tthirdPartySuppliers = [ thera ];\n\n\t// Renderer should have:\n\t//  ready() - Whether the renderer is initialised and can accept draw calls\n\t// switchTo() - Make this renderer active. The renderer can be in a blank state; draw() will be called after\n\t// switchFrom() - Switch away from this renderer. All node divs should be removed from the DOM, other items can be removed or made invisible\n\t// draw(map, lines, collapsedSystems) - Redraw the map, based on the given node set, line overrides and list of collapsed systems \n\t// collapse(systemID, toggle) - marks the system as collapsed/not collapsed\n\t// If the renderer allows collapsing of nodes then it will call updateCollapsed on the owner (the chain) with a list of collapsed systems in the current tab\n\t\n\tconst renderers = { \n\t\torgChart: new ChainMapRendererOrgchart(this),\n\t\tradial: new ChainMapRendererRadial(this)\n\t};\n\t\n\tthis.renderer = renderers[options.chain.renderer];\n\tthis.renderer.switchTo();\n\t\n\tthis.useRenderer = function(name) {\n\t\tif(!renderers[name]) { throw 'Unknown renderer ' + name; }\n\t\tif(this.renderer != renderers[name]) {\n\t\t\tthis.renderer.switchFrom();\n\t\t\tthis.renderer = renderers[name];\n\t\t\tthis.renderer.switchTo();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\tthis.activity = function(data) {\n\t\t/*\tfunction for adding recent activity to chain map nodes\t*/\n\t\t//var data = typeof(data) !== \"undefined\" ? data : this.data.activity;\n\n\t\t// Hide all activity colored dots instead of checking each one\n\t\tvar elements = document.querySelectorAll(\"#chainMap .nodeActivity span\");\n\t\tfor (var i = 0, l = elements.length; i < l; ++i) {\n\t\t   elements[i].className = elements[i].className + \" invisible\";\n\t\t}\n\n\t\t// Loop through passed data and show dots by system\n\t\tvar elements = document.querySelectorAll(\"#chainMap [data-nodeid]\");\n\t\tfor (var i = 0, l = elements.length; i < l; ++i) {\n\t\t   var systemID = elements[i].getAttribute(\"data-nodeid\");\n\t\t   if (data[systemID]) {\n\t\t\t   var shipJumps = data[systemID].shipJumps;\n\t\t\t   var podKills = data[systemID].podKills;\n\t\t\t   var shipKills = data[systemID].shipKills;\n\t\t\t   var npcKills = data[systemID].npcKills;\n\t\t\t   var node = elements[i].getElementsByClassName(\"nodeActivity\")[0];\n\n\t\t\t   if (shipJumps > 0) {\n\t\t\t\t   var jumps = node.getElementsByClassName(\"jumps\")[0];\n\t\t\t\t   jumps.className = jumps.className.replace(/invisible/g, \"\");\n\t\t\t\t   jumps.setAttribute(\"data-tooltip\", shipJumps + \" Jumps\");\n\t\t\t   }\n\n\t\t\t   if (podKills > 0) {\n\t\t\t\t   var pods = node.getElementsByClassName(\"pods\")[0];\n\t\t\t\t   pods.className = pods.className.replace(/invisible/g, \"\");\n\t\t\t\t   pods.setAttribute(\"data-tooltip\", podKills + \" Pod Kills\");\n\t\t\t   }\n\n\t\t\t   if (shipKills > 0) {\n\t\t\t\t   var ships = node.getElementsByClassName(\"ships\")[0];\n\t\t\t\t   ships.className = ships.className.replace(/invisible/g, \"\");\n\t\t\t\t   ships.setAttribute(\"data-tooltip\", shipKills + \" Ship Kills\");\n\t\t\t   }\n\n\t\t\t   if (npcKills > 0) {\n\t\t\t\t   var npcs = node.getElementsByClassName(\"npcs\")[0];\n\t\t\t\t   npcs.className = npcs.className.replace(/invisible/g, \"\");\n\t\t\t\t   npcs.setAttribute(\"data-tooltip\", npcKills + \" NPC Kills\");\n\t\t\t   }\n\t\t   }\n\t\t}\n\n\t\tif (SystemActivityToolTips.attachedElements && SystemActivityToolTips.attachedElements.length > 0) {\n\t\t\tSystemActivityToolTips.detach($(\"#chainMap .whEffect\"));\n\t\t}\n\t\tSystemActivityToolTips.attach($(\"#chainMap .nodeActivity > span[data-tooltip]:not(.invisible)\"));\n\n\t\treturn data;\n\t}\n\n\tthis.occupied = function(data) {\n\t\t/*\tfunction for showing occupied icon  */\n\n\t\t// Hide all icons instead of checking each one\n\t\t$(\"#chainMap [data-icon='user'], #chainMap [data-icon='user'] + .badge\").addClass(\"invisible\");\n\n\t\t// Loop through passed data and show icons\n\t\tfor (var x in data) {\n\t\t\t$(\"#chainMap [data-nodeid='\"+data[x].systemID+\"'] [data-icon='user']\").removeClass(\"invisible\");\n\t\t\t$(\"#chainMap [data-nodeid='\"+data[x].systemID+\"'] [data-icon='user'] + .badge\").removeClass(\"invisible\").html(data[x].count);\n\t\t}\n\n\t\tOccupiedToolTips.attach($(\"#chainMap [data-icon='user']:not(.invisible)\"));\n\n\t\treturn data;\n\t}\n\n\tthis.flares = function(data) {\n\t\t/*\tfunction for coloring chain map nodes via flares  */\n\t\t//var data = typeof(data) !== \"undefined\" ? data : this.data.flares;\n\n\t\t// Remove all current node coloring instead of checking each one\n\t\t$(\"#chainMap div.node\").removeClass(\"redNode yellowNode greenNode\");\n\n\t\t// Remove all coloring from chain grid\n\t\t$(\"#chainGrid tr\").removeClass(\"red yellow green\");\n\n\t\t// Loop through passed data and add classes by system\n\t\tif (data) {\n\t\t\tfor (var x in data.flares) {\n\t\t\t\tvar systemID = data.flares[x].systemID;\n\t\t\t\tvar flare = data.flares[x].flare;\n\n\t\t\t\tvar row = ($(\"#chainMap [data-nodeid=\"+systemID+\"]\").addClass(flare+\"Node\").parent().index() - 1) / 3 * 2;\n\n\t\t\t\tif (row > 0) {\n\t\t\t\t\t$(\"#chainGrid tr:eq(\"+row+\")\").addClass(flare).next().addClass(flare);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tthis.grid = function() {\n\t\t/*  function for showing/hiding grid lines  */\n\t\t// This is an optional feature\n\t\tif (options.chain.gridlines == false) {\n\t\t\t$(\"#chainGrid tr\").addClass(\"hidden\");\n\t\t\treturn false;\n\t\t}\n\n\t\t$(\"#chainGrid tr\").removeClass(\"hidden\");\n\t\t//$(\"#chainGrid\").css(\"width\", \"100%\");\n\n\t\t// Calculate how many rows have systems, max 0 hack to prevent negative numbers, and rows above this number get hidden\n\t\tvar rows = Math.max(0, $(\".google-visualization-orgchart-table tr:has(.node)\").length * 2 - 1);\n\t\t$(\"#chainGrid tr:gt(\"+rows+\")\").addClass(\"hidden\");\n\t}\n\n\tthis.nodes = function(map) {\n\t\tvar chain = {cols: [{label: \"System\", type: \"string\"}, {label: \"Parent\", type: \"string\"}], rows: []};\n\t\tvar frigTypes = [\"Q003\", \"E004\", \"L005\", \"Z006\", \"M001\", \"C008\", \"G008\", \"A009\", \"SML\" ];\n\t\tvar connections = [];\n\t\tvar chainMap = this;\n\n\t\tfunction formatStatics(statics) {\n\t\t\tif(!statics) { return ''; }\n\t\t\tconst shortCodeMap = { 'High-Sec': 'H', 'Low-Sec': 'L', 'Null-Sec': 'N', 'Triglavian':'▼',\n\t\t\t\t'Class 1': '1', 'Class 2': '2', 'Class 3': '3', 'Class 4': '4', 'Class 5' : 5, 'Class 6': 6\n\t\t\t};\n\t\t\tconst classMap = { H: 'hisec', L: 'lowsec', N: 'nullsec', '▼': 'triglavian' };\n\t\t\treturn statics.map(function(s) {\n\t\t\t\tconst text = shortCodeMap[tripwire.wormholes[s].leadsTo];\n\t\t\t\tconst className = classMap[text] || 'class-' +  text;\n\t\t\t\tconst tip = tripwire.wormholes[s].leadsTo + ' via ' + s;\n\t\t\t\treturn '<span class=\"' + className + '\" data-tooltip=\"' + tip + '\">' + text + '</span>';\n\t\t\t}).join('');\n\t\t}\n\n\t\tfunction topLevel(systemID, id) {\n\t\t\tif (!systemID || !tripwire.systems[systemID])\n\t\t\t\treturn false;\n\t\t\tconst tab = options.chain.tabs[options.chain.active];\n\t\t\tconst tabName = tab && tab.systemID != 0 && 0 > tab.systemID.indexOf(',') ? options.chain.tabs[options.chain.active].name : undefined;\n\t\t\treturn makeSystemNode(systemID, id, null, null, tabName, '&nbsp;', ['top-level']);\n\t\t}\n\n\t\tfunction makeSystemNode(systemID, id, whId, inSigId, systemName, nodeTypeMarkup, additionalClasses) {\n\t\t\t// System type switch\n\t\t\tvar systemType = getSystemType(systemID);\n\t\t\tconst system = tripwire.systems[systemID];\n\n\t\t\tvar effectClass = null, effect = null;\n\t\t\tif (system && system.effect) {\n\t\t\t\tswitch(system.effect) {\n\t\t\t\t\tcase \"Black Hole\":\n\t\t\t\t\t\teffectClass = \"blackhole\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Cataclysmic Variable\":\n\t\t\t\t\t\teffectClass = \"cataclysmic-variable\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Magnetar\":\n\t\t\t\t\t\teffectClass = \"magnetar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Pulsar\":\n\t\t\t\t\t\teffectClass = \"pulsar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Red Giant\":\n\t\t\t\t\t\teffectClass = \"red-giant\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wolf-Rayet Star\":\n\t\t\t\t\t\teffectClass = \"wolf-rayet\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\teffect = system.effect;\n\t\t\t}\n\t\t\t\n\t\t\tsystemName = _.escape(systemName);\n\t\t\tconst systemNameText = \n\t\t\t\toptions.chain.sigNameLocation == 'name' ? (systemName ? systemName : system ? system.name : '&nbsp;') :\n\t\t\t\toptions.chain.sigNameLocation == 'name_prefix' ?\n\t\t\t\t\t(systemName ? systemName + (system ? ' - ' + system.name : '') : (system ? system.name : '&nbsp;')) :\n\t\t\t\t(system ? system.name : '&nbsp;');\t\n\n\t\t\tvar node = {v: id, systemID: systemID };\n\t\t\tvar chainNode = \"<div id='node\"+id+\"' data-nodeid='\"+systemID+\"'\"\n\t\t\t\t+(whId ? \" data-sigid='\"+whId+\"'\" : '')\n\t\t\t\t+(inSigId ? \" data-inSigid='\"+inSigId+\"'\" : '')\n\t\t\t\t+\" class='node \" + ((additionalClasses || []).join(' ')) + \"'>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeIcons'>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: left;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i class='whEffect' \"+(effectClass ? \"data-icon='\"+effectClass+\"' data-tooltip='\"+effect+\"'\" : null)+\"></i>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: right;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i data-icon='user' class='invisible'></i>\"\n\t\t\t\t\t\t\t+\t\t\t\"<span class='badge invisible'></span>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeClass'>\"+systemType+\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeSystem'>\"\n\t\t\t\t\t\t\t+\t\t(system ? \"<a href='.?system=\"+system.name+\"'>\"+systemNameText+\"</a>\" : systemNameText)\n\t\t\t\t\t\t\t+\t\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeType'>\" + nodeTypeMarkup + \"</h4>\"\n\t\t\t\t\t\t\t+\t\"<div class='statics'>\"\n\t\t\t\t\t\t\t+ formatStatics(system ? system.statics : [])\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeActivity'>\"\n\t\t\t\t\t\t\t+\t\t\"<span class='jumps invisible'>&#9679;</span>&nbsp;<span class='pods invisible'>&#9679;</span>&nbsp;&nbsp;<span class='ships invisible'>&#9679;</span>&nbsp;<span class='npcs invisible'>&#9679;</span>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\"</div>\";\n\n\t\t\tnode.f = chainNode;\n\n\t\t\treturn node;\n\t\t}\n\t\t\n\t\tfunction makeCalcChildNode(childID, node, targetSystem) {\n\t\t\tvar path = guidance.findShortestPath(tripwire.map.shortest, [targetSystem - 30000000, node.child.systemID - 30000000]);\n\t\t\tif(!path) { return null; }\n\t\t\t\n\t\t\tvar calcNode = { calculated: true};\n\t\t\tcalcNode.life = \"Gate\";\n\t\t\tcalcNode.parent = {};\n\t\t\tcalcNode.parent.id = node.child.id;\n\t\t\tcalcNode.parent.systemID = node.child.systemID;\n\t\t\tcalcNode.parent.name = node.child.name;\n\t\t\tcalcNode.parent.type = node.child.type;\n\t\t\tcalcNode.parent.nth = node.child.nth;\n\n\t\t\tcalcNode.child = {};\n\t\t\tcalcNode.child.id = ++childID;\n\t\t\tcalcNode.child.systemID = targetSystem;\n\t\t\tcalcNode.child.name = tripwire.systems[targetSystem].name;\n\t\t\tcalcNode.child.path = path;\n\t\t\tcalcNode.child.jumps = path.length - 1;\n\t\t\tcalcNode.child.nth = null;\t\t\t\n\t\t\t\n\t\t\treturn { childID, calcNode };\n\t\t}\n\t\t\n\t\tfunction getSystemType(systemID) {\n\t\t\tvar system = systemAnalysis.analyse(systemID);\n\t\t\tif(!system) { \n\t\t\t\tvar leadsToPointer = typeof(systemID) === \"string\" && systemID.indexOf(\"|\") >= 0 ? tripwire.aSigSystems[systemID.substring(0, systemID.indexOf(\"|\"))] : null;\n\t\t\t\tconst nodeClass = \n\t\t\t\t\tleadsToPointer && leadsToPointer.substring(0, 6) == 'Class-' ? 1 * leadsToPointer.substring(6) :\n\t\t\t\t\tundefined;\n\t\t\t\tconst nodeSecurity = \n\t\t\t\t\tleadsToPointer == \"High-Sec\" ? 0.8 :\n\t\t\t\t\tleadsToPointer == \"Low-Sec\" ? 0.4 :\n\t\t\t\t\tleadsToPointer == \"Null-Sec\" ? -0.1 :\n\t\t\t\t\tundefined;\n\t\t\t\tconst nodeFaction = \n\t\t\t\t\tleadsToPointer == \"Triglavian\" ? 500026 :\n\t\t\t\t\tundefined;\n\t\t\t\t\n\t\t\t\tsystem = systemAnalysis.analyse(systemID, { security: nodeSecurity, class: nodeClass, factionID: nodeFaction } );\n\t\t\t}\n\t\t\treturn \"<span class='\" + system.systemTypeClass + \"'>\" + system.systemTypeName + system.systemTypeModifiers.join('') + \"</span>\";\n\t\t}\t\t\n\n\t\tfunction findLinks(system) {\n\t\t\tif (system[0] <= 0) return false;\n\n\t\t\tvar parentID = parseInt(system[1]), childID = chainList.length;\n\t\t\tconst connectedTo = [];\t// Local cache, in addition to usedLinks, for extra link sources\n\n\t\t\t/** Add the 'current' and 'favourite' calculated nodes if appropriate */\n\t\t\tconst addCalcChildNodes = function(node) {\n\t\t\t\tif ($(\"#show-viewing\").hasClass(\"active\") && tripwire.systems[node.child.systemID] && !tripwire.systems[viewingSystemID].class && !tripwire.systems[node.child.systemID].class && viewingSystemID != node.child.systemID ) {\n\t\t\t\t\tvar calcNode = makeCalcChildNode(childID, node, viewingSystemID);\n\t\t\t\t\tif(calcNode) {\n\t\t\t\t\t\tchildID = calcNode.childID;\n\n\t\t\t\t\t\tchainLinks.push(calcNode.calcNode);\n\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($(\"#show-favorite\").hasClass(\"active\") && tripwire.systems[node.child.systemID] && !tripwire.systems[node.child.systemID].class) {\n\t\t\t\t\tfor (var x in options.favorites) {\n\t\t\t\t\t\tif (tripwire.systems[options.favorites[x]].regionID >= 11000000 || tripwire.systems[node.child.systemID].regionID >= 11000000 || options.favorites[x] == node.child.systemID)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tvar calcNode = makeCalcChildNode(childID, node, options.favorites[x]);\n\t\t\t\t\t\tif(calcNode) {\n\t\t\t\t\t\t\tchildID = calcNode.childID;\n\n\t\t\t\t\t\t\tchainLinks.push(calcNode.calcNode);\n\t\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t};\n\n\t\t\tfor (var x in chainData) {\n\t\t\t\tvar wormhole = chainData[x];\t\t\t\t\n\t\t\t\tif ($.inArray(wormhole.id, usedLinks) == -1) {\n\t\t\t\t\tvar sig1, sig2, sig1Type, sig2Type,\n\t\t\t\t\t\tparent, child, parentType, childType;\n\t\t\t\t\tif (wormhole.parent == \"secondary\") {\n\t\t\t\t\t\tsig1 = tripwire.client.signatures[wormhole.secondaryID];\n\t\t\t\t\t\tsig2 = tripwire.client.signatures[wormhole.initialID];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsig1 = tripwire.client.signatures[wormhole.initialID];\n\t\t\t\t\t\tsig2 = tripwire.client.signatures[wormhole.secondaryID];\n\t\t\t\t\t}\n\t\t\t\t\tsig1Type = wormhole.type; sig2Type = 'K162';\n\t\t\t\t\t\n\t\t\t\t\tif (sig1 && sig1.systemID == system[0]) {\n\t\t\t\t\t\tparent = sig1; child = sig2;\n\t\t\t\t\t\tparentType = sig2Type; childType = sig1Type;\n\t\t\t\t\t} else if(sig2 && sig2.systemID == system[0]) {\n\t\t\t\t\t\tparent = sig2; child = sig1;\n\t\t\t\t\t\tchildType = sig2Type; parentType = sig1Type;\n\t\t\t\t\t} else { continue; }\n\t\t\t\t\t\n\t\t\t\t\tvar node = {};\n\t\t\t\t\tnode.id = wormhole.id;\n\t\t\t\t\tnode.life = wormhole.life;\n\t\t\t\t\tnode.mass = wormhole.mass;\n\t\t\t\t\tnode.time = parent.modifiedTime;\n\n\t\t\t\t\tnode.parent = {};\n\t\t\t\t\tnode.parent.id = parentID;\n\t\t\t\t\tnode.parent.systemID = tripwire.systems[parent.systemID] ? parent.systemID : parent.systemID + \"|\" + Math.floor(Math.random() * Math.floor(10000));\n\t\t\t\t\tnode.parent.name = parent.name;\n\t\t\t\t\tnode.parent.type = parentType;\n\t\t\t\t\tnode.parent.typeBM = null;\n\t\t\t\t\tnode.parent.classBM = null;\n\t\t\t\t\tnode.parent.nth = null;\n\t\t\t\t\tnode.parent.signatureID = child.signatureID;\n\t\t\t\t\tnode.parent.sigIndex = child.id;\n\n\t\t\t\t\tnode.child = {};\n\t\t\t\t\tnode.child.id = ++childID;\n\t\t\t\t\tnode.child.systemID = tripwire.systems[child.systemID] ? child.systemID : child.systemID + \"|\" + Math.floor(Math.random() * Math.floor(10000));\n\t\t\t\t\tnode.child.name = child.name;\n\t\t\t\t\tnode.child.type = childType;\n\t\t\t\t\tnode.child.typeBM = null;\n\t\t\t\t\tnode.child.classBM = null;\n\t\t\t\t\tnode.child.nth = null;\n\t\t\t\t\tnode.child.signatureID = parent.signatureID;\n\t\t\t\t\tnode.child.sigIndex = parent.id;\n\n\t\t\t\t\tchainLinks.push(node);\n\t\t\t\t\tchainList.push([node.child.systemID, node.child.id, system[2]]);\n\t\t\t\t\tusedLinks.push(node.id);\n\t\t\t\t\tif(tripwire.systems[child.systemID]) { connectedTo.push(1 * child.systemID); }\t// cast to number - sigs have the system as a string\n\t\t\t\t\t// usedLinks[system[2]].push(node.id);\n\t\t\t\t\t\n\t\t\t\t\taddCalcChildNodes(node);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthirdPartySuppliers.forEach(function(supplier) {\t\t\t\t\n\t\t\t\tconst ids = { parentID: parentID, nextChildID: ++childID };\n\t\t\t\tconst supplierNodes = supplier.findLinks(1 * system[0], ids);\n\t\t\t\tif(!supplierNodes) { return; }\n\t\t\t\tchildID = ids.nextChildID - 1;\n\n\t\t\t\tfor(var ti = 0; ti < supplierNodes.length; ti++) {\n\t\t\t\t\tvar supplierNode = supplierNodes[ti];\n\t\t\t\t\tif(0 > usedLinks.indexOf(supplierNode.id)) {\n\t\t\t\t\t\tif(0 > connectedTo.indexOf(supplierNode.child.systemID)) { // not in our map already\n\t\t\t\t\t\t\tsupplierNode.thirdParty = supplier.nodeNameSuffix;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tchainLinks.push(supplierNode);\n\t\t\t\t\t\t\tchainList.push([supplierNode.child.systemID, supplierNode.child.id, system[2]]);\n\t\t\t\t\t\t\tconnectedTo.push(supplierNode.child.systemID);\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddCalcChildNodes(supplierNode);\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t// Always want to do this, even if we didn't add it, because in that case the link is overridden by one on this mask, so it is 'used' even if not made visible\n\t\t\t\t\t\tusedLinks.push(supplierNode.id);\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif ($(\"#chainTabs .current\").length > 0) {\n\t\t\tvar systems = $(\"#chainTabs .current .name\").data(\"tab\").toString().split(\",\");\n\t\t\tvar chainList = [];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tif (systems == 0) {\n                                let i = 0;\n                                Object.keys(map).slice()/*.reverse()*/.forEach(x => {\n\t\t\t\t        const parent = tripwire.client.signatures[map[x].initialID];\n\t\t\t\t        const child = tripwire.client.signatures[map[x].secondaryID];\n                                        if (parent && tripwire.systems[parent.systemID] && typeof(tripwire.systems[parent.systemID].class) == \"undefined\") {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t// usedLinks[parent.systemID] = [];\n\t\t\t\t\t\tchain.rows.push({c: [topLevel(parent.systemID, i), {v: null}]});\n\t\t\t\t\t\tchainList.push([parent.systemID, i, parent.systemID]);\n                                        } else if (child && tripwire.systems[child.systemID] && typeof(tripwire.systems[child.systemID].class) == \"undefined\") {\n\t\t\t\t  \t        i++;\n\t\t\t\t  \t\t// usedLinks[child.systemID] = [];\n\t\t\t\t\t\tchain.rows.push({c: [topLevel(child.systemID, i), {v: null}]});\n\t\t\t\t\t\tchainList.push([child.systemID, i, child.systemID]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfor (var x in systems) {\n\t\t\t\t\t// usedLinks[systems[x]] = [];\n\t\t\t\t\tchain.rows.push({c: [topLevel(systems[x], parseInt(x) + 1), {v: null}]});\n\t\t\t\t\tchainList.push([systems[x], parseInt(x) + 1, systems[x]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < chainList.length; i++) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t} else {\n\t\t\t$(\"#chainError\").hide();\n\n\t\t\tvar row = {c: []};\n\t\t\tvar systemID = viewingSystemID;\n\n\t\t\trow.c.push(topLevel(systemID, 1), {v: null});\n\n\t\t\tchain.rows.push(row);\n\n\t\t\tvar chainList = [[systemID, 1]];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tfor (var i = 0; i < chainList.length; ++i) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t}\n\n\t\tconst systemsInChainMap = {};\n\t\tfor (var x in chainLinks) {\n\t\t\tvar node = chainLinks[x];\n\t\t\tvar row = {c: []};\n\t\t\t\n\t\t\tconst sigText = options.chain[\"node-reference\"] == \"id\" ? (node.child.signatureID ? node.child.signatureID.substring(0, 3) : \"???\") :\n\t\t\t\t\t(node.child.type || \"(?)\") + sigFormat(node.child.typeBM, \"type\");\n\t\t\tconst nodeTypeMarkup = node.child.path ? \n\t\t\t\tchainMap.renderPath(node.child.path) :\n\t\t\t\t\"<a href='#' onclick='openSignatureDialog({data: { signature: \" + node.child.sigIndex + \", mode: \\\"update\\\" }}); return false;'>\" + _.escape(\n\t\t\t\t\tnode.parent.name && options.chain.sigNameLocation == 'ref' ? node.parent.name :\n\t\t\t\t\tnode.parent.name && options.chain.sigNameLocation == 'ref_prefix' ? node.parent.name + ' - ' + sigText :\n\t\t\t\t\tsigText\n\t\t\t\t) + '</a>';\n\t\t\tconst additionalClasses = node.calculated ? ['calc'] : systemsInChainMap[node.child.systemID] ? [ 'loop' ] : [];\n\t\t\tif(node.thirdParty) { additionalClasses.push('third-party', 'third-party-' + node.thirdParty); }\n\t\t\tconst child = makeSystemNode(node.child.systemID, node.child.id, node.id, node.child.sigIndex, node.parent.name, nodeTypeMarkup, additionalClasses);\n\n\t\t\tvar parent = {v: node.parent.id};\n\n\t\t\trow.c.push(child, parent);\n\t\t\tchain.rows.push(row);\n\t\t\t\n\t\t\tvar modifiers = [];\t\t\t\n\t\t\tif (node.life == \"critical\") { modifiers.push('eol'); }\n\t\t\tif (node.mass == \"critical\") { modifiers.push('critical'); }\n\t\t\telse if (node.mass == \"destab\") { modifiers.push('destab'); }\n\t\t\t\n\t\t\tif($.inArray(node.parent.type, frigTypes) != -1 || $.inArray(node.child.type, frigTypes) != -1) { modifiers.push('frig'); }\n\t\t\t\n\t\t\tif(modifiers.length) { connections.push(Array(child.v, parent.v, modifiers, node.id)); }\n\t\t\t\n\t\t\tif(!node.calculated) { systemsInChainMap[node.child.systemID] = row; }\t// store for loops\n\t\t}\n\n\t\t// Apply critical/destab line colors\n\t\tconnections.reverse(); // so we apply to outer systems first\n\n\t\t//this.data.map = chain;\n\t\t//this.data.lines = connections;\n\t\treturn {\"map\": chain, \"lines\": connections};\n\t}\n\n\tthis.renderPath = function(path) {\n\t\tif(path.length <= 1 || path.length > options.chain.routingLimit) { return '' + path.length - 1; }\n\t\telse {\n\t\t\tvar systemMarkup = path\n\t\t\t.slice(0, path.length - 1).reverse()\n\t\t\t.map(function(s) {\n\t\t\t\tconst systemID = 30000000 + 1 * s;\n\t\t\t\tconst system = systemAnalysis.analyse(systemID);\n\t\t\t\tconst securityClass = system.systemTypeClass;\n\t\t\t\treturn '<span class=\"' + securityClass + '\" data-tooltip=\"' + system.name + ' (' + system.security + ')\" onclick=\"tripwire.systemChange(' + systemID + ')\">' + system.pathSymbol + '</span>';\n\t\t\t});\n\t\t\tvar r = '<span class=\"path\">';\n\t\t\tfor(var i = 0; i < systemMarkup.length; i++) {\n\t\t\t\tif(i > 0 && 0 == i % 5) { r += '|'; }\n\t\t\t\t\n\t\t\t\tr += systemMarkup[i];\t\t\t\t \n\t\t\t}\n\t\t\treturn r + '</span>';\n\t\t}\n\t}\n\n\tthis.setActiveTab = function(newIndex) {\n\t\t$(\"#chainTabs .tab\").removeClass(\"current\");\n\t\toptions.chain.active = newIndex;\n\t\tif(newIndex != null) {\n\t\t\t$(\"#chainTabs .tab\").eq(newIndex).addClass('current');\n\t\t}\n\t\t\n\t\toptions.save();\n\t\tchain.redraw();\n\t\ttripwire.parse(tripwire.client, \"refresh\");\n\t}\n\n\tthis.redraw = function() {\n\t\tthis.useRenderer(options.chain.renderer);\n\t\t\n\t\tvar data = $.extend(true, {}, this.data);\n\t\tdata.map = $.extend(true, {}, data.rawMap);\n\n\t\tthis.draw(data);\n\t}\n\t\n\tvar drawRetryTimer = null;\n\n\tthis.draw = function(data) {\n\t\tvar data = typeof(data) !== \"undefined\" ? data : {};\n\t\tclearTimeout(drawRetryTimer);\n\n\t\t// We need to make sure Google chart is ready and we have signature data for this system before we begin, otherwise delay\n\t\tif (!this.renderer.ready() || (Object.size(data.map) && !tripwire.client.signatures)) {\n\t\t\tdrawRetryTimer = setTimeout(function() { chain.draw(data) }, 100);\n\t\t\treturn;\n\t\t}\n\n\t\tif (data.map) {\n\t\t\tthis.drawing = true;\n\n\t\t\tthis.data.rawMap = $.extend(true, {}, data.map);\n\n\t\t\t// if (options.chain.active == null || (options.chain.tabs[options.chain.active] && options.chain.tabs[options.chain.active].evescout == false)) {\n\t\t\t// \tif (options.masks.active != \"273.0\") {\n\t\t\t// \t\tfor (var i in data.map) {\n\t\t\t// \t\t\tif (data.map[i].mask == \"273.0\") {\n\t\t\t// \t\t\t\tdelete data.map[i];\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t// Sort so we keep the chain map order the same\n\t\t\tObject.sort(data.map, \"id\");\n\n\t\t\t$.extend(data, this.nodes(data.map)); // 250ms -> <100ms\n\t\t\t$.extend(this.data, data);\n\t\t\t\n\t\t\tconst collapsedSystems = options.chain.tabs[options.chain.active] ? (options.chain.tabs[options.chain.active].collapsed || []) : [];\n\n\t\t\tthis.renderer.draw(data.map, data.lines, collapsedSystems); // 150ms\n\t\t\t//this.map.draw(this.newView(data.map), this.options); // 150ms\n\n//\t\t\tthis.renderer.lines(data); // 300ms\n\t\t\tthis.grid(); // 4ms\n\n\t\t\t// Apply current system style\n\t\t\t$(\"#chainMap [data-nodeid='\"+viewingSystemID+\"']\").parent().addClass(\"currentNode\"); // 0.1ms\n\n\t\t\t// Remove old system effect tooltips and add current ones\n\t\t\tif (WormholeTypeToolTips.attachedElements && WormholeTypeToolTips.attachedElements.length > 0) {\n\t\t\t\tWormholeTypeToolTips.detach($(\"#chainMap .whEffect\"));\n\t\t\t}\n\t\t\tWormholeTypeToolTips.attach($(\"#chainMap .whEffect[data-icon]\")); // 0.30ms\n\t\t\tWormholeRouteToolTips.attach($(\"#chainMap .path span[data-tooltip]\"));\n\t\t\tSystemActivityToolTips.attach($(\"#chainMap .nodeClass span[data-tooltip]\"));\n\n\t\t\tthis.drawing = false;\n\t\t}\n\n\t\t// Gather latest system activity\n\t\tif (!this.data.activity || new Date() > this.data.activity.expires) {\n\t\t\tdata.activity = {};\n\t\t\ttripwire.esi.universeJumps()\n\t\t\t\t.done(function(results, status, request) {\n\t\t\t\t\tdata.activity.expires = new Date(request.getResponseHeader(\"expires\"));\n\t\t\t\t\t$.each(results, function(x) {\n\t\t\t\t\t\tdata.activity[results[x].system_id] = {\n\t\t\t\t\t\t\tsystemID: results[x].system_id,\n\t\t\t\t\t\t\tshipJumps: results[x].ship_jumps\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\t return tripwire.esi.universeKills()\n\t\t\t\t\t\t.done(function(results) {\n\t\t\t\t\t\t\t$.each(results, function(x) {\n\t\t\t\t\t\t\t\tif (data.activity[results[x].system_id]) {\n\t\t\t\t\t\t\t\t\tdata.activity[results[x].system_id].podKills = results[x].pod_kills;\n\t\t\t\t\t\t\t\t\tdata.activity[results[x].system_id].shipKills = results[x].ship_kills;\n\t\t\t\t\t\t\t\t\tdata.activity[results[x].system_id].npcKills = results[x].npc_kills;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdata.activity[results[x].system_id] = {\n\t\t\t\t\t\t\t\t\t\tsystemID: results[x].system_id,\n\t\t\t\t\t\t\t\t\t\tpodKills: results[x].pod_kills,\n\t\t\t\t\t\t\t\t\t\tshipKills: results[x].ship_kills,\n\t\t\t\t\t\t\t\t\t\tnpcKills: results[x].npc_kills,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\tchain.data.activity = chain.activity(data.activity);\n\t\t\t\t});\n\t\t} else if (data.map) {\n\t\t\tchain.activity(this.data.activity);\n\t\t}\n\n\t\tif (data.occupied) { // 3ms\n\t\t\tthis.data.occupied = this.occupied(data.occupied);\n\t\t}\n\n\t\tif (data.flares) { // 20ms\n\t\t\tthis.data.flares = this.flares(data.flares);\n\t\t}\n\t}\n\n\tthis.updateCollapsed = function(collapsedSystems) {\n\t\tif (options.chain.tabs[options.chain.active]) {\n\t\t\toptions.chain.tabs[options.chain.active].collapsed = collapsedSystems;\n\t\t}\n\t\t\n\t\t// Apply current system style\n\t\t$(\"#chainMap [data-nodeid='\"+viewingSystemID+\"']\").parent().addClass(\"currentNode\");\n\n\t\tif (WormholeTypeToolTips.attachedElements && WormholeTypeToolTips.attachedElements.length > 0) {\n\t\t\tWormholeTypeToolTips.detach($(\"#chainMap .whEffect\"));\n\t\t}\n\t\tWormholeTypeToolTips.attach($(\"#chainMap .whEffect[data-icon]\"));\n\n\t\tchain.activity(chain.data.activity);\n\n\t\tchain.occupied(chain.data.occupied);\n\n\t\tchain.flares(chain.data.flares);\n\n\t\tchain.grid();\n\n\t\toptions.save();\n\t}\n\n}\n","tripwire.active = function(data) {\n    var editSigs = [];\n    var editComments = [];\n\n    for (var x in data) {\n        var activity = JSON.parse(data[x].activity);\n        editSigs.push(parseInt(activity.editSig));\n        editComments.push(parseInt(activity.editComment));\n\n        if (activity.editSig) {\n            $(\"#sigTable tr[data-id='\"+activity.editSig+\"']\")\n                //.attr('data-tooltip', sig.editing)\n                //.attr(\"title\", sig.editing)\n                .addClass(\"editing\")\n                .find(\"td\")\n                .animate({backgroundColor: \"#001b47\"}, 1000); //35240A - Yellow\n        }\n\n        if (activity.editComment && $(\"#commentWrapper .comment[data-id='\"+activity.editComment+\"'] .cke\").length > 0) {\n            $(\"#commentWrapper .comment[data-id='\"+activity.editComment+\"']\")\n                .addClass(\"editing\")\n                .find(\".commentStatus\").html(data[x].characterName + \" is editing\").fadeIn();\n        }\n    }\n\n    $(\"#sigTable tr.editing\").each(function() {\n        if ($.inArray($(this).data(\"id\"), editSigs) == -1) {\n            $(\"#sigTable tr[data-id='\"+$(this).data(\"id\")+\"']\")\n                //.attr('data-tooltip', '')\n                //.removeAttr(\"title\")\n                .removeClass(\"editing\")\n                .find(\"td\")\n                .animate({backgroundColor: \"#111\"}, 1000, null, function() {$(this).css({backgroundColor: \"\"});});\n        }\n    });\n\n    $(\"#commentWrapper .editing\").each(function() {\n        if ($.inArray($(this).data(\"id\"), editComments) == -1) {\n            $(\"#commentWrapper .editing[data-id='\"+$(this).data(\"id\")+\"']\")\n                .removeClass(\"editing\")\n                .find(\".commentStatus\").fadeOut(function() {$(this).html(\"\")});\n        }\n    });\n}\n","// Hanldes adding to Signatures section\n// ToDo: Use native JS\ntripwire.addSig = function(add, option, disabled) {\n    var option = option || {};\n    var animate = typeof(option.animate) !== 'undefined' ? option.animate : true;\n    var disabled = disabled || false;\n    var wormhole = {};\n\n    if (add.type == \"wormhole\") {\n        var wormhole = Object.values(tripwire.client.wormholes).find(function (wh) { return wh.initialID == add.id || wh.secondaryID == add.id});\n        if (!wormhole) return false;\n        var otherSignature = add.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID];\n        if (!otherSignature) return false;\n\n        if (add.name) {\n          leadsTo = tripwire.systems[otherSignature.systemID] ? \"<a href='.?system=\"+tripwire.systems[otherSignature.systemID].name+\"'>\"+add.name+\"</a>\" : add.name;\n        } else if (tripwire.aSigSystems[otherSignature.systemID]) {\n            leadsTo = tripwire.aSigSystems[otherSignature.systemID];\n        } else if (tripwire.systems[otherSignature.systemID]) {\n            leadsTo = \"<a href='.?system=\"+tripwire.systems[otherSignature.systemID].name+\"'>\"+tripwire.systems[otherSignature.systemID].name+\"</a>\";\n        } else {\n            leadsTo = \"\";\n        }\n\n        var row = \"<tr data-id='\"+add.id+\"' data-tooltip='' \"+ (disabled ? 'disabled=\"disabled\"' : '') +\">\"\n            + \"<td class='\"+ options.signatures.alignment.sigID +\"'>\"+(add.signatureID ? add.signatureID.substring(0, 3)+\"-\"+(add.signatureID.substring(3, 6) || \"###\") : \"???-###\")+\"</td>\"\n            + \"<td class='type-tooltip \"+ options.signatures.alignment.sigType +\"' data-tooltip=\\\"\"+this.whTooltip(wormhole)+\"\\\">\"+(wormhole[wormhole.parent+\"ID\"] == add.id ? wormhole.type || \"\" : (wormhole.parent ? \"K162\" : \"\"))+\"</td>\"\n            + \"<td class='age-tooltip \"+ options.signatures.alignment.sigAge + (parseInt(add.lifeLength) === 0 ? \" disabled\" : \"\") +\"' data-tooltip='\"+this.ageTooltip(add)+\"'><span data-age='\"+add.lifeTime+\"'></span></td>\"\n            + \"<td class='\"+ options.signatures.alignment.leadsTo +\"'>\"+(leadsTo || \"\")+\"</td>\"\n            + \"<td class='\"+wormhole.life+\" \"+ options.signatures.alignment.sigLife +\"'>\"+wormhole.life+\"</td>\"\n            + \"<td class='\"+wormhole.mass+\" \"+ options.signatures.alignment.sigMass +\"'>\"+wormhole.mass+\"</td>\"\n            + \"</tr>\";\n\n        var tr = $(row);\n    } else {\n        var row = \"<tr data-id='\"+add.id+\"' data-tooltip='' \"+ (disabled ? 'disabled=\"disabled\"' : '') +\">\"\n            + \"<td class='\"+ options.signatures.alignment.sigID +\"'>\"+(add.signatureID ? add.signatureID.substring(0, 3)+\"-\"+(add.signatureID.substring(3, 6) || \"###\") : \"???-###\")+\"</td>\"\n            + \"<td class='\"+ options.signatures.alignment.sigType +\"'>\"+add.type+\"</td>\"\n            + \"<td class='age-tooltip \"+ options.signatures.alignment.sigAge + (parseInt(add.lifeLength) === 0 ? \" disabled\" : \"\") +\"' data-tooltip='\"+this.ageTooltip(add)+\"'><span data-age='\"+add.lifeTime+\"'></span></td>\"\n            + \"<td class='\"+ options.signatures.alignment.leadsTo +\"' colspan='3'>\"+(add.name?linkSig(add.name):'')+\"</td>\"\n            + \"</tr>\";\n\n        var tr = $(row);\n    }\n\n    Tooltips.attach($(tr).find(\"[data-tooltip]\"));\n\n    $(\"#sigTable\").append(tr);\n\n    // Add counter\n    if (wormhole.life == \"critical\") {\n        $(tr).find('span[data-age]').countdown({until: moment.utc(add.lifeLeft).toDate(), onExpiry: this.pastEOL, alwaysExpire: true, compact: true, format: this.ageFormat, serverSync: this.serverTime.getTime})\n            // .countdown('pause')\n            .addClass('critical')\n            // .countdown('resume');\n    } else {\n        $(tr).find('span[data-age]').countdown({since: moment.utc(add.lifeTime).toDate(), compact: true, format: this.ageFormat, serverSync: this.serverTime.getTime});\n    }\n\n    if (animate) {\n        $(tr)\n            .find('td')\n            .wrapInner('<div class=\"hidden\" />')\n            .parent()\n            .find('td > div')\n            .slideDown(700, function(){\n                $set = $(this);\n                $set.replaceWith($set.contents());\n            });\n\n        $(tr).find(\"td\").animate({backgroundColor: \"#004D16\"}, 1000).delay(1000).animate({backgroundColor: \"#111\"}, 1000, null, function() {$(this).css({backgroundColor: \"\"});});\n    }\n}\n","// Handles API updates\ntripwire.API = function() {\n    this.indicator;\n    this.APIrefresh;\n\n    this.API.expire = function() {\n        var options = {since: tripwire.API.APIrefresh, until: null, format: \"MS\", layout: \"-{mnn}{sep}{snn}\"};\n        $(\"#APItimer\").countdown(\"option\", options);\n    }\n\n    this.API.refresh = function() {\n        $.ajax({\n            url: \"api_update.php\",\n            cache: false,\n            dataType: \"JSON\",\n            data: \"indicator=\"+tripwire.API.indicator\n        }).done(function(data) {\n            if (data && data.APIrefresh) {\n                tripwire.API.indicator = data.indicator;\n                tripwire.API.APIrefresh = new Date(data.APIrefresh);\n                activity.refresh(); //Refresh graph\n\n                var options = {until: tripwire.API.APIrefresh, since: null, layout: \"{mnn}{sep}{snn}\"};\n                $(\"#APItimer\").countdown(\"option\", options);\n                setTimeout(\"tripwire.API.refresh();\", $.countdown.periodsToSeconds($(\"#APItimer\").countdown('getTimes')) - 30);\n            } else if ($(\"#APItimer\").countdown(\"option\", \"layout\") !== \"-{mnn}{sep}{snn}\" && $.countdown.periodsToSeconds($(\"#APItimer\").countdown('getTimes')) > 120) {\n                setTimeout(\"tripwire.API.refresh();\", ($.countdown.periodsToSeconds($(\"#APItimer\").countdown('getTimes')) - 30) * 1000);\n            } else {\n                setTimeout(\"tripwire.API.refresh();\", 15000);\n            }\n        });\n    }\n\n    this.API.init = function() {\n        $.ajax({\n            url: \"api_update.php\",\n            cache: true,\n            dataType: \"JSON\",\n            data: \"init=true\"\n        }).done(function(data) {\n            tripwire.API.indicator = data.indicator;\n            tripwire.API.APIrefresh = new Date(data.APIrefresh);\n\n            $(\"#APItimer\").countdown({until: tripwire.API.APIrefresh, onExpiry: tripwire.API.expire, alwaysExpire: true, compact: true, format: \"MS\", serverSync: tripwire.serverTime.getTime, onTick: function(t) { $(\"#APIclock\").val(t[5] + 1).trigger(\"change\"); }})\n            var timer = $(\"#APItimer\").countdown(\"option\", \"layout\") === \"-{mnn}{sep}{snn}\" ? 15 : $.countdown.periodsToSeconds($(\"#APItimer\").countdown('getTimes')) - 30;\n            setTimeout(\"tripwire.API.refresh();\", timer * 1000);\n        });\n    }\n\n    this.API.init();\n}\n// tripwire.API();\n","tripwire.autoMapper = function(from, to) {\n    var pods = [33328, 670];\n    var undo = [];\n\n    // Convert from & to from system name to system ID for diagnostic testing\n    // from = viewingSystemID;\n    // to = Object.index(tripwire.systems, 'name', to);\n\n    // Make sure the automapper is turned on & not disabled\n    if (!$(\"#toggle-automapper\").hasClass(\"active\") || $(\"#toggle-automapper\").hasClass(\"disabled\"))\n        return false;\n\n    // Make sure from and to are valid systems\n    if (!tripwire.systems[from] || !tripwire.systems[to])\n        return false;\n\n    // Make sure from and to are not the same system\n    if (from == to)\n        return false;\n\n    // Is pilot in a station?\n    if (tripwire.client.EVE && tripwire.client.EVE.stationID)\n        return false;\n\n    // Is pilot in a pod?\n    if (tripwire.client.EVE && tripwire.client.EVE.shipTypeID && $.inArray(parseInt(tripwire.client.EVE.shipTypeID), pods) >= 0)\n         return false;\n\n    // Is this a gate?\n    if (typeof(tripwire.map.shortest[from - 30000000]) != \"undefined\" && typeof(tripwire.map.shortest[from - 30000000][to - 30000000]) != \"undefined\")\n        return false;\n\n     // Is this an existing connection?\n     if ($.map(tripwire.client.wormholes,\n               function(wormhole) {\n                 const initial = tripwire.client.signatures[wormhole.initialID];\n                 const secondary = tripwire.client.signatures[wormhole.secondaryID];\n                 return initial && secondary &&\n                   ((initial.systemID == from && secondary.systemID == to) ||\n                    (initial.systemID == to && secondary.systemID == from))  ? wormhole : null;\n               }).length > 0) {\n       return false;\n     }\n\n    var payload = {\"signatures\": {\"add\": [], \"update\": []}};\n    var sig, toClass;\n\n    if (tripwire.systems[to].class)\n        toClass = \"Class-\" + tripwire.systems[to].class;\n    else if (tripwire.systems[to].security >= 0.45)\n        toClass = \"High-Sec\";\n    else if (tripwire.systems[to].security > 0)\n        toClass = \"Low-Sec\";\n    else\n        toClass = \"Null-Sec\";\n\n    var wormholes = $.map(tripwire.client.wormholes, function(wormhole) {\n        if ( ( tripwire.client.signatures[wormhole.initialID] !== undefined ) && ( tripwire.client.signatures[wormhole.secondaryID] !== undefined ) ) {\n            // Find wormholes that have no set Leads To system, and their initial system is from the wormhole we just jumped from\n            if (tripwire.client.signatures[wormhole.initialID].systemID == from && !tripwire.systems[tripwire.client.signatures[wormhole.secondaryID].systemID]) {\n                if (tripwire.aSigSystems[tripwire.client.signatures[wormhole.secondaryID].systemID] == toClass) {\n                    // Find wormholes that Leads To is generically set to the class we just jumped into\n                    return wormhole;\n                } else if (wormhole.type && tripwire.wormholes[wormhole.type] && tripwire.wormholes[wormhole.type].leadsTo.replace(' ', '-') == toClass) {\n                    // Find wormholes that Type is known to lead to the class we just jumped into\n                    return wormhole;\n                } else if (tripwire.client.signatures[wormhole.secondaryID].systemID === null && (!wormhole.type || !tripwire.wormholes[wormhole.type])) {\n                    // Find wormholes that don't have a Type or any kind of Leads To entered\n                    return wormhole;\n                }\n            }\n        }\n    });\n\n    if (wormholes.length) {\n        if (wormholes.length > 1) {\n            $(\"#dialog-select-signature\").dialog({\n                autoOpen: true,\n                title: \"Which Signature?\",\n                width: 390,\n                buttons: {\n                    Cancel: function() {\n                        $(this).dialog(\"close\");\n                    },\n                    Ok: function() {\n                        var i = $(\"#dialog-select-signature [name=sig]:checked\").val();\n                        var wormhole = wormholes[i];\n                        var signature = tripwire.client.signatures[wormhole.initialID];\n                        var signature2 = tripwire.client.signatures[wormhole.secondaryID];\n\n                        payload.signatures.update.push({\n                            \"wormhole\": {\n                                \"id\": wormhole.id\n                            },\n                            \"signatures\": [\n                                {\n                                    \"id\": signature.id\n                                },\n                                {\n                                    \"id\": signature2.id,\n                                    \"systemID\": to\n                                }\n                            ]\n                        });\n\n                        var success = function(data) {\n                            if (data.resultSet && data.resultSet[0].result == true) {\n                                undo.push({\"wormhole\": wormhole, \"signatures\": [signature, signature2]});\n                                $(\"#dialog-select-signature\").dialog(\"close\");\n                            }\n                        }\n\n                        tripwire.refresh('refresh', payload, success);\n                    }\n                },\n                open: function() {\n                    $(\"#dialog-select-signature .optionsTable tbody\").empty();\n\n                    $.each(wormholes, function(i) {\n                        var signature = tripwire.client.signatures[wormholes[i].initialID];\n                        var signatureRow = $(\"#sigTable tr[data-id='\"+signature.id+\"']\").html();\n                        var tr = \"<tr>\"\n                          + \"<td><input type='radio' name='sig' value='\"+i+\"' id='sig\"+i+\"' /></td>\"\n                          + signatureRow\n                          + \"</tr>\";\n\n                        $(\"#dialog-select-signature .optionsTable tbody\").append(tr);\n                        $(\"#dialog-select-signature .optionsTable tbody td\").wrapInner(\"<label for='sig\"+i+\"' />\");\n                    });\n                }\n            });\n        } else {\n            var wormhole = wormholes[0];\n            var signature = tripwire.client.signatures[wormhole.initialID];\n            var signature2 = tripwire.client.signatures[wormhole.secondaryID];\n\n            payload.signatures.update.push({\n                \"wormhole\": {\n                    \"id\": wormhole.id\n                },\n                \"signatures\": [\n                    {\n                        \"id\": signature.id\n                    },\n                    {\n                        \"id\": signature2.id,\n                        \"systemID\": to\n                    }\n                ]\n            });\n            undo.push({\"wormhole\": wormhole, \"signatures\": [signature, signature2]});\n        }\n    } else {\n        // Nothing matches, create a new wormhole\n        payload.signatures.add.push({\n            \"wormhole\": {\n                \"type\": null,\n                \"parent\": \"initial\",\n                \"life\": \"stable\",\n                \"mass\": \"stable\"\n            },\n            \"signatures\": [\n                {\n                    \"systemID\": from,\n                    \"type\": \"wormhole\"\n                },\n                {\n                    \"systemID\": to,\n                    \"type\": \"wormhole\"\n                }\n            ]\n        });\n    }\n\n    if (payload.signatures.add.length || payload.signatures.update.length) {\n        var success = function(data) {\n            if (data.resultSet && data.resultSet[0].result == true) {\n                $(\"#undo\").removeClass(\"disabled\");\n\n                if (data.results) {\n                    if (viewingSystemID in tripwire.signatures.undo) {\n                        tripwire.signatures.undo[viewingSystemID].push({action: \"add\", signatures: data.results});\n                    } else {\n                        tripwire.signatures.undo[viewingSystemID] = [{action: \"add\", signatures: data.results}];\n                    }\n                }\n\n                if (undo.length) {\n                    if (viewingSystemID in tripwire.signatures.undo) {\n                        tripwire.signatures.undo[viewingSystemID].push({action: \"update\", signatures: undo});\n                    } else {\n                        tripwire.signatures.undo[viewingSystemID] = [{action: \"update\", signatures: undo}];\n                    }\n                }\n\n                sessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n            }\n        }\n\n        tripwire.refresh('refresh', payload, success);\n    }\n}\n","$(\"body\").on(\"dblclick\", \".comment\", function(e) {\n\te.preventDefault();\n\tdocument.getSelection().removeAllRanges();\n\t$(this).find(\".commentEdit\").click();\n})\n\n$(\"body\").on(\"click\", \".commentEdit\", function(e) {\n\te.preventDefault();\n\n\t// Prevent multiple editors\n\tif ($(\".cke\").length) return false;\n\n\tvar $comment = $(this).closest(\".comment\");\n\n\t$comment.find(\".commentToolbar\").hide();\n\n\tCKEDITOR.replace($comment.find(\".commentBody\").attr(\"id\"), CKConfig).on(\"instanceReady\", function() {\n\t\t$comment.find(\".commentStatus\").html(\"\");\n\t\t$comment.find(\".commentFooter\").show();\n\t\t$comment.find(\".commentFooter .commentControls\").show();\n\t});\n\n\ttripwire.activity.editComment = $comment.data(\"id\");\n\ttripwire.refresh('refresh');\n});\n\n$(\"body\").on(\"click\", \".commentSave, .commentCancel\", function(e) {\n\te.preventDefault();\n\tvar $this = $(this);\n\tif ($this.attr(\"disabled\")) return false;\n\n\tvar $comment = $this.closest(\".comment\");\n\t$this.attr(\"disabled\", \"true\");\n\n\tif ($this.hasClass(\"commentSave\")) {\n\t\tvar data = {\"mode\": \"save\", \"commentID\": $comment.data(\"id\"), \"systemID\": $comment.find(\".commentSticky\").hasClass(\"active\") ? 0 : viewingSystemID, \"comment\": CKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].getData()};\n\n\t\t$.ajax({\n\t\t\turl: \"comments.php\",\n\t\t\ttype: \"POST\",\n\t\t\tdata: data,\n\t\t\tdataType: \"JSON\"\n\t\t}).done(function(data) {\n\t\t\tif (data && data.result == true) {\n\t\t\t\t$comment.find(\".commentModified\").html(\"Edited by \" + data.comment.modifiedByName + \" at \" + data.comment.modifiedDate);\n\t\t\t\t$comment.find(\".commentCreated\").html(\"Posted by \" + data.comment.createdByName + \" at \" + data.comment.createdDate);\n\t\t\t\tTooltips.attach($comment.find(\"[data-tooltip]\"));\n\n\t\t\t\tCKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].destroy(false);\n\t\t\t\t$comment.attr(\"data-id\", data.comment.id);\n\t\t\t\t$comment.find(\".commentToolbar\").show();\n\t\t\t\t$comment.find(\".commentFooter\").hide();\n\t\t\t\t$this.removeAttr(\"disabled\");\n\t\t\t}\n\t\t});\n\t} else {\n\t\tCKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].destroy(true);\n\n\t\tif (!$comment.attr(\"data-id\")) {\n\t\t\t$comment.remove();\n\t\t} else {\n\t\t\t$comment.find(\".commentToolbar\").show();\n\t\t\t$comment.find(\".commentFooter\").hide();\n\t\t\t$this.removeAttr(\"disabled\");\n\t\t}\n\t}\n\n\t$comment.find(\".commentStatus\").html(\"\");\n\n\tdelete tripwire.activity.editComment;\n\ttripwire.refresh('refresh');\n});\n\n$(\"body\").on(\"click\", \".commentDelete\", function(e) {\n\te.preventDefault();\n\tvar $comment = $(this).closest(\".comment\");\n\n\t// check if dialog is open\n\tif (!$(\"#dialog-deleteComment\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-deleteComment\").data(\"comment\", $comment).dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 0,\n\t\t\tposition: {my: \"center\", at: \"center\", of: $(\"#notesWidget\")},\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tDelete: function() {\n\t\t\t\t\t// Prevent duplicate submitting\n\t\t\t\t\t$(\"#dialog-deleteComment\").parent().find(\":button:contains('Delete')\").button(\"disable\");\n\n\t\t\t\t\tvar $comment = $(this).data(\"comment\");\n\t\t\t\t\tvar data = {\"mode\": \"delete\", \"commentID\": $comment.data(\"id\")};\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"comments.php\",\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).done(function(data) {\n\t\t\t\t\t\tif (data && data.result == true) {\n\t\t\t\t\t\t\t$(\"#dialog-deleteComment\").dialog(\"close\");\n\t\t\t\t\t\t\t$comment.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t$(\"#dialog-deleteComment\").parent().find(\":button:contains('Delete')\").button(\"enable\");\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-deleteComment\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-deleteComment\").data(\"comment\", $comment).dialog(\"open\");\n\t}\n});\n\n$(\"body\").on(\"click\", \"#add-comment\", function(e) {\n\te.preventDefault();\n\n\t// Prevent multiple editors\n\tif ($(\".cke\").length) return false;\n\n\tvar $comment = $(\".comment:last\").clone();\n\tvar commentID = $(\".comment:visible:last .commentBody\").attr(\"id\") ? $(\".comment:visible:last .commentBody\").attr(\"id\").replace(\"comment\", \"\") + 1 : 0;\n\t$(\".comment:last\").before($comment);\n\n\t$comment.find(\".commentBody\").attr(\"id\", \"comment\" + commentID);\n\t$comment.removeClass(\"hidden\").find(\".commentEdit\").click();\n});\n\n$(\"body\").on(\"click\", \".commentSticky\", function(e) {\n\te.preventDefault();\n\tvar $comment = $(this).closest(\".comment\");\n\n\tvar data = {\"mode\": \"sticky\", \"commentID\": $comment.data(\"id\"), \"systemID\": $comment.find(\".commentSticky\").hasClass(\"active\") ? viewingSystemID : 0};\n\n\t$.ajax({\n\t\turl: \"comments.php\",\n\t\ttype: \"POST\",\n\t\tdata: data,\n\t\tdataType: \"JSON\"\n\t}).done(function(data) {\n\t\tif (data && data.result == true) {\n\t\t\t$comment.find(\".commentSticky\").hasClass(\"active\") ? $comment.find(\".commentSticky\").removeClass(\"active\") : $comment.find(\".commentSticky\").addClass(\"active\");\n\t\t}\n\t});\n});\n","// Handles removing from Signatures section\ntripwire.deleteSig = function(key) {\n    var tr = $(\"#sigTable tr[data-id='\"+key+\"']\");\n\n    //Append empty space to prevent non-coloring\n    $(tr).find('td:empty, a:empty').append(\"&nbsp;\");\n\n    $(tr)\n        .find('td')\n        .wrapInner('<div />')\n        .parent()\n        .find('td > div').animate({backgroundColor: \"#4D0000\"}, 1000).delay(1000).animate({backgroundColor: \"#111\"}, 1000)\n        .slideUp(700, function(){\n            // Remove countdown reference\n            $(tr).find('span[data-age]').countdown(\"destroy\");\n\n            $(this).parent().parent().remove();\n            $(\"#sigTable\").trigger(\"update\");\n        });\n}\n","// Handles changing Signatures section\n// ToDo: Use native JS\ntripwire.editSig = function(edit, disabled) {\n    var disabled = disabled || false;\n    var wormhole = {};\n\n    if (edit.type == \"wormhole\") {\n        var wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == edit.id || wormhole.secondaryID == edit.id) return wormhole; })[0];\n        if (!wormhole) return false;\n        var otherSignature = edit.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID];\n        if (!otherSignature) return false;\n\n        if (edit.name) {\n          leadsTo = tripwire.systems[otherSignature.systemID] ? \"<a href='.?system=\"+tripwire.systems[otherSignature.systemID].name+\"'>\"+edit.name+\"</a>\" : edit.name;\n        } else if (tripwire.aSigSystems[otherSignature.systemID]) {\n            leadsTo = tripwire.aSigSystems[otherSignature.systemID];\n        } else if (tripwire.systems[otherSignature.systemID]) {\n            leadsTo = \"<a href='.?system=\"+tripwire.systems[otherSignature.systemID].name+\"'>\"+tripwire.systems[otherSignature.systemID].name+\"</a>\";\n        } else {\n            leadsTo = \"\";\n        }\n\n        var row = \"<tr data-id='\"+edit.id+\"' data-tooltip='' \"+ (disabled ? 'disabled=\"disabled\"' : '') +\">\"\n            + \"<td class='\"+ options.signatures.alignment.sigID +\"'>\"+(edit.signatureID ? edit.signatureID.substring(0, 3)+\"-\"+(edit.signatureID.substring(3, 6) || \"###\") : \"???-###\")+\"</td>\"\n            + \"<td class='type-tooltip \"+ options.signatures.alignment.sigType +\"' data-tooltip=\\\"\"+this.whTooltip(wormhole)+\"\\\">\"+(wormhole[wormhole.parent+\"ID\"] == edit.id ? wormhole.type || \"\" : (wormhole.parent ? \"K162\" : \"\"))+\"</td>\"\n            + \"<td class='age-tooltip \"+ options.signatures.alignment.sigAge + (parseInt(edit.lifeLength) === 0 ? \" disabled\" : \"\") +\"' data-tooltip='\"+this.ageTooltip(edit)+\"'><span data-age='\"+edit.lifeTime+\"'></span></td>\"\n            + \"<td class='\"+ options.signatures.alignment.leadsTo +\"'>\"+(leadsTo || \"\")+\"</td>\"\n            + \"<td class='\"+wormhole.life+\" \"+ options.signatures.alignment.sigLife +\"'>\"+wormhole.life+\"</td>\"\n            + \"<td class='\"+wormhole.mass+\" \"+ options.signatures.alignment.sigMass +\"'>\"+wormhole.mass+\"</td>\"\n            + \"</tr>\";\n\n        var tr = $(row);\n    } else {\n        var row = \"<tr data-id='\"+edit.id+\"' data-tooltip='' \"+ (disabled ? 'disabled=\"disabled\"' : '') +\">\"\n            + \"<td class='\"+ options.signatures.alignment.sigID +\"'>\"+(edit.signatureID ? edit.signatureID.substring(0, 3)+\"-\"+(edit.signatureID.substring(3, 6) || \"###\") : \"???-###\")+\"</td>\"\n            + \"<td class='\"+ options.signatures.alignment.sigType +\"'>\"+edit.type+\"</td>\"\n            + \"<td class='age-tooltip \"+ options.signatures.alignment.sigAge + (parseInt(edit.lifeLength) === 0 ? \" disabled\" : \"\") +\"' data-tooltip='\"+this.ageTooltip(edit)+\"'><span data-age='\"+edit.lifeTime+\"'></span></td>\"\n            + \"<td class='\"+ options.signatures.alignment.leadsTo +\"' colspan='3'>\"+(edit.name?linkSig(edit.name):'')+\"</td>\"\n            + \"</tr>\";\n\n        var tr = $(row);\n    }\n\n    Tooltips.attach($(tr).find(\"[data-tooltip]\"));\n\n    // Destroy the pervious countdown to prevent errors on a non-existant DOM element\n    $(\"#sigTable tr[data-id='\"+edit.id+\"']\").find('span[data-age]').countdown(\"destroy\");\n    $(\"#sigTable tr[data-id='\"+edit.id+\"']\").replaceWith(tr);\n\n    $(\"#sigTable\").trigger(\"update\");\n    // Update counter\n    if (wormhole.life == \"critical\") {\n        $(tr).find('span[data-age]').countdown({until: moment.utc(edit.lifeLeft).toDate(), onExpiry: this.pastEOL, alwaysExpire: true, compact: true, format: this.ageFormat, serverSync: this.serverTime.getTime})\n            .addClass('critical');\n    } else {\n        $(tr).find('span[data-age]').countdown({since: moment.utc(edit.lifeTime).toDate(), compact: true, format: this.ageFormat, serverSync: this.serverTime.getTime});\n    }\n\n    $(tr).effect(\"pulsate\");\n}\n","tripwire.esi = function() {\n    var baseUrl = \"https://esi.evetech.net\";\n    var userAgent = \"Tripwire Client \" + tripwire.version + \" (\" + window.location.hostname + \") - \" + window.navigator.userAgent;\n    var locationTimer, shipTimer, onlineTimer;\n    this.esi.connection = true;\n    this.esi.characters = {};\n\n    var scopeError = function(characterID) {\n        $(\"#tracking .tracking-clone[data-characterid='\"+ characterID +\"']\").find(\".alert\").show();\n    }\n\t\n\tvar isExpired = function(tokenExpire) {\n\t\treturn moment.utc(tokenExpire).subtract(5, \"minutes\").isBefore(moment());\n\t}\n\t\n    this.esi.location = function() {\n        clearTimeout(locationTimer);\n\n        for (characterID in tripwire.esi.characters) {\n            var character = tripwire.esi.characters[characterID];\n\n            // Check for expiring token\n            if (isExpired(character.tokenExpire)) {\n                tripwire.data.esi = {\"expired\": true};\n                continue;\n            }\n\n            $.ajax({\n                url: baseUrl + \"/v1/characters/\"+ characterID +\"/location/?\" + $.param({\"token\": character.accessToken, \"user_agent\": userAgent}),\n                // headers: {\"Authorization\": \"Bearer \"+ character.accessToken, \"X-User-Agent\": userAgent},\n                type: \"GET\",\n                dataType: \"JSON\",\n                characterID: characterID\n            }).done(function(data, status, xhr) {\n                var character = tripwire.esi.characters[this.characterID];\n\n                if (character) {\n                    character.locationDate = moment(xhr.getResponseHeader(\"last-modified\"), \"ddd, DD MMMM YYYY HH:mm:ss\").format();\n\n                    if (character.systemID != data.solar_system_id) {\n                        character.systemID = data.solar_system_id || null;\n                        character.systemName = tripwire.systems[data.solar_system_id] ? tripwire.systems[data.solar_system_id].name : null;\n\n                        $(\"#tracking .tracking-clone[data-characterid='\"+ this.characterID +\"']\").find(\".system\").html(character.systemName || \"&nbsp;\");\n\n                        // Send to Tripwire server on next refresh call\n                        tripwire.data.tracking[this.characterID] = {\n                            characterID: character.characterID,\n                            characterName: character.characterName,\n                            systemID: character.systemID,\n                            systemName: character.systemName,\n                            stationID: character.stationID,\n                            stationName: character.stationName,\n                            shipID: character.shipID,\n                            shipName: character.shipName,\n                            shipTypeID: character.shipTypeID,\n                            shipTypeName: character.shipTypeName};\n                    }\n\n                    if (character.stationID != data.station_id) {\n                        character.stationID = data.station_id || null;\n\n                        if (data.station_id) {\n                            tripwire.esi.stationLookup(data.station_id, this.characterID)\n                                .always(function(data) {\n                                    var character = tripwire.esi.characters[this.reference];\n\n                                    character.stationName = data.name || null;\n                                    $(\"#tracking .tracking-clone[data-characterid='\"+ this.reference +\"']\").find(\".station\").html(data.name.substring(0, 17) + \"...\" || \"&nbsp;\").attr(\"data-tooltip\", data.name);\n                                    Tooltips.attach($(\"#tracking .tracking-clone[data-characterid='\"+ this.reference +\"'] .station[data-tooltip]\"));\n\n                                    // Send to Tripwire server on next refresh call\n                                    tripwire.data.tracking[this.reference] = {\n                                        characterID: character.characterID,\n                                        characterName: character.characterName,\n                                        systemID: character.systemID,\n                                        systemName: character.systemName,\n                                        stationID: character.stationID,\n                                        stationName: character.stationName,\n                                        shipID: character.shipID,\n                                        shipName: character.shipName,\n                                        shipTypeID: character.shipTypeID,\n                                        shipTypeName: character.shipTypeName};\n                                });\n                        } else {\n                            character.stationName = null;\n                            // $(\"#tracking .tracking-clone[data-characterid='\"+ this.characterID +\"']\").find(\".station\").html(\"&nbsp;\").attr(\"data-tooltip\", \"&nbsp;\");\n                            Tooltips.detach($(\"#tracking .tracking-clone[data-characterid='\"+ this.characterID +\"'] .station[data-tooltip]\"));\n\n                            // Send to Tripwire server on next refresh call\n                            tripwire.data.tracking[this.characterID] = {\n                                characterID: character.characterID,\n                                characterName: character.characterName,\n                                systemID: character.systemID,\n                                systemName: character.systemName,\n                                stationID: character.stationID,\n                                stationName: character.stationName,\n                                shipID: character.shipID,\n                                shipName: character.shipName,\n                                shipTypeID: character.shipTypeID,\n                                shipTypeName: character.shipTypeName};\n                        }\n                    }\n\n                    if (options.tracking.active == this.characterID) {\n                        tripwire.EVE(tripwire.esi.characters[options.tracking.active]);\n                    }\n                }\n            }).fail(function(data) {\n                if (data.status == 403) {\n                    tripwire.refresh(\"refresh\", {\"esi\": {\"expired\": true}});\n                }\n            }).always(function(data, status, xhr) {\n                if (status != \"success\" && status != \"abort\" && tripwire.esi.connection == true) {\n                    tripwire.esi.connection = false;\n                    $(\"#esiConnectionSuccess, #esiConnectionError\").click();\n                    Notify.trigger(\"ESI Connection Failed\", \"red\", false, \"esiConnectionError\");\n                } else if (status == \"success\" && tripwire.esi.connection == false) {\n                    tripwire.esi.connection = true;\n                    $(\"#esiConnectionSuccess, #esiConnectionError\").click();\n                    Notify.trigger(\"ESI Connection Resumed\", \"green\", 5000, \"esiConnectionSuccess\");\n                }\n\n                var headers = parseHeaders(xhr.getAllResponseHeaders());\n                if (headers.warning) {\n                  console.log('ESI API Warning: ', headers.warning, this.url);\n                }\n            });\n        }\n\n        locationTimer = setTimeout(\"tripwire.esi.location()\", 5000);\n    }\n\n    this.esi.ship = function() {\n        clearTimeout(shipTimer);\n\n        for (characterID in tripwire.esi.characters) {\n            var character = tripwire.esi.characters[characterID];\n\n            // Check for expiring token\n            if (isExpired(character.tokenExpire)) {\n                tripwire.data.esi = {\"expired\": true};\n                continue;\n            }\n\n            $.ajax({\n                url: baseUrl + \"/v1/characters/\"+ characterID +\"/ship/?\" + $.param({\"token\": character.accessToken, \"user_agent\": userAgent}),\n                // headers: {\"Authorization\": \"Bearer \"+ character.accessToken, \"X-User-Agent\": userAgent},\n                type: \"GET\",\n                dataType: \"JSON\",\n                characterID: characterID\n            }).done(function(data, status, xhr) {\n                var character = tripwire.esi.characters[this.characterID];\n\n                if (character) {\n                    character.shipDate = moment(xhr.getResponseHeader(\"last-modified\"), \"ddd, DD MMMM YYYY HH:mm:ss\").format();\n\n                    if (character.shipID != data.ship_item_id) {\n                        character.shipID = data.ship_item_id || null;\n\n                        // Send to Tripwire server on next refresh call\n                        tripwire.data.tracking[this.characterID] = {\n                            characterID: character.characterID,\n                            characterName: character.characterName,\n                            systemID: character.systemID,\n                            systemName: character.systemName,\n                            stationID: character.stationID,\n                            stationName: character.stationName,\n                            shipID: character.shipID,\n                            shipName: character.shipName,\n                            shipTypeID: character.shipTypeID,\n                            shipTypeName: character.shipTypeName};\n                    }\n\n                    if (character.shipName != data.ship_name) {\n                        character.shipName = data.ship_name || null;\n                        $(\"#tracking .tracking-clone[data-characterid='\"+ this.characterID +\"']\").find(\".shipname\").html(data.ship_name || \"&nbsp;\");\n\n                        // Send to Tripwire server on next refresh call\n                        tripwire.data.tracking[this.characterID] = {\n                            characterID: character.characterID,\n                            characterName: character.characterName,\n                            systemID: character.systemID,\n                            systemName: character.systemName,\n                            stationID: character.stationID,\n                            stationName: character.stationName,\n                            shipID: character.shipID,\n                            shipName: character.shipName,\n                            shipTypeID: character.shipTypeID,\n                            shipTypeName: character.shipTypeName};\n                    }\n\n                    if (character.shipTypeID != data.ship_type_id) {\n                        character.shipTypeID = data.ship_type_id || null;\n\n                        if (data.ship_type_id) {\n                            tripwire.esi.typeLookup(data.ship_type_id, this.characterID)\n                                .always(function(data) {\n                                    var character = tripwire.esi.characters[this.reference];\n\n                                    character.shipTypeName = data.name || null;\n                                    $(\"#tracking .tracking-clone[data-characterid='\"+ this.reference +\"']\").find(\".ship\").html(data.name || \"&nbsp;\");\n\n                                    // Send to Tripwire server on next refresh call\n                                    tripwire.data.tracking[this.reference] = {\n                                        characterID: character.characterID,\n                                        characterName: character.characterName,\n                                        systemID: character.systemID,\n                                        systemName: character.systemName,\n                                        stationID: character.stationID,\n                                        stationName: character.stationName,\n                                        shipID: character.shipID,\n                                        shipName: character.shipName,\n                                        shipTypeID: character.shipTypeID,\n                                        shipTypeName: character.shipTypeName};\n                                });\n                        } else {\n                            character.shipTypeName = null;\n                            $(\"#tracking .tracking-clone[data-characterid='\"+ this.characterID +\"']\").find(\".ship\").html(\"&nbsp;\");\n\n                            // Send to Tripwire server on next refresh call\n                            tripwire.data.tracking[this.characterID] = {\n                                characterID: character.characterID,\n                                characterName: character.characterName,\n                                systemID: character.systemID,\n                                systemName: character.systemName,\n                                stationID: character.stationID,\n                                stationName: character.stationName,\n                                shipID: character.shipID,\n                                shipName: character.shipName,\n                                shipTypeID: character.shipTypeID,\n                                shipTypeName: character.shipTypeName};\n                        }\n                    }\n                }\n            }).fail(function(data) {\n                if (data.status == 403) {\n                    tripwire.refresh(\"refresh\", {\"esi\": {\"expired\": true}});\n                }\n            }).always(function(data, status, xhr) {\n                if (status != \"success\" && status != \"abort\" && tripwire.esi.connection == true) {\n                    tripwire.esi.connection = false;\n                    $(\"#esiConnectionSuccess, #esiConnectionError\").click();\n                    Notify.trigger(\"ESI Connection Failed\", \"red\", false, \"esiConnectionError\");\n                } else if (status == \"success\" && tripwire.esi.connection == false) {\n                    tripwire.esi.connection = true;\n                    $(\"#esiConnectionSuccess, #esiConnectionError\").click();\n                    Notify.trigger(\"ESI Connection Resumed\", \"green\", 5000, \"esiConnectionSuccess\");\n                }\n\n                var headers = parseHeaders(xhr.getAllResponseHeaders());\n                if (headers.warning) {\n                  console.log('ESI API Warning: ', headers.warning, this.url);\n                }\n            });\n        }\n\n        shipTimer = setTimeout(\"tripwire.esi.ship()\", 5000);\n    }\n\n    this.esi.online = function() {\n        clearTimeout(onlineTimer);\n\n        for (characterID in tripwire.esi.characters) {\n            var character = tripwire.esi.characters[characterID];\n\n            tripwire.esi.characterStatus(character.characterID, character)\n                .done(function(data) {\n                    if (data.online) {\n                        $(\"#tracking .tracking-clone[data-characterid='\"+ this.reference.characterID +\"']\").find(\".online\").removeClass(\"critical\").addClass(\"stable\");\n                    } else {\n                        $(\"#tracking .tracking-clone[data-characterid='\"+ this.reference.characterID +\"']\").find(\".online\").removeClass(\"stable\").addClass(\"critical\");\n                    }\n                }).fail(function(data) {\n                    if (data && data.status == 403) {\n                        scopeError(this.reference.characterID);\n                    }\n                    $(\"#tracking .tracking-clone[data-characterid='\"+ this.reference.characterID +\"']\").find(\".online\").removeClass(\"stable\").addClass(\"critical\");\n                });\n        }\n\n        onlineTimer = setTimeout(\"tripwire.esi.online()\", 60000);\n    }\n\n    this.esi.typeLookup = function(typeID, reference) {\n        return $.ajax({\n            url: baseUrl + \"/v3/universe/types/\"+ typeID +\"/?\" + $.param({\"user_agent\": userAgent}),\n            // headers: {\"X-User-Agent\": userAgent},\n            type: \"GET\",\n            dataType: \"JSON\",\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.stationLookup = function(stationID, reference) {\n        return $.ajax({\n            url: baseUrl + \"/v2/universe/stations/\"+ stationID +\"/?\" + $.param({\"user_agent\": userAgent}),\n            // headers: {\"X-User-Agent\": userAgent},\n            type: \"GET\",\n            dataType: \"JSON\",\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.setDestination = function(destinationID, characterID, clear_waypoints, beginning) {\n        clear_waypoints = clear_waypoints ? clear_waypoints : false;\n        beginning = beginning ? beginning : false;\n        return $.ajax({\n            url: baseUrl + \"/v2/ui/autopilot/waypoint/?\" + $.param({destination_id: destinationID, clear_other_waypoints: clear_waypoints, add_to_beginning: beginning}),\n            headers: {\"Authorization\": \"Bearer \"+ tripwire.esi.characters[characterID].accessToken, \"X-User-Agent\": userAgent},\n            type: \"POST\",\n            dataType: \"JSON\"\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.showInfo = function(targetID, characterID) {\n        return $.ajax({\n            url: baseUrl + \"/v1/ui/openwindow/information/?\" + $.param({target_id: targetID}),\n            headers: {\"Authorization\": \"Bearer \"+ tripwire.esi.characters[characterID].accessToken, \"X-User-Agent\": userAgent},\n            type: \"POST\",\n            dataType: \"JSON\"\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.characterStatus = function(characterID, reference) {\n        return $.ajax({\n            url: baseUrl + \"/v2/characters/\" + characterID + \"/online/?\" + $.param({\"token\": tripwire.esi.characters[characterID].accessToken, \"user_agent\": userAgent}),\n            // headers: {\"Authorization\": \"Bearer \"+ tripwire.esi.characters[characterID].accessToken, \"X-User-Agent\": userAgent},\n            type: \"GET\",\n            dataType: \"JSON\",\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.eveStatus = function() {\n        return $.ajax({\n            url: baseUrl + \"/v1/status/?\" + $.param({\"user_agent\": userAgent}),\n            // headers: {\"X-User-Agent\": userAgent},\n            type: \"GET\",\n            dataType: \"JSON\"\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.idLookup = function(eveIDs) {\n        return $.ajax({\n            url: baseUrl + \"/v2/universe/names/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"POST\",\n            dataType: \"JSON\",\n            contentType: \"application/json\",\n            processData: false,\n            data: JSON.stringify(eveIDs)\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.characterLookup = function(eveID, reference, async) {\n        var async = typeof(async) !== 'undefined' ? async : true;\n        return $.ajax({\n            url: baseUrl + \"/latest/characters/\" + eveID + \"/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\",\n            async: async,\n            eveID: eveID,\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.corporationLookup = function(eveID, reference, async) {\n        var async = typeof(async) !== 'undefined' ? async : true;\n        return $.ajax({\n            url: baseUrl + \"/v4/corporations/\" + eveID + \"/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\",\n            async: async,\n            eveID: eveID,\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.allianceLookup = function(eveID, reference, async) {\n        var async = typeof(async) !== 'undefined' ? async : true;\n        return $.ajax({\n            url: baseUrl + \"/v3/alliances/\" + eveID + \"/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\",\n            async: async,\n            eveID: eveID,\n            reference: reference\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.search = function(searchString, categories, strict) {\n        return $.ajax({\n            url: baseUrl + \"/v2/search/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\",\n            contentType: \"application/json\",\n            data: {\"search\": searchString, \"categories\": categories, \"strict\": strict}\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.universeJumps = function() {\n        return $.ajax({\n            url: baseUrl + \"/v1/universe/system_jumps/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\"\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    this.esi.universeKills = function() {\n        return $.ajax({\n            url: baseUrl + \"/v2/universe/system_kills/?\" + $.param({\"user_agent\": userAgent}),\n            type: \"GET\",\n            dataType: \"JSON\"\n        }).always(function(results, status, xhr) {\n          var headers = parseHeaders(xhr.getAllResponseHeaders());\n          if (headers.warning) {\n            console.log('ESI API Warning: ', headers.warning, this.url);\n          }\n        });\n    }\n\n    // Wrapper to make lookups easier\n    this.esi.fullLookup = function(eveIDs) {\n        var promise = $.Deferred();\n\n        tripwire.esi.idLookup(eveIDs)\n            .done(function(data) {\n                for (item in data) {\n                    if (data[item].category == \"character\") {\n                        tripwire.esi.characterLookup(data[item].id, data[item], false)\n                            .done(function(characterData) {\n                                $.extend(data[item], characterData);\n                                tripwire.esi.corporationLookup(characterData.corporation_id, this.reference, false)\n                                    .done(function(corporationData) {\n                                        data[item].corporation = corporationData;\n                                        if (corporationData.alliance_id) {\n                                            tripwire.esi.allianceLookup(corporationData.alliance_id, this.reference, false)\n                                                .done(function(allianceData) {\n                                                    data[item].alliance = allianceData;\n                                                });\n                                        }\n                                    });\n                            });\n                    } else if (data[item].category == \"corporation\") {\n                        tripwire.esi.corporationLookup(data[item].id, data[item], false)\n                            .done(function(corporationData) {\n                                $.extend(data[item], corporationData);\n                                if (corporationData.alliance_id) {\n                                    tripwire.esi.allianceLookup(corporationData.alliance_id, this.reference, false)\n                                        .done(function(allianceData) {\n                                            data[item].alliance = allianceData;\n                                        });\n                                }\n                            })\n                    }\n                }\n\n                promise.resolve(data);\n            });\n\n        return promise;\n    }\n\n    this.esi.parse = function(characters) {\n        for (characterID in tripwire.esi.characters) {\n            if (!(characterID in characters)) {\n                delete tripwire.esi.characters[characterID];\n                $(\"#tracking .tracking-clone[data-characterid='\"+ characterID +\"']\").remove();\n                if (options.tracking.active == characterID) {\n                    tripwire.EVE(false, true);\n                    $(\"#removeESI\").attr(\"disabled\", \"disabled\");\n                }\n            }\n        }\n\n        for (characterID in characters) {\n            if (options.tracking.active == \"new\") {\n                options.tracking.active = characterID;\n            }\n\n            if (!(characterID in tripwire.esi.characters)) {\n                var $clone = $(\"#tracking-clone\").clone();\n                $clone.attr(\"data-characterid\", characterID);\n                $clone.find(\".avatar img\").attr(\"src\", \"https://image.eveonline.com/Character/\"+ characterID +\"_32.jpg\");\n                $clone.find(\".name\").html(characters[characterID].characterName);\n                $clone.removeAttr(\"id\");\n                $clone.removeClass(\"hidden\");\n                $clone.addClass(\"tracking-clone\");\n\n                if (options.tracking.active == characterID) {\n                    $clone.addClass(\"active\");\n                    $(\"#removeESI\").removeAttr(\"disabled\");\t\t\t\t}\n\n                $(\"#tracking\").append($clone);\n                // Tooltips.attach($clone.find(\"[data-tooltip]\"));\n            }\n\n            tripwire.esi.characters[characterID] = characters[characterID];\n        }\n\n        tripwire.esi.ship();\n        tripwire.esi.location();\n        tripwire.esi.online();\n    }\n}\ntripwire.esi();\n","// Handles data from EVE in-game data\ntripwire.EVE = function(EVE, characterChange) {\n    var systemChange = this.client.EVE && this.client.EVE.systemChange || false;\n\n    if (EVE) {\n        // Automapper\n        if (!characterChange) {\n            // Did the system change or did it previously and we have yet to try an autoMapper call?\n            if ((this.client.EVE && this.client.EVE.systemID != EVE.systemID) || systemChange == true) {\n                systemChange = true;\n\n                // Check if location was updated after the last ship update\n                // if (moment(EVE.locationDate).isAfter(moment(this.client.EVE.shipDate))) {\n                    systemChange = false;\n                    tripwire.autoMapper(this.client.EVE.systemID, EVE.systemID);\n                // }\n            }\n        }\n\n        // System follower\n        if (!characterChange && options.buttons.follow && (this.client.EVE && this.client.EVE.systemID != EVE.systemID) && $(\".ui-dialog:visible\").length == 0) {\n            tripwire.systemChange(EVE.systemID);\n        }\n\n        if (!$(\"#search\").hasClass(\"active\")) {\n            $(\"#currentSpan\").show();\n        }\n\n        // Enable auto-mapper\n        $(\"#toggle-automapper\").removeClass(\"disabled\");\n\n        // Update current system\n        if (EVE.systemID) {\n            // add system to Leads To dropdown\n            if ($(\"#dialog-signature [data-autocomplete='sigSystems']\").hasClass(\"custom-combobox\")) {\n                $(\"#dialog-signature [data-autocomplete='sigSystems']\").inlinecomplete(\"removeFromSelect\");\n                $(\"#dialog-signature [data-autocomplete='sigSystems']\").inlinecomplete(\"addToSelect\", tripwire.systems[EVE.systemID].name);\n            }\n            $(\"#EVEsystem\").html(tripwire.systems[EVE.systemID].name).attr(\"href\", \".?system=\"+ tripwire.systems[EVE.systemID].name);\n        }\n    } else {\n        // Update current system\n        $(\"#EVEsystem\").html(\"\");\n        $(\"#currentSpan\").hide();\n        // Disable automapper\n        $(\"#toggle-automapper\").addClass(\"disabled\");\n        // remove system from Leads To dropdown\n        if ($(\"#dialog-signature [data-autocomplete='sigSystems']\").hasClass(\"custom-combobox\")) {\n            $(\"#dialog-signature [data-autocomplete='sigSystems']\").inlinecomplete(\"removeFromSelect\");\n        }\n    }\n\n    this.client.EVE = {\n        characterID: EVE.characterID,\n        characterName: EVE.characterName,\n        systemID: EVE.systemID,\n        systemName: EVE.systemName,\n        shipTypeID: EVE.shipTypeID,\n        shipTypeName: EVE.shipTypeName,\n        stationID: EVE.stationID,\n        stationName: EVE.stationName,\n        locationDate: EVE.locationDate,\n        shipDate: EVE.shipDate,\n        systemChange: systemChange\n    };\n}\n","tripwire.parse = function(server, mode) {\n    var data = $.extend(true, {}, server);\n\n    var updateSignatureTable = false;\n\n    if (options.chain.active == null || (options.chain.tabs[options.chain.active] && options.chain.tabs[options.chain.active].evescout != true)) {\n        if (options.masks.active != \"273.0\") {\n            for (var key in data.signatures) {\n                if (data.signatures[key].mask == \"273.0\") {\n                    delete data.signatures[key];\n                }\n            }\n        }\n    }\n\n    if (mode == 'refresh') {\n        // preserve client.EVE across refresh otherwise tracking/automapper will be confused\n        var EVE = this.client.EVE;\n        this.client = server;\n        this.client.EVE = EVE;\n\n        for (var key in data.signatures) {\n            if (data.signatures[key].systemID != viewingSystemID) {\n                continue;\n            }\n            var disabled = data.signatures[key].mask == \"273.0\" && options.masks.active != \"273.0\" ? true : false;\n\n            // Check for differences\n            if (!tripwire.signatures.list[key]) {\n\t\t\t\ttripwire.signatures.list[key] = data.signatures[key];\t// To reduce race condition chance\n                this.addSig(data.signatures[key], {animate: true}, disabled);\n                updateSignatureTable = true;\n            } else if (tripwire.signatures.list[key].modifiedTime !== data.signatures[key].modifiedTime) {\n                var edit = false;\n                for (column in data.signatures[key]) {\n                    if (data.signatures[key][column] != tripwire.signatures.list[key][column] && column != \"editing\") {\n                        edit = true;\n                    }\n                }\n\n                if (edit) {\n                    this.editSig(data.signatures[key], disabled);\n                } else {\n                    // this.sigEditing(data.signatures[key]);\n                }\n            }\n        }\n\n        // Sigs needing removal\n        for (var key in tripwire.signatures.list) {\n            if (!data.signatures[key]) {\n                this.deleteSig(key);\n            }\n        }\n    } else if (mode == 'init' || mode == 'change') {\n        this.client = server;\n\n        for (var key in data.signatures) {\n            if (data.signatures[key].systemID != viewingSystemID) {\n                continue;\n            }\n            var disabled = data.signatures[key].mask == \"273.0\" && options.masks.active != \"273.0\" ? true : false;\n\t\t\t\n\t\t\tif(!tripwire.signatures.list[key]) {\n\t\t\t\tthis.addSig(data.signatures[key], {animate: false}, disabled);\n\t\t\t\tupdateSignatureTable = true;\n\t\t\t}\n            if (data.signatures[key].editing) {\n                this.sigEditing(data.signatures[key]);\n            }\n        }\n    }\n\n    if (updateSignatureTable) {\n        $(\"#sigTable\").trigger(\"update\");\n    }\n    tripwire.signatures.list = data.signatures;\n\n    // set the sig count in the UI\n    var signatureCount = 0;\n    $.map(data.signatures, function(signature) {signature.systemID == viewingSystemID ? signatureCount++ : null;});\n    $(\"#signature-count\").html(signatureCount);\n}\n","// Handles pasting sigs from EVE\ntripwire.pasteSignatures = function() {\n    var processing = false;\n\n    var rowParse = function(row) {\n        var scanner = {};\n        var columns = row.split(\"\t\"); // Split by tab\n        var validScanGroups = [\"Cosmic Signature\", \"Cosmic Anomaly\", \"Kosmische Anomalie\", \"Kosmische Signatur\",\n                                \"Скрытый сигнал\", \"Космическая аномалия\", \"코즈믹 시그니처\", \"코즈믹 어노말리\"];\n        var validTypes = {\"Gas Site\": \"Gas\", \"Data Site\": \"Data\", \"Relic Site\": \"Relic\", \"Ore Site\": \"Ore\", \"Combat Site\": \"Combat\", \"Wormhole\": \"Wormhole\",\n                            \"Gasgebiet\": \"Gas\", \"Datengebiet\": \"Data\", \"Reliktgebiet\": \"Relic\", \"Mineraliengebiet\": \"Ore\", \"Kampfgebiet\": \"Combat\", \"Wurmloch\": \"Wormhole\",\n                            \"Газовый район\": \"Gas\", \"Информационный район\": \"Data\", \"Археологический район\": \"Relic\", \"Астероидный район\": \"Ore\", \"Боевой район\": \"Combat\", \"Червоточина\": \"Wormhole\", \n                            \"가스 사이트\": \"Gas\", \"데이터 사이트\": \"Data\", \"유물 사이트\": \"Relic\", \"채광 사이트\": \"Ore\", \"전투 사이트\": \"Combat\", \"웜홀\": \"Wormhole\"};\n\n        for (var x in columns) {\n            if (columns[x].match(/^([A-Z]{3}[-]\\d{3})$/)) {\n                scanner.id = columns[x].split(\"-\");\n                continue;\n            }\n\n            if (columns[x].match(/(\\d([.|,]\\d)?[ ]?(%))/) || columns[x].match(/(\\d[.|,]?\\d+\\s(AU|AE|km|m|а.е.|км|м))/i)) { // Exclude scan % || AU\n                continue;\n            }\n\n            if ($.inArray(columns[x], validScanGroups) != -1) {\n                scanner.scanGroup = columns[x];\n                continue;\n            }\n\n            if (validTypes[columns[x]]) {\n                scanner.type = validTypes[columns[x]];\n                continue;\n            }\n\n            if (columns[x] != \"\") {\n                scanner.name = columns[x].trim();\n            }\n        }\n\n        if (!scanner.id || scanner.id.length !== 2) {\n            return false;\n        }\n\n        return scanner;\n    }\n\n    this.pasteSignatures.parsePaste = function(paste) {\n        var paste = paste.split(\"\\n\");\n        var payload = {\"signatures\": {\"add\": [], \"update\": []}, \"systemID\": viewingSystemID};\n        var undo = [];\n        processing = true;\n\n        for (var i in paste) {\n            var scanner = rowParse(paste[i]);\n\n            if (scanner.id) {\n                var signature = $.map(tripwire.client.signatures, function(signature) { if (signature.signatureID && signature.signatureID.toUpperCase() == scanner.id[0] + scanner.id[1]) return signature; })[0];\n                if (signature) {\n                    // Update signature (only non-wormholes can be updated to a wormhole)\n                    if (scanner.type == \"Wormhole\" && signature.type != \"wormhole\") {\n                        var wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0] || {};\n                        var otherSignature = wormhole.id ? (signature.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID]) : {};\n                        payload.signatures.update.push({\n                            \"wormhole\": {\n                                \"id\": wormhole.id || null,\n                                \"type\": wormhole.type || null,\n                                \"life\": wormhole.life || \"stable\",\n                                \"mass\": wormhole.mass || \"stable\"\n                            },\n                            \"signatures\": [\n                                {\n                                    \"id\": signature.id,\n                                    \"signatureID\": signature.signatureID,\n                                    \"systemID\": viewingSystemID,\n                                    \"type\": \"wormhole\",\n                                    \"name\": signature.name\n                                },\n                                {\n                                    \"id\": otherSignature.id || null,\n                                    \"signatureID\": otherSignature.signatureID || null,\n                                    \"systemID\": otherSignature.systemID || null,\n                                    \"type\": \"wormhole\",\n                                    \"name\": otherSignature.name\n                                }\n                            ]\n                        });\n\n                        if (tripwire.client.wormholes[wormhole.id]) {\n\t\t\t\t\t\t\tundo.push({\"wormhole\": tripwire.client.wormholes[wormhole.id], \"signatures\": [tripwire.client.signatures[signature.id], tripwire.client.signatures[otherSignature.id]]});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// used to be just a regular signature\n\t\t\t\t\t\t\tundo.push(tripwire.client.signatures[signature.id]);\n\t\t\t\t\t\t}\n                    // Make sure we are only updating when we have new info (we never turn wormholes into regular signatures)\n                    } else if (signature.type != \"wormhole\" && ((scanner.type && scanner.type.toLowerCase() != signature.type) || (scanner.name && scanner.name != signature.name))) {\n                        payload.signatures.update.push({\n                            \"id\": signature.id,\n                            \"systemID\": viewingSystemID,\n                            \"type\": scanner.type || 'unknown',\n                            \"name\": scanner.name,\n                            \"lifeLength\": options.signatures.pasteLife * 60 * 60\n                        });\n                        undo.push(tripwire.client.signatures[signature.id]);\n                    }\n                } else {\n                    // Add signature\n                    if (scanner.type == \"Wormhole\") {\n                        payload.signatures.add.push({\n                            \"wormhole\": {\n                                \"type\": null,\n                                \"parent\": \"initial\",\n                                \"life\": \"stable\",\n                                \"mass\": \"stable\"\n                            },\n                            \"signatures\": [\n                                {\n                                    \"signatureID\": scanner.id[0] + scanner.id[1],\n                                    \"systemID\": viewingSystemID,\n                                    \"type\": \"wormhole\",\n                                    \"lifeLength\": options.signatures.pasteLife * 60 * 60\n                                },\n                                {\n                                    \"signatureID\": null,\n                                    \"systemID\": null,\n                                    \"type\": \"wormhole\",\n                                    \"lifeLength\": options.signatures.pasteLife * 60 * 60\n                                }\n                            ]\n                        });\n                    } else {\n                        payload.signatures.add.push({\n                            \"signatureID\": scanner.id[0] + scanner.id[1],\n                            \"systemID\": viewingSystemID,\n                            \"type\": scanner.type || 'unknown',\n                            \"name\": scanner.name,\n                            \"lifeLength\": options.signatures.pasteLife * 60 * 60\n                        });\n                    }\n                }\n            }\n        }\n\n        if (payload.signatures.add.length || payload.signatures.update.length) {\n            var success = function(data) {\n                if (data.resultSet && data.resultSet[0].result == true) {\n                    $(\"#undo\").removeClass(\"disabled\");\n\n                    if (data.results) {\n                        if (viewingSystemID in tripwire.signatures.undo) {\n                            tripwire.signatures.undo[viewingSystemID].push({action: \"add\", signatures: data.results});\n                        } else {\n                            tripwire.signatures.undo[viewingSystemID] = [{action: \"add\", signatures: data.results}];\n                        }\n                    }\n\n                    if (undo.length) {\n                        if (viewingSystemID in tripwire.signatures.undo) {\n                            tripwire.signatures.undo[viewingSystemID].push({action: \"update\", signatures: undo});\n\t\t\t\t\t\t} else {\n                            tripwire.signatures.undo[viewingSystemID] = [{action: \"update\", signatures: undo}];\n\t\t\t\t\t\t}\n                    }\n\n                    sessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n                }\n            }\n\n            var always = function(data) {\n                processing = false;\n            }\n\n            tripwire.refresh('refresh', payload, success, always);\n        } else {\n            processing = false;\n        }\n    }\n\n    this.pasteSignatures.init = function() {\n        $(document).keydown(function(e)\t{\n            if ((e.metaKey || e.ctrlKey) && (e.keyCode == 86 || e.keyCode == 91) && !processing) {\n                //Abort - user is in input or textarea\n                if ($(document.activeElement).is(\"textarea, input\")) return;\n\n                $(\"#clipboard\").focus();\n            }\n        });\n\n        $(\"body\").on(\"click\", \"#fullPaste\", function(e) {\n            e.preventDefault();\n\n            var paste = $(this).data(\"paste\").split(\"\\n\");\n            var pasteIDs = [];\n            var removes = [];\n            var undo = [];\n\n            for (var i in paste) {\n                if (scan = rowParse(paste[i])) {\n                    pasteIDs.push((scan.id[0] + scan.id[1]).toLowerCase());\n                }\n            }\n\n            for (var i in tripwire.client.signatures) {\n                var signature = tripwire.client.signatures[i];\n\n                if (signature.systemID == viewingSystemID && signature.signatureID && $.inArray(signature.signatureID.toLowerCase(), pasteIDs) === -1 && signature.signatureID !== \"???\") {\n                    if (signature.type == \"wormhole\") {\n                        var wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0] || {};\n                        var otherSignature = wormhole.id ? (signature.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID]) : {};\n                        if (wormhole.type !== \"GATE\") {\n                            removes.push(wormhole);\n                            undo.push({\"wormhole\": wormhole, \"signatures\": [signature, otherSignature]});\n                        }\n                    } else {\n                        removes.push(signature.id);\n                        undo.push(signature);\n                    }\n                }\n            }\n\n            if (removes.length > 0) {\n                var payload = {\"signatures\": {\"remove\": removes}};\n\n                var success = function(data) {\n                    if (data.resultSet && data.resultSet[0].result == true) {\n                        $(\"#undo\").removeClass(\"disabled\");\n                        if (viewingSystemID in tripwire.signatures.undo) {\n                            tripwire.signatures.undo[viewingSystemID].push({action: \"remove\", signatures: undo});\n                        } else {\n                            tripwire.signatures.undo[viewingSystemID] = [{action: \"remove\", signatures: undo}];\n                        }\n\n                        sessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n                    }\n                }\n\n                tripwire.refresh('refresh', payload, success);\n            }\n        });\n\n        $(\"#clipboard\").on(\"paste\", function(e) {\n            e.preventDefault();\n            var paste = window.clipboardData ? window.clipboardData.getData(\"Text\") : (e.originalEvent || e).clipboardData.getData('text/plain');\n\n            $(\"#clipboard\").blur();\n            Notify.trigger(\"Paste detected<br/>(<a id='fullPaste' href=''>Click to delete missing sigs</a>)\");\n            $(\"#fullPaste\").data(\"paste\", paste);\n            tripwire.pasteSignatures.parsePaste(paste);\n        });\n    }\n\n    this.pasteSignatures.init();\n}\ntripwire.pasteSignatures();\n","tripwire.redo = function() {\n    if (tripwire.signatures.redo[viewingSystemID].length > 0) {\n        $(\"#redo\").addClass(\"disabled\");\n        var lastIndex = tripwire.signatures.redo[viewingSystemID].length -1;\n        var data = {\"systemID\": viewingSystemID, \"signatures\": {\"add\": [], \"remove\": [], \"update\": []}};\n\n        var redoItem = tripwire.signatures.redo[viewingSystemID][lastIndex];\n        var undo = $.map(redoItem.signatures, function(signature) {\n            // grab the current signature so we can restore the way it is now\n            if (signature.wormhole && tripwire.client.wormholes[signature.wormhole.id]) {\n                // it was a wormhole and still is\n                return {\"wormhole\": tripwire.client.wormholes[signature.wormhole.id], \"signatures\": [tripwire.client.signatures[signature.signatures[0].id], tripwire.client.signatures[signature.signatures[1].id]]};\n            } else if (tripwire.client.signatures[signature.id] && tripwire.client.signatures[signature.id].type == \"wormhole\") {\n                // it was a regular signature but is now a wormhole\n                var wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n                return {\"wormhole\": wormhole, \"signatures\": [tripwire.client.signatures[wormhole.initialID], tripwire.client.signatures[wormhole.secondaryID]]};\n            } else if (signature.wormhole && tripwire.client.signatures[signature.signatures[0].id]) {\n                // it was a wormhole but is now a regular signature\n                return tripwire.client.signatures[signature.signatures[0].id];\n            } else {\n                // it was a regular signature and still is\n                return tripwire.client.signatures[signature.id];\n            }\n        });\n\n        switch(redoItem.action) {\n            case \"add\":\n                data.signatures.add = data.signatures.add.concat(redoItem.signatures);\n                break;\n            case \"remove\":\n                data.signatures.remove = data.signatures.remove.concat($.map(redoItem.signatures, function(signature) { return signature.wormhole ? signature.wormhole : signature.id }));\n                break;\n            case \"update\":\n                data.signatures.update = data.signatures.update.concat(redoItem.signatures);\n                break;\n        }\n\n        var success = function(data) {\n            if (data.resultSet && data.resultSet[0].result == true) {\n                tripwire.signatures.redo[viewingSystemID].pop();\n\n                $(\"#undo\").removeClass(\"disabled\");\n                if (viewingSystemID in tripwire.signatures.undo) {\n                    if (redoItem.action == \"add\") {\n                        // we are adding new signatures we removed so we need the new ids\n                        tripwire.signatures.undo[viewingSystemID].push({\"action\": redoItem.action, \"signatures\": data.results});\n                    } else if (redoItem.action == \"update\") {\n                        tripwire.signatures.undo[viewingSystemID].push({\"action\": redoItem.action, \"signatures\": undo});\n                    } else {\n                        tripwire.signatures.undo[viewingSystemID].push({action: redoItem.action, signatures: redoItem.signatures});\n                    }\n                } else {\n                    if (redoItem.action == \"add\") {\n                        tripwire.signatures.undo[viewingSystemID] = [{\"action\": redoItem.action, \"signatures\": data.results}];\n                    } else if (redoItem.action == \"update\") {\n                        tripwire.signatures.undo[viewingSystemID] = [{\"action\": redoItem.action, \"signatures\": undo}];\n                    } else {\n                        tripwire.signatures.undo[viewingSystemID] = [{action: redoItem.action, signatures: redoItem.signatures}];\n                    }\n                }\n\n                sessionStorage.setItem(\"tripwire_redo\", JSON.stringify(tripwire.signatures.redo));\n                sessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n            }\n        }\n\n        var always = function(data) {\n            if (tripwire.signatures.redo[viewingSystemID].length > 0) {\n                $(\"#redo\").removeClass(\"disabled\");\n            }\n        }\n\n        tripwire.refresh('refresh', data, success, always);\n    }\n}\n","// Handles pulling TQ status & player count\ntripwire.serverStatus = function() {\n    this.data;\n    this.timer;\n\n    clearTimeout(tripwire.serverStatus.timer);\n\n    tripwire.esi.eveStatus()\n        .always(function(data) {\n            if (data && data.players && data.players > 0) {\n                if (!tripwire.serverStatus.data || tripwire.serverStatus.data.players !== data.players) {\n                    $('#serverStatus').html(\"<span class='\"+(data.players > 0 ? 'stable' : 'critical')+\"'>TQ</span>: \"+numFormat(data.players));\n\n                    if (tripwire.serverStatus.data) {\n                        $(\"#serverStatus\").effect('pulsate', {times: 5});\n                    }\n                }\n\n                tripwire.serverStatus.data = data;\n            } else {\n                $('#serverStatus').html(\"<span class='critical'>TQ</span>\");\n            }\n\n            tripwire.serverStatus.timer = setTimeout(\"tripwire.serverStatus();\", 15000);\n        });\n}\ntripwire.serverStatus();\n","tripwire.sync = function(mode, data, successCallback, alwaysCallback) {\n    var data = typeof(data) === \"object\" ? $.extend(true, {}, data) : {};\n\n    // Grab any pending changes\n    $.extend(true, data, tripwire.data);\n\n    // Remove old timer to prevent multiple\n    if (this.timer) clearTimeout(this.timer);\n    if (this.xhr) {\n\t\tconsole.log('Awaiting existing XHR ' + this.xhr.data.mode + ': ', this.xhr);\n\t\ttripwire.data = data;\n\t\tthis.timer = setTimeout(function() { tripwire.sync(mode, data, successCallback, alwaysCallback); }, 50);\n\t\treturn false;\n\t}\n\n    if (mode == 'refresh' || mode == 'change') {\n        data.signatureCount = tripwire.serverSignatureCount;\n        data.signatureTime = Object.maxTime(this.client.signatures, \"modifiedTime\");\n\n        data.flareCount = chain.data.flares ? chain.data.flares.flares.length : 0;\n        data.flareTime = chain.data.flares ? chain.data.flares.last_modified : 0;\n\n        data.commentCount = Object.size(this.comments.data);\n        data.commentTime = Object.maxTime(this.comments.data, \"modified\");\n\n        data.activity = this.activity;\n    } else {\n        // Expand Tripwire with JSON data from EVE Data Dump and other static data\n        $.extend(this, appData);\n\n        this.aSystems = $.map(this.systems, function(system) { return system.name; });\n        this.aSigSystems = [\"Null-Sec\", \"Low-Sec\", \"High-Sec\", \"Class-1\", \"Class-2\", \"Class-3\", \"Class-4\", \"Class-5\", \"Class-6\", \"Class-13\", \"Triglavian\"];\n        $.merge(this.aSigSystems, this.aSystems.slice());\n\n        $(\".systemsAutocomplete\").inlinecomplete({source: this.aSystems, maxSize: 10, delay: 0});\n    }\n\n    data.mode = mode != \"init\" ? \"refresh\" : \"init\";\n    data.systemID = viewingSystemID;\n    data.systemName = viewingSystem;\n    data.instance = tripwire.instance;\n    data.version = tripwire.version;\n\n    this.xhr = $.ajax({\n        url: \"refresh.php\",\n        data: data,\n        type: \"POST\",\n        dataType: \"JSON\",\n        cache: false\n    }).done(function(data) {\n        if (data) {\n            tripwire.server = data;\n            if(data.signatures) { // Save this count before we delete entries\n                tripwire.serverSignatureCount = Object.size(data.signatures);\n            }\n\n            if (data.wormholes) {\n                // Purge bad wormhole signatures\n                var wormholeInitialIDs = {};\n                var wormholeSecondaryIDs = {};\n                Object.values(data.wormholes).forEach(function (wh) {\n                    wormholeInitialIDs[parseInt(wh.initialID)] = wh.id;\n                    wormholeSecondaryIDs[parseInt(wh.secondaryID)] = wh.id;\n                })\n                for (var i in data.signatures) {\n                  if (data.signatures[i].type == \"wormhole\") {\n                    var id = data.signatures[i].id;\n                    if (wormholeInitialIDs[id] === undefined && wormholeSecondaryIDs[id] === undefined) {\n                      delete data.signatures[i];\n                    }\n                  }\n                }\n            }\n\n            if (data.esi) {\n                tripwire.esi.parse(data.esi);\n            }\n\n            if (data.sync) {\n                tripwire.serverTime.time = new Date(data.sync);\n            }\n\n            if (data.signatures) {\n                tripwire.parse(data, mode);\n            }\n\n            if (data.comments) {\n                tripwire.comments.parse(data.comments);\n            }\n\n            if (data.wormholes || data.occupied || data.flares) {\n                tripwire.chainMap.parse({\"map\": data.wormholes || null, \"occupied\": data.occupied || null, \"flares\": data.flares || null});\n            } else if (chain.data.occupied && chain.data.occupied.length && !data.occupied) {\n                // send update to remove all occupied system indicators\n                tripwire.chainMap.parse({\"occupied\": []});\n            }\n\n            tripwire.active(data.activity);\n\n            if (data.notify && !$(\"#serverNotification\")[0]) Notify.trigger(data.notify, \"yellow\", false, \"serverNotification\");\n\t\t\t\n\t\t\t$('[data-command=ping]')[data.discord_integration ? 'show' : 'hide']();\n        }\n\n        tripwire.data = {tracking: {}, esi: {}};\n        successCallback ? successCallback(data) : null;\n    }).always(function(data, status) {\n        tripwire.timer = setTimeout(\"tripwire.refresh();\", tripwire.refreshRate);\n\n        alwaysCallback ? alwaysCallback(data) : null;\n\n        if (data.status == 403) {\n            window.location.href = \".\";\n        } else if (status != \"success\" && status != \"abort\" && tripwire.connected == true) {\n            tripwire.connected = false;\n            $(\"#ConnectionSuccess\").click();\n            Notify.trigger(\"Error syncing with server\", \"red\", false, \"connectionError\");\n        } else if (status == \"success\" && tripwire.connected == false) {\n            tripwire.connected = true;\n            $(\"#connectionError\").click();\n            Notify.trigger(\"Successfully reconnected with server\", \"green\", 5000, \"connectionSuccess\");\n        }\n\t\t\n\t\ttripwire.xhr = null;\n    });\n\tthis.xhr.data = data;\n\t\n    return true;\n}\ntripwire.sync(\"init\");\n","// Change the currently viewed system\ntripwire.systemChange = function(systemID, mode) {\n\tconst system = systemAnalysis.analyse(systemID);\n\t\t\n    if (mode != \"init\") {\n        $(\"#infoSecurity\").removeClass();\n        $(\"#infoStatics\").empty();\n\n        viewingSystem = system.name;\n        viewingSystemID = systemID;\n\n        // Reset activity\n        activity.refresh(true);\n\n        // Reset signatures\n        $(\"#sigTable span[data-age]\").countdown(\"destroy\");\n        $(\"#sigTable tbody\").empty();\n        $(\"#signature-count\").html(0);\n        tripwire.signatures.list = {};\n        tripwire.client.signatures = null;\n\n        // Reset chain map\n        chain.redraw();\n\n        // Reset comments\n        $(\"#notesWidget .content .comment:visible\").remove();\n        tripwire.comments.data = null;\n\n        // Change the URL & history\n        history.replaceState(null, null, \"?system=\"+viewingSystem);\n\n        tripwire.refresh(\"change\");\n    }\n\n    // Change the title\n    document.title = system.name + \" - \" + app_name;\n\n    $(\"#infoSystem\").text(system.name);\n\n    // Current system favorite\n    $.inArray(parseInt(viewingSystemID), options.favorites) != -1 ? $(\"#system-favorite\").attr(\"data-icon\", \"star\").addClass(\"active\") : $(\"#system-favorite\").attr(\"data-icon\", \"star-empty\").removeClass(\"active\");\n\t\n    if (system.class) {\n        // Security\n        $(\"#infoSecurity\").html(\"<span class='wh pointer'>Class \" + system.class + \"</span>\");\n\n        // Effects\n        if (system.effect) {\n            var tooltip = \"<table cellpadding=\\\"0\\\" cellspacing=\\\"1\\\">\";\n            for (var x in tripwire.effects[system.effect]) {\n                var effect = tripwire.effects[system.effect][x].name;\n                var base = tripwire.effects[system.effect][x].base;\n                var bad = tripwire.effects[system.effect][x].bad;\n                var whClass = system.class > 6 ? 6 : system.class;\n                var modifier = 0;\n\n                switch (Math.abs(base)) {\n                    case 15:\n                        modifier = base > 0 ? 7 : -7;\n                        break;\n                    case 30:\n                        modifier = base > 0 ? 14 : -14;\n                        break;\n                    case 60:\n                        modifier = base > 0 ? 28 : -28;\n                        break;\n                }\n\n                tooltip += \"<tr><td>\" + effect + \"</td><td style=\\\"padding-left: 25px; text-align: right;\\\" class=\\\"\" + (bad ? \"critical\" : \"stable\") + \"\\\">\";\n                tooltip += base + (modifier * (whClass -1)) + \"%</td></tr>\";\n            }\n            tooltip += \"</table>\";\n            $(\"#infoSecurity\").append(\"&nbsp;<span class='pointer' data-tooltip='\" + tooltip + \"'>\" + system.effect + \"</span>\");\n        }\n\n        // Statics\n        for (var x in system.statics) {\n            var type = system.statics[x];\n            var wormhole = tripwire.wormholes[type];\n            var color = \"wh\";\n\n            switch (wormhole.leadsTo) {\n                case \"High-Sec\":\n                    color = \"hisec\";\n                    break;\n                case \"Low-Sec\":\n                    color = \"lowsec\";\n                    break;\n                case \"Null-Sec\":\n                    color = \"nullsec\";\n                    break;\n            }\n\n            $(\"#infoStatics\").append(\"<div><span class='\"+ color +\"'>&#9679;</span> <b>\"+ wormhole.leadsTo +\"</b> via <span class='\"+ color +\"'>\"+ type +\"</span></div>\");\n        }\n\n        // Faction\n        $(\"#infoFaction\").html(\"&nbsp;\");\n    } else {\n        // Security\n\t\tconst securityText = {HS: 'High-Sec', LS: 'Low-Sec', NS: 'Null-Sec', 'Trig': 'Triglavian' }[system.systemTypeName];\n       $(\"#infoSecurity\").addClass(system.systemTypeClass).html(securityText + \" \" + system.baseSecurity.toFixed(2) + system.systemTypeModifiers.join(' '));\n\n        // Faction\n        $(\"#infoFaction\").html(system.factionID ? tripwire.factions[system.factionID].name : \"&nbsp;\");\n\t\t\n\t\t// Route to favourites\n\t\tfor (var fi in options.favorites) {\n\t\t\tconst f = options.favorites[fi];\n\t\t\tconst path = guidance.findShortestPath(tripwire.map.shortest, f - 30000000, viewingSystemID - 30000000);\n\t\t\tif(path) { $('#infoStatics').append('<p><b><a href=\".?system=' + tripwire.systems[f].name + '\">' +tripwire.systems[f].name + '</a></b>: ' + chain.renderPath(path) + '</p>'); }\n\t\t}\n    }\n\t\n\tTooltips.attach($(\"#infoStatics [data-tooltip]\"));\n    Tooltips.attach($(\"#infoSecurity [data-tooltip]\"));\n\n    // Region\n    $(\"#infoRegion\").text(tripwire.regions[system.regionID].name);\n\n    // Info Links\n    $(\"#infoWidget .infoLink\").each(function() {\n        this.href = $(this).data(\"href\").replace(/\\$systemName/gi, system.name).replace(/\\$systemID/gi, systemID);\n    });\n\n    // Reset undo/redo\n    tripwire.signatures.undo[systemID] && tripwire.signatures.undo[systemID].length > 0 ? $(\"#undo\").removeClass(\"disabled\") : $(\"#undo\").addClass(\"disabled\");\n    tripwire.signatures.redo[systemID] && tripwire.signatures.redo[systemID].length > 0 ? $(\"#redo\").removeClass(\"disabled\") : $(\"#redo\").addClass(\"disabled\");\n\n    // Reset delete signature icon\n    $(\"#sigTable tr.selected\").length == 0 ? $(\"#signaturesWidget #delete-signature\").addClass(\"disabled\") : $(\"#signaturesWidget #delete-signature\").removeClass(\"disabled\");\n}\ntripwire.systemChange(viewingSystemID, \"init\");\n","var tutorial;\n\n// infoWidget\n$(\"#infoWidget .tutorial\").click(function() {\n    tutorial = introJs().setOptions({\n        showStepNumbers: false,\n        steps: [\n            {\n                element: document.querySelector(\"#infoWidget\"),\n                intro: \"<h4>System information widget</h4><br/><p>Displays information on the currently <b>selected</b> Tripwire system.</p>\"\n            },\n            {\n                element: document.querySelector(\"#infoGeneral\"),\n                intro: \"<p>This section includes:<br/>System Name<br/>Security Rating<br/>Region<br/>Owning Faction Name</p><br/><p>If the selected system is a wormhole with a system effect, that will also be shown - hover over it to view the effect breakdown.</p>\"\n            },\n            {\n                element: document.querySelector(\"#activityGraph\"),\n                intro: \"<p>This is the graph containing historical ship jump and kill information from the EVE API.</p><br/><p>This data is only available for K-Space systems and not wormhole systems.</p><br/><p>The EVE API updates this data each hour, so this graph will update itself at the top of every hour.</p>\"\n            },\n            {\n                element: $(\"#activityGraph svg > g > g:nth-child(5)\")[0],\n                intro: \"<p>Each category can be toggled by clicking these keys to drill down the graph into finer detail.</p>\"\n            },\n            {\n                element: document.querySelector(\"#activityGraphControls\"),\n                intro: \"<p>Select different lengths of historical data to adjust the graph to display more or less information.</p>\"\n            },\n            {\n                element: document.querySelector(\"#infoStatics\"),\n                intro: \"<p>If a wormhole system is selected, the publicaly known static wormholes will appear here.</p>\"\n            },\n            {\n                element: document.querySelector(\"#infoLinks\"),\n                intro: \"<p>These are some quick links to various sites for this specific system.</p>\"\n            },\n            {\n                element: document.querySelector(\"#system-favorite\"),\n                intro: \"<p>This toggles wether this is a 'favorite' system, orange is active.</p><br/><p>'Favorite' systems can be rendered in the chain map to be able to see how far away trade hub systems are from your wormhole chain K-Space exits.</p>\"\n            }\n        ]\n    }).start();\n});\n\n// signaturesWidget\n$(\"#signaturesWidget .tutorial\").click(function() {\n    tutorial = introJs().setOptions({\n        showStepNumbers: false,\n        steps: [\n            {\n                element: document.querySelector(\"#signaturesWidget\"),\n                intro: \"<h4>System signatures widget</h4><br/><p>Displays all signatures and wormholes in the currently <b>selected</b> Tripwire system.</p>\"\n            },\n            {\n                element: document.querySelector(\"#add-signature\"),\n                intro: \"<p>Add new signatures and wormholes manually by clicking the + icon.</p><br/><p>Copy & Paste EVE scanner results anywhere once Tripwire has focus to add or update signatures, repeated pastes will only update with new information.</p>\"\n            },\n            {\n                element: document.querySelector(\"#delete-signature\"),\n                intro: \"<p>Click here or use the keyboard shortcut <b>DELETE</b> to delete <b>selected</b> signatures from this system.</p><br/><p>Click on a row to select it, click multiple rows to delete multiple signatures at once, click a selected row again to unselect it.</p>\"\n            },\n            {\n                element: document.querySelector(\"#signature-count\"),\n                intro: \"<p>This shows the current count of signatures, including wormholes, in the selected system.</p>\"\n            },\n            {\n                element: document.querySelector(\"#undo\"),\n                intro: \"<p>Click here or use the keyboard shortcut <b>CTRL-Z</b> to undo the last changes you made in this sytem (this includes clipboard pasted changes).</p><br/><p>You can undo multiple times as history is kept in the browser.</p>\"\n            },\n            {\n                element: document.querySelector(\"#redo\"),\n                intro: \"<p>Click here or use the keyboard shortcut <b>CTRL-Y</b> to redo the last changes you made in this system (this includes clipboard pasted changes).</p><br/><p>You can redo multiple times as history is kept in the browser.</p>\"\n            },\n            {\n                element: document.querySelector(\"#toggle-automapper\"),\n                intro: \"<p>Click here to toggle the Auto-mapper feature on (orange) or off.</p><br/><p>This feature only works when an in-game character is being actively tracked, otherwise this icon appears disabled.</p><br/><p>The automapper will watch for a change in your in-game system not via a star gate and try to automatically add or update wormholes.</p><br/><p>First it tries to seach for wormholes already added but missing a leads to system, this includes via wormhole type (B274) or with a leads to of 'High-Sec' for example.</p><br/><p>Next it searches for wormholes without any type or leads to at all.</p><br/><p>Finally if there are no wormholes or they all have a leads to system already, it will add a new wormhole.</p><br/><p>If at any time if finds multiple wormholes it can update, a dialog window will appear asking which wormhole you want to update.</p>\"\n            },\n            {\n                element: document.querySelector(\"#sigTable\"),\n                intro: \"<p>Each column can be sorted by clicking the column label, sort by multiple columns by holding the shift key.</p><br/><p>Right-click a column to change the text-alignment.</p>\"\n            }\n        ]\n    }).start();\n});\n\n// notesWidget\n$(\"#notesWidget .tutorial\").click(function(e) {\n    e.preventDefault();\n\n    tutorial = introJs().setOptions({\n        showStepNumbers: false,\n        exitOnEsc: false,\n        exitOnOverlayClick: false,\n        skipLabel: \"Abort\",\n        steps: [\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<h4>System notes widget</h4><br/><p>Displays comments based on the currently <b>selected</b> Tripwire system.</p><br/><p>The rest of this tutorial will guide you through actually adding a comment, but don't worry we will switch you to your private Tripwire mask so we don't disturb anyone else.</p><br/><p>When you finish or leave this tutorial we will switch you back to your previous Tripwire mask.</p>\"\n            },\n            {\n                element: document.querySelector(\"#add-comment\"),\n                intro: \"<p>Now click the + icon to begin adding a new comment in this system (\" + viewingSystem + \").</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>Type some basic text now and click save.</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>This is our newly created comment. Hover over the comment with your mouse to see additional information and controls.</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>You can click the 'pin' or 'sticky' button to toggle showing this comment for every system, not just this system.</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>Use the <b>Edit</b> to modify a comment and <b>Delete</b> to remove a comment.</p><br/><p>You can also quickly edit any comment by simply doubling clicking anywhere on it.</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>Click on the <b>Edit</b> now on our comment.</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>The toolbar at the top allows you to customize your notes.</p><br/><p>You can also click on the <b>Maximize/Minimize</b> button (the far right toolbar icon) to edit this comment in full screen mode.</p><br/><p>In full screen mode you will see 1 new button added to the toolbar to view the source code of the comment where you can write HTML, CSS, and even Javascript in your notes!</p>\"\n            },\n            {\n                element: document.querySelector(\"#notesWidget\"),\n                intro: \"<p>This concludes the tutorial, we will now switch you back to your previous Tripwire mask and delete the comment we created.</p>\"\n            }\n        ]\n    }).start();\n\n    tutorial.onchange(function(element) {\n        switch(tutorial._currentStep) {\n            case 1:\n                $(\".introjs-prevbutton, .introjs-nextbutton\").hide();\n\n                console.log(\"switch mask to private\");\n                tutorial.previousMask = options.masks.active;\n                options.masks.active = options.character.id + \".1\";\n                options.save();\n\n                tutorial.stepFunc = function() {\n                    setTimeout(function() {\n                        tutorial._options.steps[2].element = $(\"#notesWidget\").find(\".comment:has(.cke_toolbar)\")[0];\n                        tutorial.setOption(\"steps\", tutorial._options.steps);\n\n                        tutorial.exiting = false;\n                        tutorial.exit().start().goToStep(3);\n                        tutorial.exiting = true;\n                    }, 200);\n                }\n\n                $(\"#notesWidget #add-comment\").on(\"click\", tutorial.stepFunc);\n                break;\n            case 2:\n                $(\".introjs-prevbutton, .introjs-nextbutton\").hide();\n                $(\"#notesWidget #add-comment\").off(\"click\", tutorial.stepFunc);\n\n                tutorial.stepFunc = function() {\n                    tutorial.comment = $(this).closest(\".comment\");\n                    setTimeout(function() {\n                        tutorial._options.steps[3].element = tutorial.comment[0];\n                        tutorial._options.steps[4].element = tutorial.comment.find(\".commentSticky\")[0];\n                        tutorial._options.steps[5].element = tutorial.comment.find(\".commentControls\")[0];\n                        tutorial._options.steps[6].element = tutorial.comment.find(\".commentControls\")[0];\n                        tutorial.setOption(\"steps\", tutorial._options.steps);\n\n                        tutorial.exiting = false;\n                        tutorial.exit().start().goToStep(4);\n                        tutorial.exiting = true;\n                    }, 200);\n                }\n\n                $(\"#notesWidget\").on(\"click\", \".commentSave\", tutorial.stepFunc);\n                break;\n            case 6:\n                $(\".introjs-prevbutton, .introjs-nextbutton\").hide();\n                $(\"#notesWidget\").off(\"click\", \".commentSave\", tutorial.stepFunc);\n\n                tutorial.stepFunc = function() {\n                    setTimeout(function() {\n                        tutorial._options.steps[7].element = $(\"#notesWidget\").find(\".comment:has(.cke_toolbar)\")[0];\n                        tutorial._options.steps[8].element = $(\"#notesWidget\").find(\".comment:has(.cke_toolbar)\")[0];\n                        tutorial.setOption(\"steps\", tutorial._options.steps);\n\n                        tutorial.exiting = false;\n                        tutorial.exit().start().goToStep(8);\n                        tutorial.exiting = true;\n                    }, 200);\n                }\n\n                $(\"#notesWidget\").on(\"click\", \".commentEdit\", tutorial.stepFunc);\n                break;\n        }\n    });\n\n    tutorial.onexit(function() {\n        if (tutorial.exiting) {\n            $(\".commentCancel:visible\").click();\n            // delete the tutorial comment that was created\n            if (tutorial.comment) {\n                var data = {\"mode\": \"delete\", \"commentID\": tutorial.comment.data(\"id\")};\n\n                $.ajax({\n                    url: \"comments.php\",\n                    type: \"POST\",\n                    data: data,\n                    dataType: \"JSON\"\n                }).done(function(data) {\n                    if (data && data.result == true) {\n                        tutorial.comment.remove();\n                    }\n                });\n            }\n\n            if (tutorial.previousMask) {\n                setTimeout(function() {\n                    console.log(\"change mask back, delete comment\", tutorial.previousMask);\n                    options.masks.active = tutorial.previousMask;\n                    options.save();\n                }, 200);\n            }\n\n            // remove event listeners\n            $(\"#notesWidget #add-comment\").off(\"click\", tutorial.stepFunc);\n            $(\"#notesWidget\").off(\"click\", \".commentSave\", tutorial.stepFunc);\n            $(\"#notesWidget\").off(\"click\", \".commentEdit\", tutorial.stepFunc);\n            $(\"#notesWidget\").off(\"click\", \".cke_toolgroup:has(.cke_button__toolbarswitch)\", tutorial.stepFunc);\n        }\n    });\n\n    tutorial.previousMask;\n    tutorial.comment;\n    tutorial.stepFunc;\n    tutorial.exiting = true;\n});\n","tripwire.undo = function() {\n    if (tripwire.signatures.undo[viewingSystemID].length > 0) {\n        $(\"#undo\").addClass(\"disabled\");\n        var lastIndex = tripwire.signatures.undo[viewingSystemID].length -1;\n        var data = {\"systemID\": viewingSystemID, \"signatures\": {\"add\": [], \"remove\": [], \"update\": []}};\n\n        var undoItem = tripwire.signatures.undo[viewingSystemID][lastIndex];\n        var redo = $.map(undoItem.signatures, function(signature) {\n            // grab the current signature so we can restore the way it is now\n            if (signature.wormhole && tripwire.client.wormholes[signature.wormhole.id]) {\n                // it was a wormhole and still is\n                return {\"wormhole\": tripwire.client.wormholes[signature.wormhole.id], \"signatures\": [tripwire.client.signatures[signature.signatures[0].id], tripwire.client.signatures[signature.signatures[1].id]]};\n            } else if (tripwire.client.signatures[signature.id] && tripwire.client.signatures[signature.id].type == \"wormhole\") {\n                // it was a regular signature but is now a wormhole\n                var wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n                return {\"wormhole\": wormhole, \"signatures\": [tripwire.client.signatures[wormhole.initialID], tripwire.client.signatures[wormhole.secondaryID]]};\n            } else if (signature.wormhole && tripwire.client.signatures[signature.signatures[0].id]) {\n                // it was a wormhole but is now a regular signature\n                return tripwire.client.signatures[signature.signatures[0].id];\n            } else {\n                // it was a regular signature and still is\n                return tripwire.client.signatures[signature.id];\n            }\n        });\n\n        switch(undoItem.action) {\n            case \"add\":\n                data.signatures.remove = data.signatures.remove.concat($.map(undoItem.signatures, function(signature) { return signature.wormhole ? signature.wormhole : signature.id }));\n                break;\n            case \"remove\":\n                data.signatures.add = data.signatures.add.concat(undoItem.signatures);\n                break;\n            case \"update\":\n                data.signatures.update = data.signatures.update.concat(undoItem.signatures);\n                break;\n        }\n\n        var success = function(data) {\n            if (data.resultSet && data.resultSet[0].result == true) {\n                tripwire.signatures.undo[viewingSystemID].pop();\n\n                $(\"#redo\").removeClass(\"disabled\");\n                if (viewingSystemID in tripwire.signatures.redo) {\n                    if (undoItem.action == \"remove\") {\n                        // we are adding new signatures we removed so we need the new ids\n                        tripwire.signatures.redo[viewingSystemID].push({\"action\": undoItem.action, \"signatures\": data.results});\n                    } else if (undoItem.action == \"update\") {\n                        tripwire.signatures.redo[viewingSystemID].push({\"action\": undoItem.action, \"signatures\": redo});\n                    } else {\n                        tripwire.signatures.redo[viewingSystemID].push({\"action\": undoItem.action, \"signatures\": undoItem.signatures});\n                    }\n                } else {\n                    if (undoItem.action == \"remove\") {\n                        tripwire.signatures.redo[viewingSystemID] = [{\"action\": undoItem.action, \"signatures\": data.results}];\n                    } else if (undoItem.action == \"update\") {\n                        tripwire.signatures.redo[viewingSystemID] = [{\"action\": undoItem.action, \"signatures\": redo}];\n                    } else {\n                        tripwire.signatures.redo[viewingSystemID] = [{\"action\": undoItem.action, \"signatures\": undoItem.signatures}];\n                    }\n                }\n\n                sessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n                sessionStorage.setItem(\"tripwire_redo\", JSON.stringify(tripwire.signatures.redo));\n            }\n        }\n\n        var always = function(data) {\n            if (tripwire.signatures.undo[viewingSystemID].length > 0) {\n                $(\"#undo\").removeClass(\"disabled\");\n            }\n        }\n\n        tripwire.refresh('refresh', data, success, always);\n    }\n}\n","var activity = new function() {\n\tthis.graph;\n\tthis.options;\n\tthis.view;\n\tthis.span = 24;\n\tthis.columns = [\n\t\t{id: \"time\", label: \"Time\", role: \"domain\", type: \"string\", calc: function(d, r) { return d.getValue(r, 0) + \"h\"; }},\n\t\t{id: \"jumps\", label: \"Jumps\", role: \"data\", type: \"number\", sourceColumn: 1, column: 1, title: \"Jumps\"},\n\t\t{id: \"podkills\", label: \"Pod Kills\", role: \"data\", type: \"number\", sourceColumn: 2, column: 2, title: \"Pod Kills\"},\n\t\t{id: \"shipkills\", label: \"Ship Kills\", role: \"data\", type: \"number\", sourceColumn: 3, column: 3, title: \"Ship Kills\"},\n\t\t{id: \"npckills\", label: \"NPC Kills\", role: \"data\", type: \"number\", sourceColumn: 4, column: 4, title: \"NPC Kills\"},\n\t\t//{id: \"annotationLabel\", label: \"Test\", role: \"annotation\", type: \"string\", sourceColumn: 5, title: \"Test\"},\n\t\t//{id: \"annotationText\", label: \"Test\", role: \"annotationText\", type: \"string\", sourceColumn: 6, title: \"Test\"}\n\t];\n\n\tthis.getData = function(span, cache) {\n\t\tvar span = typeof(span) !== \"undefined\" ? span : this.span;\n\t\tvar cache = typeof(cache) !== \"undefined\" ? cache : true;\n\n\t\t// Google hasn't finished loading yet\n\t\tif (!activity.graph) {\n\t\t\t\tsetTimeout(function() {activity.getData(span, cache)}, 500);\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn $.ajax({\n\t\t\turl: \"activity_graph.php\",\n\t\t\tdata: {systemID: viewingSystemID, time: span},\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"JSON\",\n\t\t\tcache: cache\n\t\t}).done(function(json) {\n\t\t\tif (json) {\n\t\t\t\tjson.rows.reverse();\n\t\t\t\tactivity.view = new google.visualization.DataView(new google.visualization.DataTable(json));\n\t\t\t\tactivity.view.setColumns(activity.columns);\n\t\t\t\tactivity.graph.draw(activity.view, activity.options);\n\t\t\t}\n\t\t});\n\t};\n\n\tthis.selectHandler = function() {\n\t\tvar selections = activity.graph.getSelection();\n\n\t\tif (selections[0] && selections[0].row == null) {\n\t\t\tvar c = selections[0].column;\n\n\t\t\tif (activity.columns[c].sourceColumn) {\n\t\t\t\t//activity.columns[c].calc = function() { return null };\n\t\t\t\tactivity.columns[c].label = activity.columns[c].title + \" (off)\";\n\t\t\t\tdelete activity.columns[c].sourceColumn;\n\t\t\t} else {\n\t\t\t\tactivity.columns[c].sourceColumn = activity.columns[c].column;\n\t\t\t\tactivity.columns[c].label = activity.columns[c].title;\n\t\t\t\t//delete activity.columns[c].calc;\n\t\t\t}\n\n\t\t\tactivity.view.setColumns(activity.columns);\n\t\t\tactivity.options.animation.duration = 0;\n\t\t\tactivity.graph.draw(activity.view, activity.options);\n\t\t\tactivity.options.animation.duration = 500;\n\t\t}\n\t}\n\n\tthis.init = function() {\n\t\tactivity.graph = new google.visualization.AreaChart(document.getElementById(\"activityGraph\"));\n\t\tactivity.options = {\n\t\t\tisStacked: false,\n\t\t\tbackgroundColor: \"transparent\",\n\t\t\thAxis: {textStyle: {color: \"#999\", fontName: \"Verdana\", fontSize: 10}, showTextEvery: 3},\n\t\t\tvAxis: {textStyle: {color: \"#666\", fontName: \"Verdana\", fontSize: 10}, viewWindowMode: \"maximized\", viewWindow: {min: 0}, maxValue: 5},\n\t\t\tgridlineColor: \"#454545\",\n\t\t\tpointSize: 2,\n\t\t\tlineWidth: 1,\n\t\t\tchartArea: {left: \"10%\", top: \"5%\", width: \"88%\", height: \"85%\"},\n\t\t\tlegend: {position: \"in\", textStyle: {color: \"#CCC\", fontName: \"Verdana\", fontSize: 8.5}},\n\t\t\tanimation: {duration: 500, easing: \"inAndout\"},\n\t\t\ttooltip: {showColorCode: true},\n\t\t\tannotations: {style: \"line\", textStyle: {fontSize: 12, color: \"#ccc\"}, domain: 0},\n\t\t\tfocusTarget: \"category\"\n\t\t}\n\n\t\tgoogle.visualization.events.addListener(activity.graph, \"select\", activity.selectHandler);\n\n\t\tactivity.getData(activity.span);\n\t}\n\n\tthis.time = function(span) {\n\t\tswitch(span) {\n\t\t\tcase 24:\n\t\t\t\tthis.options.hAxis.showTextEvery = 3;\n\t\t\t\tbreak;\n\t\t\tcase 48:\n\t\t\t\tthis.options.hAxis.showTextEvery = 6;\n\t\t\t\tbreak;\n\t\t\tcase 168:\n\t\t\t\tthis.options.hAxis.showTextEvery = 24;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.span = span;\n\t\tthis.getData(span);\n\t}\n\n\tthis.redraw = function() {\n\t\tthis.graph.draw(this.view, this.options);\n\t}\n\n\tthis.refresh = function(cache) {\n\t\tthis.getData(this.span, cache);\n\t}\n\n\tgoogle.charts.setOnLoadCallback(this.init);\n}\n","var CKConfig = {\n\tskin: \"custom\",\n\theight: 100,\n\tallowedContent: true,\n\textraPlugins: \"toolbarswitch,autogrow,autolink\",\n\tenterMode: CKEDITOR.ENTER_BR,\n\tremoveDialogTabs: 'link:advanced',\n\tautoGrow_onStartup: true,\n\tautoGrow_minHeight: 100,\n\ttoolbar_minToolbar: [\n\t\t{name: \"basicstyles\", items: [\"Bold\", \"Italic\", \"Underline\", \"Strike\"]},\n\t\t{name: \"paragraph\", items: [\"BulletedList\", \"Outdent\", \"Indent\"]},\n\t\t{name: \"links\", items: [\"Link\"]},\n\t\t{name: \"colors\", items: [\"TextColor\", \"BGColor\"]},\n\t\t{name: \"styles\", items: [\"FontSize\"]},\n\t\t{name: \"tools\", items: [\"Toolbarswitch\"]}\n\t],\n\ttoolbar_maxToolbar: [\n\t\t{name: \"basicstyles\", items: [\"Bold\", \"Italic\", \"Underline\", \"Strike\", \"Subscript\", \"Superscript\"]},\n\t\t{name: \"paragraph\", items: [\"NumberedList\", \"BulletedList\", \"Outdent\", \"Indent\"]},\n\t\t{name: \"links\", items: [\"Link\"]},\n\t\t{name: \"colors\", items: [\"TextColor\", \"BGColor\"]},\n\t\t{name: \"styles\", items: [\"FontSize\", \"Font\"]},\n\t\t{name: \"tools\", items: [\"Source\", \"Toolbarswitch\"]}\n\t],\n\ttoolbar: \"minToolbar\",\n\tsmallToolbar: \"minToolbar\",\n\tmaximizedToolbar: \"maxToolbar\",\n\tfontSize_style: {\n\t    element:        'span',\n\t    styles:         { 'font-size': '#(size)' },\n\t    overrides:      [ { element :'font', attributes: { 'size': null } } ]\n\t}\n}\n\nCKEDITOR.on(\"instanceLoaded\", function(cke) {\n\tcke.editor.on(\"contentDom\", function() {\n\t\tcke.editor.on(\"key\", function(e) {\n\t\t\tif (e.data.keyCode == 27) {\n\t\t\t\t// escape key cancels\n\t\t\t\t$(cke.editor.element.$).closest(\".comment\").find(\".commentCancel\").click();\n\t\t\t\treturn false;\n\t\t\t} else if (e.data.domEvent.$.altKey && e.data.domEvent.$.keyCode == 83) {\n\t\t\t\t// alt+s saves\n\t\t\t\t$(cke.editor.element.$).closest(\".comment\").find(\".commentSave\").click();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t});\n\n\t$(\".cke_combo__font a\")\n\t\t.removeClass(\"cke_combo_button\")\n\t\t.addClass(\"cke_button cke_button_off\")\n\t\t.html('<span class=\"cke_button_icon\">&nbsp;</span>')\n\n\t$(\".cke_combo__fontsize a\")\n\t\t.removeClass(\"cke_combo_button\")\n\t\t.addClass(\"cke_button cke_button_off\")\n\t\t.html('<span class=\"cke_button_icon\">&nbsp;</span>')\n});\n\nCKEDITOR.on(\"instanceReady\", function(cke) {\n\t// ensure focus on init\n\tcke.editor.focus();\n\n\tvar s = cke.editor.getSelection(); // getting selection\n\tvar selected_ranges = s.getRanges(); // getting ranges\n\tvar node = selected_ranges[0].startContainer; // selecting the starting node\n\tvar parents = node.getParents(true);\n\n\tnode = parents[parents.length - 2].getFirst();\n\n\tif (!node) return false;\n\n\twhile (true) {\n\t\tvar x = node.getNext();\n\t\tif (x == null) {\n\t\t\tbreak;\n\t\t}\n\t\tnode = x;\n\t}\n\n\ts.selectElement(node);\n\tselected_ranges = s.getRanges();\n\tselected_ranges[0].collapse(false);  //  false collapses the range to the end of the selected node, true before the node.\n\ts.selectRanges(selected_ranges);  // putting the current selection there\n});\n\nCKEDITOR.on(\"dialogDefinition\", function(ev) {\n\tif (ev.data.name == 'link') {\n\t\tev.data.definition.getContents('target').get('linkTargetType')['default'] = '_blank';\n\t}\n});\n","$(\"#admin\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"disabled\")) {\n\t\treturn false;\n\t}\n\n\tif (!$(\"#dialog-admin\").hasClass(\"ui-dialog-content\")) {\n\t\tvar refreshTimer = null;\n\t\tvar $total = null;\n\t\tvar $ajax = null;\n\n\t\tfunction refreshWindow() {\n\t\t\tif ($ajax) $ajax.abort();\n\t\t\t$total.html(\"Total: \" + $(\"#dialog-admin .window .hasFocus table tr[data-id]\").length);\n\n\t\t\t$ajax = $.ajax({\n\t\t\t\turl: \"admin.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdata: {mode: $(\"#dialog-admin .menu .active\").attr(\"data-window\")},\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tif (data && data.results) {\n\t\t\t\t\tvar rows = data.results;\n\t\t\t\t\tvar ids = [];\n\n\t\t\t\t\tfor (var i = 0, l = rows.length; i < l; i++) {\n\t\t\t\t\t\tvar $row = $(\"#dialog-admin .window .hasFocus tbody tr[data-id='\"+ rows[i].id +\"']\");\n\t\t\t\t\t\tids.push(rows[i].id);\n\n\t\t\t\t\t\tif ($row.length) {\n\t\t\t\t\t\t\tfor (col in rows[i]) {\n\t\t\t\t\t\t\t\tvar $col = $row.find(\"[data-col='\"+col+\"']\");\n\t\t\t\t\t\t\t\t$col.html(($col.attr(\"data-format\") == \"number\" ? numFormat(rows[i][col]) : rows[i][col]) || \"&nbsp;\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$row = $(\"#dialog-admin .window .hasFocus table tr.hidden\").clone();\n\t\t\t\t\t\t\t$row.attr(\"data-id\", rows[i].id);\n\n\t\t\t\t\t\t\tfor (col in rows[i]) {\n\t\t\t\t\t\t\t\tvar $col = $row.find(\"[data-col='\"+col+\"']\");\n\t\t\t\t\t\t\t\t$col.html(($col.attr(\"data-format\") == \"number\" ? numFormat(rows[i][col]) : rows[i][col]) || \"&nbsp;\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$row.removeClass(\"hidden\");\n\n\t\t\t\t\t\t\t$(\"#dialog-admin .window .hasFocus tbody\").append($row);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table tr[data-id]\").each(function() {\n\t\t\t\t\t\tif ($.inArray($(this).data(\"id\").toString(), ids) == -1) {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table\").trigger(\"update\", [true]);\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table tr[data-id]\").remove();\n\t\t\t\t}\n\n\t\t\t\t$total.html(\"Total: \" + $(\"#dialog-admin .window .hasFocus table tr[data-id]\").length);\n\t\t\t});\n\n\t\t\tif ($(\"#dialog-admin\").dialog(\"isOpen\") && $(\"#dialog-admin .menu .active\").attr(\"data-refresh\")) {\n\t\t\t\trefreshTimer = setTimeout(refreshWindow, $(\"#dialog-admin .menu .active\").attr(\"data-refresh\"));\n\t\t\t}\n\t\t}\n\n\t\t$(\"#dialog-admin\").dialog({\n\t\t\tautoOpen: true,\n\t\t\tmodal: true,\n\t\t\theight: 350,\n\t\t\twidth: 800,\n\t\t\tbuttons: {\n\t\t\t\tClose: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\t// menu toggle\n\t\t\t\t$(\"#dialog-admin\").on(\"click\", \".menu li\", function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t$menuItem = $(this);\n\t\t\t\t\tclearTimeout(refreshTimer);\n\n\t\t\t\t\t$(\"#dialog-admin .menu .active\").removeClass(\"active\");\n\t\t\t\t\t$menuItem.addClass(\"active\");\n\t\t\t\t\t$(\"div.ui-dialog[aria-describedby='dialog-admin'] .ui-dialog-traypane\").html(\"\");\n\n\t\t\t\t\t$(\"#dialog-admin .window [data-window]\").removeClass(\"hasFocus\").hide();\n\t\t\t\t\t$(\"#dialog-admin .window [data-window='\"+ $menuItem.data(\"window\") +\"']\").addClass(\"hasFocus\").show();\n\n\t\t\t\t\trefreshWindow();\n\t\t\t\t});\n\n\t\t\t\t$(\"#dialog-admin [data-sortable='true']\").tablesorter({\n\t\t\t\t\tsortReset: true,\n\t\t\t\t\twidgets: ['saveSort'],\n\t\t\t\t\tsortList: [[0,0]]\n\t\t\t\t});\n\n\t\t\t\t// dialog bottom tray\n\t\t\t\t$($(this)[0].parentElement).find(\".ui-dialog-buttonpane\").append(\"<div class='ui-dialog-traypane'></div>\");\n\t\t\t\t$total = $(\"div.ui-dialog[aria-describedby='dialog-admin'] .ui-dialog-traypane\");\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$menuItem = $(\"#dialog-admin .menu li.active\");\n\t\t\t\trefreshWindow();\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tclearTimeout(refreshTimer);\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-admin\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-admin\").dialog(\"open\");\n\t}\n});\n","// Dialog effects\n$(\"#wrapper\").addClass(\"transition\");\n\n$(document).on(\"dialogopen\", \".ui-dialog\", function (event, ui) {\n\t// Add additional full screen overlay for 2nd level dialog\n\tif ($(\".ui-dialog:visible\").length == 2 && $(this).hasClass(\"dialog-modal\"))\n\t\t$(\"body\").append($(\"<div id='overlay' class='overlay' />\").css(\"z-index\", $(this).css(\"z-index\") - 1));\n\telse if ($(\"#overlay\"))\n\t\t$(\"#overlay\").css(\"z-index\", $(this).css(\"z-index\") - 1);\n\n\tif (!$(this).hasClass(\"dialog-noeffect\"))\n\t\t$(\"#wrapper\").addClass(\"blur\");\n});\n\n$(document).on(\"dialogclose\", \".ui-dialog\", function (event, ui) {\n\tif (!$(\".ui-dialog\").is(\":visible\"))\n\t\t$(\"#wrapper\").removeClass(\"blur\");\n\n\tif ($(\".ui-dialog:visible\").length == 1)\n\t\t$(\"#overlay\").remove();\n\telse if ($(\"#overlay\"))\n\t\t$(\"#overlay\").css(\"z-index\", $(this).css(\"z-index\") - 2);\n\n\t//if ($(\".ui-dialog:visible\").length == 0 && options.buttons.follow && viewingSystemID != tripwire.client.EVE.systemID)\n\t//\twindow.location = \"?system=\"+tripwire.client.EVE.systemName;\n});\n\n// Signature overwrite\n$(document).on(\"click\", \"#overwrite\", function() {\n\tvar payload = {\"signatures\": {\"remove\": []}, \"systemID\": viewingSystemID};\n\tvar undo = [];\n\n\tvar signature = tripwire.client.signatures[$(this).data(\"id\")];\n\tif (signature.type != \"wormhole\") {\n\t\tundo.push(signature);\n\t\tpayload.signatures.remove.push(signature.id);\n\t} else {\n\t\tvar wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n\t\tundo.push({\"wormhole\": wormhole, \"signatures\": [tripwire.client.signatures[wormhole.initialID], tripwire.client.signatures[wormhole.secondaryID]]});\n\t\tpayload.signatures.remove.push(wormhole);\n\t}\n\n\t$(\"#overwrite\").attr(\"disable\", true);\n\n\tvar success = function(data) {\n\t\tif (data.resultSet && data.resultSet[0].result == true) {\n\t\t\tValidationTooltips.close();\n\n\t\t\t$(\"#undo\").removeClass(\"disabled\");\n\t\t\tif (viewingSystemID in tripwire.signatures.undo) {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID].push({action: \"remove\", signatures: undo});\n\t\t\t} else {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID] = [{action: \"remove\", signatures: undo}];\n\t\t\t}\n\n\t\t\tsessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n\n\t\t\tif ($(\"#dialog-signature\").parent().find(\":button:contains('Save')\")) {\n\t\t\t\t$(\"#dialog-signature\").parent().find(\":button:contains('Save')\").click();\n\t\t\t} else {\n\t\t\t\t$(\"#dialog-signature\").parent().find(\":button:contains('Add')\").click();\n\t\t\t}\n\t\t}\n\t}\n\n\tvar always = function() {\n\t\t$(\"#overwrite\").removeAttr(\"disable\");\n\t}\n\n\ttripwire.refresh('refresh', payload, success, always);\n});\n","$(\".options\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"disabled\"))\n\t\treturn false;\n\n\t$(\"#dialog-options\").dialog({\n\t\tautoOpen: false,\n\t\twidth: 450,\n\t\tminHeight: 400,\n\t\tmodal: true,\n\t\tbuttons: {\n\t\t\tSave: function() {\n\t\t\t\t// Options\n\t\t\t\tvar data = {mode: \"set\", options: JSON.stringify(options)};\n\t\t\t\tvar maskChange = false;\n\n\t\t\t\t$(\"#dialog-options\").parent().find(\".ui-dialog-buttonpane button:contains('Save')\").attr(\"disabled\", true).addClass(\"ui-state-disabled\");\n\n\t\t\t\toptions.chain.typeFormat = $(\"#dialog-options #typeFormat\").val();\n\t\t\t\toptions.chain.classFormat = $(\"#dialog-options #classFormat\").val();\n\t\t\t\t\n\t\t\t\toptions.chain.sigNameLocation = $(\"#dialog-options #chainSigNameLocation\").val();\n\t\t\t\toptions.chain.routingLimit = 1 * $(\"#dialog-options #chainRoutingLimit\").val();\n\t\t\t\toptions.chain.routeSecurity = $(\"#dialog-options #chainRouteSecurity\").val();\n\t\t\t\toptions.chain.routeIgnore.enabled = $(\"#dialog-options #route-ignore-enabled\").prop('checked');\n\t\t\t\toptions.chain.routeIgnore.systems = $(\"#dialog-options #route-ignore\").val().split(\",\").map(x => x.trim());\n\n\t\t\t\toptions.chain.gridlines = JSON.parse($(\"#dialog-options input[name=gridlines]:checked\").val());\n\n\t\t\t\toptions.chain[\"node-reference\"] = $(\"#dialog-options input[name=node-reference]:checked\").val();\n\t\t\t\t\n\t\t\t\toptions.chain.renderer = $(\"#dialog-options #renderer\").val();\n\n\t\t\t\toptions.signatures.editType = $(\"#dialog-options #editType\").val();\n\n\t\t\t\toptions.signatures.pasteLife = $(\"#dialog-options #pasteLife\").val();\n\n\t\t\t\toptions.signatures.copySeparator = $(\"#dialog-options #copySeparator\").val();\n\n\t\t\t\toptions.background = $(\"#dialog-options #background-image\").val();\n\n\t\t\t\toptions.uiscale = $(\"#dialog-options #uiscale-slider\").slider(\"value\");\n\n\t\t\t\tif (options.masks.active != $(\"#dialog-options input[name='mask']:checked\").val()) {\n\t\t\t\t\tmaskChange = true;\n\t\t\t\t}\n\n\t\t\t\toptions.masks.active = $(\"#dialog-options input[name='mask']:checked\").val();\n\n\t\t\t\toptions.apply();\n\t\t\t\toptions.save() // Performs AJAX\n\t\t\t\t\t.done(function() {\n\t\t\t\t\t\tif (maskChange) {\n\t\t\t\t\t\t\t// Reset signatures\n\t\t\t\t\t\t\t$(\"#sigTable span[data-age]\").countdown(\"destroy\");\n\t\t\t\t\t\t\t$(\"#sigTable tbody\").empty()\n\t\t\t\t\t\t\t$(\"#signature-count\").html(0);\n\t\t\t\t\t\t\ttripwire.signatures.list = {};\n\t\t\t\t\t\t\ttripwire.client.signatures = [];\n\n\t\t\t\t\t\t\ttripwire.refresh('change');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\n\t\t\t\t$(\"#dialog-options\").dialog(\"close\");\n\t\t\t\t$(\"#dialog-options\").parent().find(\".ui-dialog-buttonpane button:contains('Save')\").attr(\"disabled\", false).removeClass(\"ui-state-disabled\");\n\n\t\t\t\t// toggle mask admin icon\n\t\t\t\t$(\"#dialog-options input[name='mask']:checked\").data(\"admin\") ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t},\n\t\t\tReset: function() {\n\t\t\t\t$(\"#dialog-confirm #msg\").html(\"Settings will be reset to defaults temporarily.<br/><br/><p><em>Save settings to make changes permanent.</em></p>\");\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tReset: function() {\n\t\t\t\t\t\t\toptions.reset();\n\t\t\t\t\t\t\toptions.apply();\n\n\t\t\t\t\t\t\t$(\"#dialog-options\").dialog(\"close\");\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t},\n\t\t\tClose: function() {\n\t\t\t\t$(this).dialog(\"close\");\n\t\t\t}\n\t\t},\n\t\topen: function() {\n\t\t\t// Get user stats data\n\t\t\t$.ajax({\n\t\t\t\turl: \"user_stats.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tfor (i in data.stats) {\n\t\t\t\t\tfor (x in data.stats[i]) {\n\t\t\t\t\t\t$(\"#optionsAccordion #\"+ x).text(data.stats[i][x]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$(\"#optionsAccordion #systems_visited\").text(data.system_visits);\n\t\t\t\t$(\"#optionsAccordion #logins\").text(data.account.logins);\n\t\t\t\t$(\"#optionsAccordion #lastLogin\").text(data.account.lastLogin);\n\t\t\t\t$(\"#optionsAccordion #username\").text(data.username);\n\t\t\t});\n\n\t\t\t// Get masks\n\t\t\t$.ajax({\n\t\t\t\turl: \"masks.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(response) {\n\t\t\t\tif (response && response.masks) {\n\t\t\t\t\t$(\"#dialog-options #masks #default\").html(\"\");\n\t\t\t\t\t$(\"#dialog-options #masks #personal\").html(\"\");\n\t\t\t\t\t$(\"#dialog-options #masks #corporate\").html(\"\");\n\n\t\t\t\t\tfor (var x in response.masks) {\n\t\t\t\t\t\tvar mask = response.masks[x];\n\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+x+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"'+mask.owner+'\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t+ '<label for=\"mask'+x+'\"><img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t+  (mask.optional ? '<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>' : '')\n\t\t\t\t\t\t\t+ '<span class=\"selector_label\">'+mask.label+'</span></label>');\n\n\t\t\t\t\t\t$(\"#dialog-options #masks #\"+mask.type).append(node);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findp\" value=\"personal\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t+ '<label for=\"findp\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t$(\"#dialog-options #masks #personal\").append(node);\n\n\t\t\t\t\tif (init.admin == \"1\") {\n\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findc\" value=\"corporate\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t+ '<label for=\"findc\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").append(node);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-options input[name='mask']\").filter(\"[value='\"+response.masks[response.active].mask+\"']\").attr(\"checked\", true).trigger(\"change\");\n\n\t\t\t\t\t// toggle mask admin icon\n\t\t\t\t\tresponse.masks[response.active].admin ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#dialog-options #editType\").val(options.signatures.editType);\n\t\t\t$(\"#dialog-options #pasteLife\").val(options.signatures.pasteLife);\n\t\t\t$(\"#dialog-options #copySeparator\").val(options.signatures.copySeparator);\n\t\t\t$(\"#dialog-options #typeFormat\").val(options.chain.typeFormat);\n\t\t\t$(\"#dialog-options #chainRoutingLimit\").val(options.chain.routingLimit);\n\t\t\t$(\"#dialog-options #chainSigNameLocation\").val(options.chain.sigNameLocation);\n\t\t\t$(\"#dialog-options #chainRouteSecurity\").val(options.chain.routeSecurity);\n\t\t\t$(\"#dialog-options #route-ignore-enabled\").prop('checked', options.chain.routeIgnore.enabled);\n\t\t\t$(\"#dialog-options #route-ignore\").val(options.chain.routeIgnore.systems.join(','));\n\t\t\t$(\"#dialog-options #renderer\").val(options.chain.renderer);\n\t\t\t$(\"#dialog-options #classFormat\").val(options.chain.classFormat);\n\t\t\t$(\"#dialog-options input[name='node-reference'][value='\"+options.chain[\"node-reference\"]+\"']\").prop(\"checked\", true);\n\t\t\t$(\"#dialog-options input[name='gridlines'][value='\"+options.chain.gridlines+\"']\").prop(\"checked\", true);\n\t\t\t$(\"#dialog-options #background-image\").val(options.background);\n\t\t},\n\t\tcreate: function() {\n\t\t\t$(\"#optionsAccordion\").accordion({heightStyle: \"content\", collapsible: true, active: false});\n\n\t\t\t$(\"#uiscale-slider\").slider({\n\t\t\t\tmin: 0.7,\n\t\t\t\tmax: 1.4,\n\t\t\t\tstep: 0.05,\n\t\t\t\tvalue: options.uiscale || 1.0,\n\t\t\t\tchange: function(e, ui) {\n\t\t\t\t\t$(\"body\").css(\"zoom\", ui.value);\n\t\t\t\t},\n\t\t\t\tslide: function(e, ui) {\n\t\t\t\t\t$(\"label[for='uiscale-slider']\").html(ui.value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"label[for='uiscale-slider']\").html($(\"#uiscale-slider\").slider(\"value\"));\n\n\t\t\t$(\"#dialog-pwChange\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tminHeight: 0,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#pwForm\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#pwForm input[name='password'], #pwForm input[name='confirm']\").val(\"\");\n\t\t\t\t\t$(\"#pwError\").text(\"\").hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#pwChange\").click(function() {\n\t\t\t\t$(\"#dialog-pwChange\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#pwForm\").submit(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$(\"#pwError\").text(\"\").hide();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: \"options.php\",\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t$(\"#dialog-msg #msg\").text(\"Password changed\");\n\t\t\t\t\t\t$(\"#dialog-msg\").dialog(\"open\");\n\n\t\t\t\t\t\t$(\"#dialog-pwChange\").dialog(\"close\");\n\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t$(\"#pwError\").text(response.error).show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#pwError\").text(\"Unknown error\").show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t$(\"#dialog-usernameChange\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tminHeight: 0,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#usernameForm\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\t$(\"#usernameForm #username\").html($(\"#dialog-options #username\").html());\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#usernameForm [name='username']\").val(\"\");\n\t\t\t\t\t$(\"#usernameError\").text(\"\").hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#usernameChange\").click(function() {\n\t\t\t\t$(\"#dialog-usernameChange\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#usernameForm\").submit(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$(\"#usernameError\").text(\"\").hide();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: \"options.php\",\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t$(\"#dialog-msg #msg\").text(\"Username changed\");\n\t\t\t\t\t\t$(\"#dialog-msg\").dialog(\"open\");\n\n\t\t\t\t\t\t$(\"#dialog-options #username\").html(response.result);\n\n\t\t\t\t\t\t$(\"#dialog-usernameChange\").dialog(\"close\");\n\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t$(\"#usernameError\").text(response.error).show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#usernameError\").text(\"Unknown error\").show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Mask selections\n\t\t\t$(\"#masks\").on(\"change\", \"input.selector:checked\", function() {\n\t\t\t\tif ($(this).data(\"owner\")) {\n\t\t\t\t\t$(\"#maskControls #edit\").removeAttr(\"disabled\");\n\t\t\t\t\t$(\"#maskControls #delete\").removeAttr(\"disabled\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#maskControls #edit\").attr(\"disabled\", \"disabled\");\n\t\t\t\t\t$(\"#maskControls #delete\").attr(\"disabled\", \"disabled\");\n\t\t\t\t}\n\n\t\t\t\tif ($(this).val() != 0.0 && $(this).val().split(\".\")[1] == 0) {\n\t\t\t\t\t$(\"#dialog-options #leave\").removeAttr(\"disabled\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#dialog-options #leave\").attr(\"disabled\", \"disabled\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Mask join\n\t\t\t$(\"#dialog-joinMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tAdd: function() {\n\t\t\t\t\t\tvar mask = $(\"#dialog-joinMask #results input:checked\");\n\t\t\t\t\t\tvar label = $(\"#dialog-joinMask #results input:checked+label\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: {mask: mask.val(), mode: \"join\"},\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\tlabel.css(\"width\", \"\");\n\t\t\t\t\t\t\t\tlabel.find(\".info\").remove();\n\t\t\t\t\t\t\t\tlabel.append('<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>');\n\n\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #\"+response.type+\" input.selector:last\").before(mask).before(label);\n\t\t\t\t\t\t\t\t$(\"#dialog-joinMask\").dialog(\"close\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-joinMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$(\"#dialog-joinMask #results\").html(\"\");\n\t\t\t\t\t\t$(\"#dialog-joinMask #loading\").show();\n\t\t\t\t\t\t$(\"#dialog-joinMask input[type='submit']\").attr(\"disabled\", \"disabled\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).then(function(response) {\n\t\t\t\t\t\t\tif (response && response.results && response.results.length) {\n\t\t\t\t\t\t\t\treturn tripwire.esi.fullLookup(response.eveIDs)\n\t\t\t\t\t\t\t\t\t.done(function(results) {\n\t\t\t\t\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\t\t\t\t\tfor (var x in results) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar mask = response.results[x];\n\t\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+mask.mask+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"false\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"mask'+mask.mask+'\" style=\"width: 100%; margin-left: -5px;\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">'+mask.label+'</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].name + '<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].category == \"character\" ? results[x].corporation.name +'<br/>' : null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].alliance ? results[x].alliance.name : '')+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-joinMask #results\").append(node);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).then(function() {\n\t\t\t\t\t\t\t$(\"#dialog-joinMask #loading\").hide();\n\t\t\t\t\t\t\t$(\"#dialog-joinMask input[type='submit']\").removeAttr(\"disabled\");\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#dialog-joinMask #results\").html(\"\");\n\t\t\t\t\t$(\"#dialog-joinMask input[name='name']\").val(\"\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#dialog-options #masks\").on(\"click\", \"input[name='find']+label\", function() {\n\t\t\t\t$(\"#dialog-joinMask input[name='find']\").val($(this).prev().val());\n\t\t\t\t$(\"#dialog-joinMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t// Mask leave\n\t\t\t$(\"#dialog-options #masks\").on(\"click\", \".closeIcon\", function() {\n\t\t\t\tvar mask = $(this).closest(\"input.selector+label\").prev();\n\n\t\t\t\t$(\"#dialog-confirm #msg\").text(\"Are you sure you want to remove this mask?\");\n\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tRemove: function() {\n\t\t\t\t\t\t\tvar send = {mode: \"leave\", mask: mask.val()};\n\n\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\tdata: send,\n\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t\tmask.next().remove();\n\t\t\t\t\t\t\t\t\tmask.remove();\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unable to delete\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t});\n\n\t\t\t// Mask delete\n\t\t\t$(\"#maskControls #delete\").click(function() {\n\t\t\t\tvar mask = $(\"#masks input.selector:checked\");\n\n\t\t\t\t$(\"#dialog-confirm #msg\").text(\"Are you sure you want to delete this mask?\");\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tDelete: function() {\n\t\t\t\t\t\t\tvar send = {mode: \"delete\", mask: mask.val()};\n\n\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\tdata: send,\n\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t\tmask.next().remove();\n\t\t\t\t\t\t\t\t\tmask.remove();\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unable to delete\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t});\n\n\t\t\t// User Create mask\n\t\t\t$(\"#dialog-createMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tCreate: function() {\n\t\t\t\t\t\t$(\"#dialog-createMask form\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-createMask #accessList\").on(\"click\", \"#create_add+label\", function() {\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").dialog(\"open\");\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-createMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t// Get masks\n\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\t\tif (response && response.masks) {\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #default\").html(\"\");\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #personal\").html(\"\");\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").html(\"\");\n\n\t\t\t\t\t\t\t\t\t\tfor (var x in response.masks) {\n\t\t\t\t\t\t\t\t\t\t\tvar mask = response.masks[x];\n\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+x+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"'+mask.owner+'\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"mask'+x+'\"><img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+  (mask.optional ? '<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<span class=\"selector_label\">'+mask.label+'</span></label>');\n\n\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #\"+mask.type).append(node);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findp\" value=\"personal\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"findp\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #personal\").append(node);\n\n\t\t\t\t\t\t\t\t\t\tif (init.admin == \"1\") {\n\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findc\" value=\"corporate\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"findc\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").append(node);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options input[name='mask']\").filter(\"[value='\"+response.masks[response.active].mask+\"']\").attr(\"checked\", true).trigger(\"change\");\n\n\t\t\t\t\t\t\t\t\t\t// toggle mask admin icon\n\t\t\t\t\t\t\t\t\t\tresponse.masks[response.active].admin ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"#dialog-createMask\").dialog(\"close\");\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-createMask select\").selectmenu({width: 100});\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\t$(\"#dialog-createMask input[name='name']\").val(\"\");\n\t\t\t\t\t$(\"#dialog-createMask #accessList :not(.static)\").remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#maskControls #create\").click(function() {\n\t\t\t\t$(\"#dialog-createMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#dialog-createMask #accessList\").on(\"click\", \".maskRemove\", function() {\n\t\t\t\t$(this).closest(\"input.selector+label\").prev().remove();\n\t\t\t\t$(this).closest(\"label\").remove();\n\t\t\t});\n\n\t\t\t$(\"#dialog-editMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#dialog-editMask form\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-editMask #accessList\").on(\"click\", \".maskRemove\", function() {\n\t\t\t\t\t\t$(this).closest(\"input.selector+label\").prev().attr(\"name\", \"deletes[]\").hide();\n\t\t\t\t\t\t$(this).closest(\"label\").hide();\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-editMask #accessList\").on(\"click\", \"#edit_add+label\", function() {\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").dialog(\"open\");\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-editMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t$(\"#dialog-editMask\").dialog(\"close\");\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\tvar mask = $(\"#dialog-options input[name='mask']:checked\").val();\n\t\t\t\t\t$(\"#dialog-editMask input[name='mask']\").val(mask);\n\t\t\t\t\t$(\"#dialog-editMask #accessList label.static\").hide();\n\t\t\t\t\t$(\"#dialog-editMask #loading\").show();\n\t\t\t\t\t$(\"#dialog-editMask #name\").text($(\"#dialog-options input[name='mask']:checked+label .selector_label\").text());\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\tdata: {mode: \"edit\", mask: mask},\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).then(function(response) {\n\t\t\t\t\t\tif (response && response.results && response.results.length) {\n\t\t\t\t\t\t\treturn tripwire.esi.fullLookup(response.results)\n\t\t\t\t\t\t\t\t.done(function(results) {\n\t\t\t\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\t\t\t\tfor (var x in results) {\n\t\t\t\t\t\t\t\t\t\t\tif (results[x].category == \"character\") {\n\t\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" checked=\"checked\" onclick=\"return false\" name=\"\" id=\"edit_'+results[x].id+'_1373\" value=\"'+results[x].id+'_1373\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"edit_'+results[x].id+'_1373\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/Character/'+results[x].id+'_64.jpg\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">Character</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].name + '<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].corporation.name+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].alliance ? results[x].alliance.name : '')+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t<input type=\"button\" class=\"maskRemove\" value=\"Remove\" style=\"position: absolute; bottom: 3px; right: 3px;\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList .static:first\").before(node);\n\t\t\t\t\t\t\t\t\t\t\t} else if (results[x].category == \"corporation\") {\n\t\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" checked=\"checked\" onclick=\"return false\" name=\"\" id=\"edit_'+results[x].id+'_2\" value=\"'+results[x].id+'_2\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"edit_'+results[x].id+'_2\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/Corporation/'+results[x].id+'_64.png\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">Corporation</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].name+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].alliance ? results[x].alliance.name : '')+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t<input type=\"button\" class=\"maskRemove\" value=\"Remove\" style=\"position: absolute; bottom: 3px; right: 3px;\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList .static:first\").before(node);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(response) {\n\t\t\t\t\t\t$(\"#dialog-editMask #accessList label.static\").show();\n\t\t\t\t\t\t$(\"#dialog-editMask #loading\").hide();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#dialog-editMask #accessList :not(.static)\").remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#maskControls #edit\").click(function() {\n\t\t\t\t$(\"#dialog-editMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t// EVE search dialog\n\t\t\t$(\"#dialog-EVEsearch\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tAdd: function() {\n\t\t\t\t\t\tif ($(\"#accessList input[value='\"+$(\"#EVESearchResults input\").val()+\"']\").length) {\n\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Already has access\");\n\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(\"#EVESearchResults .info\").append('<input type=\"button\" class=\"maskRemove\" value=\"Remove\" style=\"position: absolute; bottom: 3px; right: 3px;\" />');\n\t\t\t\t\t\t$(\"#EVESearchResults input:checked\").attr(\"checked\", \"checked\");\n\t\t\t\t\t\t$(\"#EVESearchResults input:checked\").attr(\"onclick\", \"return false\");\n\n\t\t\t\t\t\tvar nodes = $(\"#EVESearchResults .maskNode:has(input:checked)\");\n\n\t\t\t\t\t\tif ($(\"#dialog-createMask\").dialog(\"isOpen\"))\n\t\t\t\t\t\t\t$(\"#dialog-createMask #accessList .static:first\").before(nodes);\n\t\t\t\t\t\telse if ($(\"#dialog-editMask\").dialog(\"isOpen\"))\n\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList .static:first\").before(nodes);\n\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t},\n\t\t\t\t\tClose: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#EVEsearch\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif ($(\"#EVEsearch input[name='name']\").val() == \"\") {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(\"#EVESearchResults, #searchCount\").html(\"\");\n\t\t\t\t\t\t$(\"#EVEsearch #searchSpinner\").show();\n\t\t\t\t\t\t$(\"#EVEsearch input[type='submit']\").attr(\"disabled\", \"disabled\");\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").parent().find(\".ui-dialog-buttonpane button:contains('Add')\").attr(\"disabled\", true).addClass(\"ui-state-disabled\");\n\n\t\t\t\t\t\ttripwire.esi.search($(\"#EVEsearch input[name='name']\").val(), $(\"#EVEsearch input[name='category']:checked\").val(), $(\"#EVEsearch input[name='exact']\")[0].checked)\n\t\t\t\t\t\t\t.done(function(results) {\n\t\t\t\t\t\t\t\tif (results && (results.character || results.corporation)) {\n\t\t\t\t\t\t\t\t\t// limit results\n\t\t\t\t\t\t\t\t\tresults = $.merge(results.character || [], results.corporation || []);\n\t\t\t\t\t\t\t\t\ttotal = results.length;\n\t\t\t\t\t\t\t\t\tresults = results.slice(0, 10);\n\t\t\t\t\t\t\t\t\treturn tripwire.esi.fullLookup(results)\n\t\t\t\t\t\t\t\t\t\t.done(function(results) {\n\t\t\t\t\t\t\t\t\t\t\t$(\"#EVEsearch #searchCount\").html(\"Found: \"+total+\"<br/>Showing: \"+(total<10?total:10));\n\t\t\t\t\t\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var x in results) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (results[x].category == \"character\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<div class=\"maskNode\"><input type=\"checkbox\" name=\"adds[]\" id=\"find_'+results[x].id+'_1373\" value=\"'+results[x].id+'_1373\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"find_'+results[x].id+'_1373\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/Character/'+results[x].id+'_64.jpg\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">Character</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].name + '<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].corporation.name+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].alliance ? results[x].alliance.name : '')+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</label></div>');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$(\"#EVESearchResults\").append(node);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (results[x].category == \"corporation\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<div class=\"maskNode\"><input type=\"checkbox\" name=\"adds[]\" id=\"find_'+results[x].id+'_2\" value=\"'+results[x].id+'_2\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"find_'+results[x].id+'_2\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/Corporation/'+results[x].id+'_64.png\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">Corporation</span>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+results[x].name+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(results[x].alliance ? results[x].alliance.name : '')+'<br/>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</label></div>');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$(\"#EVESearchResults\").append(node);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t\t\t\t\t\t$(\"#EVEsearch #searchSpinner\").hide();\n\t\t\t\t\t\t\t\t\t\t\t$(\"#EVEsearch input[type='submit']\").removeAttr(\"disabled\");\n\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-EVEsearch\").parent().find(\".ui-dialog-buttonpane button:contains('Add')\").removeAttr(\"disabled\").removeClass(\"ui-state-disabled\");\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"No Results\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\n\t\t\t\t\t\t\t\t\t$(\"#EVEsearch #searchSpinner\").hide();\n\t\t\t\t\t\t\t\t\t$(\"#EVEsearch input[type='submit']\").removeAttr(\"disabled\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-EVEsearch\").parent().find(\".ui-dialog-buttonpane button:contains('Add')\").removeAttr(\"disabled\").removeClass(\"ui-state-disabled\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#EVEsearch input[name='name']\").val(\"\");\n\t\t\t\t\t$(\"#EVESearchResults, #searchCount\").html(\"\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t$(\"#dialog-options\").dialog(\"open\");\n});\n","\t\t$(\"#dialog-ping\").dialog({\n\t\t\tautoOpen: false,\n\t\t\theight: \"auto\",\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tSend: function() {\n\t\t\t\t\tvar payload = {systemName: this.systemName, systemText: this.systemText, message: $('#ping-text').val() };\n\t\t\t\t\tconst _this = this;\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"ping.php\",\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\tdata: payload,\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).done(function(data) {\t$(_this).dialog(\"close\"); })\n\t\t\t\t\t.error(function(data) { alert((data && data.error) ? data.error : data); });\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t},\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\tconst wormholeID = $(this).data(\"id\");\n\t\t\t\tconst systemID = $(this).data(\"systemID\");\n\t\t\t\tconst wormhole = tripwire.client.wormholes[wormholeID];\n\t\t\t\tconst fromSignature = wormhole ? tripwire.client.signatures[wormhole.initialID] : { name: null};\n\t\t\t\t\n\t\t\t\tthis.systemName = tripwire.systems[systemID].name;\n\t\t\t\tthis.systemText = this.systemName + (fromSignature.name !== null && fromSignature.name.length ? ' (' + fromSignature.name + ')' : '');\n\t\t\t\t\n\t\t\t\t$(\"#dialog-ping\").dialog(\"option\", \"title\", \"Ping about \"+this.systemText);\n\t\t\t\t$('#ping-text').val('');\n\t\t\t\t$('#ping-text').focus();\n\t\t\t}\n\t\t});","$(\"#signaturesWidget\").on(\"click\", \"#delete-signature\", function(e) {\n\te.preventDefault();\n\n\tif ($(this).closest(\"tr\").attr(\"disabled\")) {\n\t\treturn false;\n\t} else if ($(\"#sigTable tr.selected\").length == 0) {\n\t\treturn false;\n\t} else if ($(\"#dialog-sigEdit\").hasClass(\"ui-dialog-content\") && $(\"#dialog-sigEdit\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-sigEdit\").parent().effect(\"shake\", 300);\n\t\treturn false;\n\t}\n\n\t// check if dialog is open\n\tif (!$(\"#dialog-deleteSig\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-deleteSig\").dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 0,\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tDelete: function() {\n\t\t\t\t\t// Prevent duplicate submitting\n\t\t\t\t\t$(\"#dialog-deleteSig\").parent().find(\":button:contains('Delete')\").button(\"disable\");\n\t\t\t\t\tvar payload = {\"signatures\": {\"remove\": []}, \"systemID\": viewingSystemID};\n\t\t\t\t\tvar undo = [];\n\n\t\t\t\t\tvar signatures = $.map($(\"#sigTable tr.selected\"), function(n) {\n\t\t\t\t\t\tvar signature = tripwire.client.signatures[$(n).data(\"id\")];\n\t\t\t\t\t\tif (signature.type != \"wormhole\") {\n\t\t\t\t\t\t\tundo.push(signature);\n\t\t\t\t\t\t\treturn signature.id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n\t\t\t\t\t\t\tundo.push({\"wormhole\": wormhole, \"signatures\": [tripwire.client.signatures[wormhole.initialID], tripwire.client.signatures[wormhole.secondaryID]]});\n\t\t\t\t\t\t\treturn wormhole;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tpayload.signatures.remove = signatures;\n\n\t\t\t\t\tvar success = function(data) {\n\t\t\t\t\t\tif (data.resultSet && data.resultSet[0].result == true) {\n\t\t\t\t\t\t\t$(\"#dialog-deleteSig\").dialog(\"close\");\n\n\t\t\t\t\t\t\t$(\"#undo\").removeClass(\"disabled\");\n\t\t\t\t\t\t\tif (viewingSystemID in tripwire.signatures.undo) {\n\t\t\t\t\t\t\t\ttripwire.signatures.undo[viewingSystemID].push({action: \"remove\", signatures: undo});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttripwire.signatures.undo[viewingSystemID] = [{action: \"remove\", signatures: undo}];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar always = function(data) {\n\t\t\t\t\t\t$(\"#dialog-deleteSig\").parent().find(\":button:contains('Delete')\").button(\"enable\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttripwire.refresh('refresh', payload, success, always);\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\t$(\"#sigTable tr.selected\").removeClass(\"selected\");\n\t\t\t\t//$(\"#sigTable .sigDelete\").removeClass(\"invisible\");\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-deleteSig\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-deleteSig\").dialog(\"open\");\n\t}\n});\n","$(\"#sigTable tbody\").on(\"dblclick\", \"tr\", {mode: \"update\", source:\"sig-row\"}, openSignatureDialog);\n$(\"#edit-signature\").on(\"click\", {mode: \"update\", source:\"edit-sig\"}, openSignatureDialog);\n$(\"#add-signature\").click({mode: \"add\"}, openSignatureDialog);\n\nconst sigDialogVM = {};\nfunction openSignatureDialog(e) {\n\tif(e.preventDefault) { e.preventDefault(); }\t// Allow calls with fake event-like objects too\n\tsigDialogVM.mode = e.data.mode;\n\t\n\tswitch(sigDialogVM.mode) {\n\t\tcase 'update':\n\t\t\tif (e.data.source == \"sig-row\") {\n\t\t\t\t$(\"#sigTable tr.selected\").removeClass(\"selected\");\n\t\t\t\t$(this).closest(\"tr\").addClass(\"selected\");\n\t\t\t\tsigDialogVM.sigId = $(this).data('id');\n\t\t\t} else if (e.data.source == \"edit-sig\") {\n\t\t\t\tvar elements = $(\"#sigTable tbody tr.selected\");\n\t\t\t\tif (elements.length !== 1) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tsigDialogVM.sigId = $(elements[0]).data('id');\n\t\t\t\t}\n\t\t\t} else { sigDialogVM.sigId = e.data.signature; }\n\t\t\tbreak;\n\t\tdefault: delete sigDialogVM.sigId;\n\t}\n\t\n\tsigDialogVM.viewingSystemID = ( sigDialogVM.sigID ) ? tripwire.client.signatures[sigDialogVM.sigId].systemID : viewingSystemID;\n\tsigDialogVM.viewingSystem = tripwire.systems[sigDialogVM.viewingSystemID];\n\t\n\tif (!$(\"#dialog-signature\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-signature\").dialog({\n\t\t\tautoOpen: true,\n\t\t\tresizable: false,\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tposition: {my: \"center\", at: \"center\", of: $(\"#signaturesWidget\")},\n\t\t\tbuttons: {\n\t\t\t\tSave: function() {\n\t\t\t\t\t$(\"#form-signature\").submit();\n\t\t\t\t},\n\t\t\t\tAdd: function() {\n\t\t\t\t\t$(\"#form-signature\").submit();\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\tvar aSigWormholes = $.map(tripwire.wormholes, function(item, index) { return index;});\n\t\t\t\taSigWormholes.splice(26, 0, \"K162\");\n\t\t\t\taSigWormholes.push(\"GATE\");\n\t\t\t\taSigWormholes.push(\"SML\");\n\t\t\t\taSigWormholes.push(\"MED\");\n\t\t\t\taSigWormholes.push(\"LRG\");\n\t\t\t\taSigWormholes.push(\"XLG\");\n\n\t\t\t\t$(\"#dialog-signature [name='signatureType'], #dialog-signature [name='signatureLife']\").selectmenu({width: 100});\n\t\t\t\t$(\"#dialog-signature [name='wormholeLife'], #dialog-signature [name='wormholeMass']\").selectmenu({width: 80});\n\t\t\t\t$(\"#dialog-signature [data-autocomplete='sigSystems']\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\t\t\t\t$(\"#dialog-signature [data-autocomplete='sigType']\").inlinecomplete({source: aSigWormholes, maxSize: 10, delay: 0});\n\n\t\t\t\t$(\"#dialog-signature #durationPicker\").durationPicker();\n\t\t\t\t$(\"#dialog-signature #durationPicker\").on(\"change\", function() {\n\t\t\t\t\t// prevent negative values\n\t\t\t\t\tif (this.value < 0) {\n\t\t\t\t\t\tthis.value = 0;\n\t\t\t\t\t\t$(this).change();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Ensure first signature ID field only accepts letters\n\t\t\t\t$(\"#dialog-signature [name='signatureID_Alpha'], #dialog-signature [name='signatureID2_Alpha']\").on(\"input\", function() {\n\t\t\t\t\twhile (!/^[a-zA-Z?]*$/g.test(this.value)) {\n\t\t\t\t\t\tthis.value = this.value.substring(0, this.value.length -1);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Move to the numeric ID after filling out alpha ID\n\t\t\t\t$(\"#dialog-signature [name='signatureID_Alpha']\").on(\"input\", function() {\n\t\t\t\t\tif (this.value.length === 3) {\n\t\t\t\t\t\t$(\"#dialog-signature [name='signatureID_Numeric']\").select();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(\"#dialog-signature [name='signatureID2_Alpha']\").on(\"input\", function() {\n\t\t\t\t\tif (this.value.length === 3) {\n\t\t\t\t\t\t$(\"#dialog-signature [name='signatureID2_Numeric']\").select();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Ensure second signature ID field only accepts numbers\n\t\t\t\t$(\"#dialog-signature [name='signatureID_Numeric'], #dialog-signature [name='signatureID2_Numeric']\").on(\"input\", function() {\n\t\t\t\t\twhile (!/^[0-9?]*$/g.test(this.value)) {\n\t\t\t\t\t\tthis.value = this.value.substring(0, this.value.length -1);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Select value on click\n\t\t\t\t$(\"#dialog-signature .signatureID, #dialog-signature .wormholeType\").on(\"click\", function() {\n\t\t\t\t\t$(this).select();\n\t\t\t\t});\n\n\t\t\t\t// Auto fill opposite side wormhole w/ K162\n\t\t\t\t$(\"#dialog-signature .wormholeType\").on(\"input, change\", function() {\n\t\t\t\t\tif (this.value.length > 0 && $.inArray(this.value.toUpperCase(), aSigWormholes) != -1 && this.value.toUpperCase() != \"K162\") {\n\t\t\t\t\t\t$(\"#dialog-signature .wormholeType\").not(this).val(\"K162\");\n\n\t\t\t\t\t\t// Also auto calculate duration\n\t\t\t\t\t\tif (tripwire.wormholes[this.value.toUpperCase()]) {\n\t\t\t\t\t\t\t$(\"#dialog-signature #durationPicker\").val(tripwire.wormholes[this.value.toUpperCase()].life.substring(0, 2) * 60 * 60).change();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.value.toUpperCase() === \"K162\") {\n\t\t\t\t\t\tif ($.inArray($(\"#dialog-signature .wormholeType\").not(this).val().toUpperCase(), aSigWormholes) === -1 || $(\"#dialog-signature .wormholeType\").not(this).val().toUpperCase() === \"K162\") {\n\t\t\t\t\t\t\t$(\"#dialog-signature .wormholeType\").not(this).val(\"????\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.value == \"????\") {\n\t\t\t\t\t\t$(\"#dialog-signature .wormholeType\").not(this).val(\"K162\");\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Toggle between wormhole and regular signatures\n\t\t\t\t$(\"#dialog-signature\").on(\"selectmenuchange\", \"[name='signatureType']\", function() {\n\t\t\t\t\tif (this.value == \"wormhole\") {\n\t\t\t\t\t\t$(\"#dialog-signature #site\").slideUp(200, function() { $(this).hide(0); });\n\t\t\t\t\t\t$(\"#dialog-signature #wormhole\").slideDown(200, function() { $(this).show(200); });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#dialog-signature #site\").slideDown(200, function() { $(this).show(200); });\n\t\t\t\t\t\t$(\"#dialog-signature #wormhole\").slideUp(200, function() { $(this).hide(0); });\n\t\t\t\t\t}\n\n\t\t\t\t\tValidationTooltips.close();\n\t\t\t\t});\n\n\t\t\t\t$(\"#form-signature\").submit(function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar form = $(this).serializeObject();\n\t\t\t\t\tvar valid = true;\n\t\t\t\t\tValidationTooltips.close();\n\n\t\t\t\t\t// Validate full signature ID fields (blank | 3 characters)\n\t\t\t\t\t$.each($(\"#dialog-signature .signatureID:visible\"), function() {\n\t\t\t\t\t\tif (this.value.length > 0 && this.value.length < 3) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be 3 characters in length!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate full signature ID doesn't already exist in current system\n\t\t\t\t\tif (form.signatureID_Alpha.length === 3 && form.signatureID_Numeric.length === 3 && Object.find(tripwire.client.signatures, \"signatureID\", form.signatureID_Alpha + form.signatureID_Numeric, true) != false && Object.find(tripwire.client.signatures, \"signatureID\", form.signatureID_Alpha + form.signatureID_Numeric, true).id != $(\"#dialog-signature\").data(\"signatureid\")) {\n\t\t\t\t\t\tvar existingSignature = Object.find(tripwire.client.signatures, \"signatureID\", form.signatureID_Alpha + form.signatureID_Numeric);\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-signature .signatureID:first\")}).setContent(\"Signature ID already exists! <input type='button' autofocus='true' id='overwrite' value='Overwrite' style='margin-bottom: -4px; margin-top: -4px; font-size: 0.8em;' data-id='\"+ existingSignature.id +\"' />\");\n\t\t\t\t\t\t$(\"#overwrite\").focus();\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate wormhole types (blank | wormhole)\n\t\t\t\t\t$.each($(\"#dialog-signature .wormholeType:visible\"), function() {\n\t\t\t\t\t\tif (this.value.length > 0 && $.inArray(this.value.toUpperCase(), aSigWormholes) == -1 && this.value != \"????\") {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be a valid wormhole type!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate leads to system (blank | system)\n\t\t\t\t\t$.each($(\"#dialog-signature .leadsTo:visible\"), function() {\n\t\t\t\t\t\tif (this.value.length > 0 && tripwire.aSigSystems.findIndex((item) => this.value.toLowerCase() === item.toLowerCase()) == -1) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be a valid leads to system!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate leads to isn't the viewing system which causes a inner loop\n\t\t\t\t\t$.each($(\"#dialog-signature .leadsTo:visible\"), function() {\n\t\t\t\t\t\tif (this.value.length > 0 && this.value.toLowerCase() === sigDialogVM.viewingSystem.name.toLowerCase()) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Wormhole cannot lead to the same system it comes from!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\tvar payload = {};\n\t\t\t\t\tvar undo = [];\n\t\t\t\t\tif (form.signatureType === \"wormhole\") {\n\t\t\t\t\t\tvar signature = {\n\t\t\t\t\t\t\t\"signatureID\": form.signatureID_Alpha + form.signatureID_Numeric,\n\t\t\t\t\t\t\t\"systemID\": sigDialogVM.viewingSystemID,\n\t\t\t\t\t\t\t\"type\": \"wormhole\",\n\t\t\t\t\t\t\t\"name\": form.wormholeName,\n\t\t\t\t\t\t\t\"lifeLength\": form.signatureLength\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar leadsTo = null;\n\t\t\t\t\t\tif (Object.index(tripwire.systems, \"name\", form.leadsTo, true)) {\n\t\t\t\t\t\t\t// Leads To is a normal EVE system, so use the sytem ID\n\t\t\t\t\t\t\tleadsTo = Object.index(tripwire.systems, \"name\", form.leadsTo, true)\n\t\t\t\t\t\t} else if (tripwire.wormholes[form.wormholeType.toUpperCase()]) {\n\t\t\t\t\t\t\t// Leads To can be determined by the wormhole type, so lets use what we know it leads to\n\t\t\t\t\t\t\tif (tripwire.aSigSystems.findIndex((item) => tripwire.wormholes[form.wormholeType.toUpperCase()].leadsTo.replace(' ', '-').toLowerCase() === item.toLowerCase()) > -1) {\n\t\t\t\t\t\t\t\tleadsTo = tripwire.aSigSystems.findIndex((item) => tripwire.wormholes[form.wormholeType.toUpperCase()].leadsTo.replace(' ', '-').toLowerCase() === item.toLowerCase());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (tripwire.aSigSystems.findIndex((item) => form.leadsTo.toLowerCase() === item.toLowerCase()) !== -1) {\n\t\t\t\t\t\t\t// Leads To is one of the valid types we allow, so use of of those indexes as reference\n\t\t\t\t\t\t\tleadsTo = tripwire.aSigSystems.findIndex((item) => form.leadsTo.toLowerCase() === item.toLowerCase());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar signature2 = {\n\t\t\t\t\t\t\t\"signatureID\": form.signatureID2_Alpha + form.signatureID2_Numeric,\n\t\t\t\t\t\t\t\"systemID\": leadsTo,\n\t\t\t\t\t\t\t\"type\": \"wormhole\",\n\t\t\t\t\t\t\t\"name\": form.wormholeName2,\n\t\t\t\t\t\t\t\"lifeLength\": form.signatureLength\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar type = null;\n\t\t\t\t\t\tvar parent = null;\n\t\t\t\t\t\tif (form.wormholeType.length > 0 && $.inArray(form.wormholeType.toUpperCase(), aSigWormholes) != -1 && form.wormholeType.toUpperCase() != \"K162\") {\n\t\t\t\t\t\t\tparent = \"initial\";\n\t\t\t\t\t\t\ttype = form.wormholeType.toUpperCase();\n\t\t\t\t\t\t} else if (form.wormholeType2.length > 0 && $.inArray(form.wormholeType2.toUpperCase(), aSigWormholes) != -1 && form.wormholeType2.toUpperCase() != \"K162\") {\n\t\t\t\t\t\t\tparent = \"secondary\";\n\t\t\t\t\t\t\ttype = form.wormholeType2.toUpperCase();\n\t\t\t\t\t\t} else if (form.wormholeType.toUpperCase() == \"K162\") {\n\t\t\t\t\t\t\tparent = \"secondary\";\n\t\t\t\t\t\t\ttype = \"????\";\n\t\t\t\t\t\t} else if (form.wormholeType2.toUpperCase() == \"K162\") {\n\t\t\t\t\t\t\tparent = \"initial\";\n\t\t\t\t\t\t\ttype = \"????\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar wormhole = {\n\t\t\t\t\t\t\t\"type\": type,\n\t\t\t\t\t\t\t\"parent\": parent,\n\t\t\t\t\t\t\t\"life\": form.wormholeLife,\n\t\t\t\t\t\t\t\"mass\": form.wormholeMass\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (sigDialogVM.mode == \"update\") {\n\t\t\t\t\t\t\tsignature.id = $(\"#dialog-signature\").data(\"signatureid\");\n\t\t\t\t\t\t\tsignature2.id = $(\"#dialog-signature\").data(\"signature2id\");\n\t\t\t\t\t\t\twormhole.id = $(\"#dialog-signature\").data(\"wormholeid\");\n\n\t\t\t\t\t\t\t// Update the initial and type based on which side of the wormhole we are editing\n\t\t\t\t\t\t\tif (tripwire.client.wormholes[wormhole.id]) {\n\t\t\t\t\t\t\t\tif (form.wormholeType.length > 0 && $.inArray(form.wormholeType.toUpperCase(), aSigWormholes) != -1 && form.wormholeType.toUpperCase() != \"K162\") {\n\t\t\t\t\t\t\t\t\twormhole.parent = tripwire.client.wormholes[wormhole.id].initialID == signature.id ? \"initial\" : \"secondary\";\n\t\t\t\t\t\t\t\t\twormhole.type = form.wormholeType.toUpperCase();\n\t\t\t\t\t\t\t\t} else if (form.wormholeType2.length > 0 && $.inArray(form.wormholeType2.toUpperCase(), aSigWormholes) != -1 && form.wormholeType2.toUpperCase() != \"K162\") {\n\t\t\t\t\t\t\t\t\twormhole.parent = tripwire.client.wormholes[wormhole.id].initialID == signature.id ? \"secondary\" : \"initial\";\n\t\t\t\t\t\t\t\t\twormhole.type = form.wormholeType2.toUpperCase();\n\t\t\t\t\t\t\t\t} else if (form.wormholeType.toUpperCase() == \"K162\") {\n\t\t\t\t\t\t\t\t\twormhole.parent = tripwire.client.wormholes[wormhole.id].initialID == signature.id ? \"secondary\" : \"initial\";\n\t\t\t\t\t\t\t\t\twormhole.type = \"????\";\n\t\t\t\t\t\t\t\t} else if (form.wormholeType2.toUpperCase() == \"K162\") {\n\t\t\t\t\t\t\t\t\twormhole.parent = tripwire.client.wormholes[wormhole.id].initialID == signature.id ? \"initial\" : \"secondary\";\n\t\t\t\t\t\t\t\t\twormhole.type = \"????\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpayload = {\"signatures\": {\"update\": [{\"wormhole\": wormhole, \"signatures\": [signature, signature2]}]}};\n\n\t\t\t\t\t\t\tif (tripwire.client.wormholes[wormhole.id]) {\n\t\t\t\t\t\t\t\t\t//used to be a wormhole\n\t\t\t\t\t\t\t\t\tundo.push({\"wormhole\": tripwire.client.wormholes[wormhole.id], \"signatures\": [tripwire.client.signatures[signature.id], tripwire.client.signatures[signature2.id]]});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// used to be just a regular signature\n\t\t\t\t\t\t\t\t\tundo.push(tripwire.client.signatures[signature.id]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpayload = {\"signatures\": {\"add\": [{\"wormhole\": wormhole, \"signatures\": [signature, signature2]}]}};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (sigDialogVM.mode == \"update\") {\n\t\t\t\t\t\t\tvar signature = {\n\t\t\t\t\t\t\t\t\"id\": $(\"#dialog-signature\").data(\"signatureid\"),\n\t\t\t\t\t\t\t\t\"signatureID\": form.signatureID_Alpha + form.signatureID_Numeric,\n\t\t\t\t\t\t\t\t\"systemID\": sigDialogVM.viewingSystemID,\n\t\t\t\t\t\t\t\t\"type\": form.signatureType,\n\t\t\t\t\t\t\t\t\"name\": form.signatureName,\n\t\t\t\t\t\t\t\t\"lifeLength\": form.signatureLength\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tpayload = {\"signatures\": {\"update\": [signature]}};\n\n\t\t\t\t\t\t\tif (tripwire.client.signatures[signature.id].type == \"wormhole\") {\n\t\t\t\t\t\t\t\t//used to be a wormhole\n\t\t\t\t\t\t\t\tvar wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == signature.id || wormhole.secondaryID == signature.id) return wormhole; })[0];\n\t\t\t\t\t\t\t\tvar signature2 = signature.id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID];\n\t\t\t\t\t\t\t\tundo.push({\"wormhole\": tripwire.client.wormholes[wormhole.id], \"signatures\": [tripwire.client.signatures[signature.id], tripwire.client.signatures[signature2.id]]});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// used to be just a regular signature\n\t\t\t\t\t\t\t\tundo.push(tripwire.client.signatures[signature.id]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar signature = {\n\t\t\t\t\t\t\t\t\"signatureID\": form.signatureID_Alpha + form.signatureID_Numeric,\n\t\t\t\t\t\t\t\t\"systemID\": sigDialogVM.viewingSystemID,\n\t\t\t\t\t\t\t\t\"type\": form.signatureType,\n\t\t\t\t\t\t\t\t\"name\": form.signatureName,\n\t\t\t\t\t\t\t\t\"lifeLength\": form.signatureLength\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tpayload = {\"signatures\": {\"add\": [signature]}};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-signature\").parent().find(\":button:contains('Save')\").button(\"disable\");\n\n\t\t\t\t\tvar success = function(data) {\n\t\t\t\t\t\tif (data.resultSet && data.resultSet[0].result == true) {\n\t\t\t\t\t\t\t$(\"#dialog-signature\").dialog(\"close\");\n\n\t\t\t\t\t\t\t$(\"#undo\").removeClass(\"disabled\");\n\n\t\t\t\t\t\t\tif (sigDialogVM.mode == \"add\") {\n\t\t\t\t\t\t\t\tundo = data.results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sigDialogVM.viewingSystemID in tripwire.signatures.undo) {\n\t\t\t\t\t\t\t\ttripwire.signatures.undo[sigDialogVM.viewingSystemID].push({action: sigDialogVM.mode, signatures: undo});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttripwire.signatures.undo[sigDialogVM.viewingSystemID] = [{action: sigDialogVM.mode, signatures: undo}];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar always = function() {\n\t\t\t\t\t\t$(\"#sigEditForm input[type=submit]\").removeAttr(\"disabled\");\n\t\t\t\t\t\t$(\"#dialog-signature\").parent().find(\":button:contains('Save')\").button(\"enable\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttripwire.refresh('refresh', payload, success, always);\n\t\t\t\t});\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$(\"#dialog-signature\").data(\"signatureid\", \"\");\n\t\t\t\t$(\"#dialog-signature\").data(\"signature2id\", \"\");\n\t\t\t\t$(\"#dialog-signature\").data(\"wormholeid\", \"\");\n\n\t\t\t\t$(\"#dialog-signature input\").val(\"\");\n\t\t\t\t$(\"#dialog-signature [name='signatureType']\").val(\"unknown\").selectmenu(\"refresh\");\n\n\t\t\t\t$(\"#dialog-signature [name='wormholeLife']\").val(\"stable\").selectmenu(\"refresh\");\n\t\t\t\t$(\"#dialog-signature [name='wormholeMass']\").val(\"stable\").selectmenu(\"refresh\");\n\n\t\t\t\t$(\"#dialog-signature #site\").show();\n\t\t\t\t$(\"#dialog-signature #wormhole\").hide();\n\n\t\t\t\t// Side labels\n\t\t\t\t$(\"#dialog-signature .sideLabel:first\").html(sigDialogVM.viewingSystem.name + \" Side\");\n\t\t\t\t$(\"#dialog-signature .sideLabel:last\").html(\"Other Side\");\n\n\t\t\t\t// Default signature life\n\t\t\t\t$(\"#dialog-signature #durationPicker\").val(options.signatures.pasteLife * 60 * 60).change();\n\n\t\t\t\tvar id = sigDialogVM.sigId;\n\t\t\t\tif (sigDialogVM.mode == \"update\" && id && tripwire.client.signatures[id]) {\n\t\t\t\t\tvar signature = tripwire.client.signatures[id];\n\t\t\t\t\t$(\"#dialog-signature\").data(\"signatureid\", id);\n\n\t\t\t\t\t// Change the dialog buttons\n\t\t\t\t\t$(\"#dialog-signature\").parent().find(\"button:contains('Add')\").hide();\n\t\t\t\t\t$(\"#dialog-signature\").parent().find(\"button:contains('Save')\").show();\n\n\t\t\t\t\t// Change the dialog title\n\t\t\t\t\t$(\"#dialog-signature\").dialog(\"option\", \"title\", \"Edit Signature\");\n\n\t\t\t\t\tif (signature.type == \"wormhole\") {\n\t\t\t\t\t\tvar wormhole = $.map(tripwire.client.wormholes, function(wormhole) { if (wormhole.initialID == id || wormhole.secondaryID == id) return wormhole; })[0];\n\t\t\t\t\t\tvar otherSignature = id == wormhole.initialID ? tripwire.client.signatures[wormhole.secondaryID] : tripwire.client.signatures[wormhole.initialID];\n\t\t\t\t\t\t$(\"#dialog-signature\").data(\"signature2id\", otherSignature.id);\n\t\t\t\t\t\t$(\"#dialog-signature\").data(\"wormholeid\", wormhole.id);\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst sigAlpha = signature.signatureID ? signature.signatureID.substr(0, 3) : \"???\";\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID_Alpha']\").val(sigAlpha);\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID_Numeric']\").val(signature.signatureID ? signature.signatureID.substr(3, 5) : \"\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='signatureType']\").val(signature.type).selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='wormholeName']\").val(signature.name);\n\t\t\t\t\t\t$(\"#dialog-signature [name='leadsTo']\").val(tripwire.systems[otherSignature.systemID] ? tripwire.systems[otherSignature.systemID].name : (tripwire.aSigSystems[otherSignature.systemID] ? tripwire.aSigSystems[otherSignature.systemID] : \"\"));\n\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID2_Alpha']\").val(otherSignature.signatureID ? otherSignature.signatureID.substr(0, 3) : \"???\");\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID2_Numeric']\").val(otherSignature.signatureID ? otherSignature.signatureID.substr(3, 5) : \"\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='wormholeName2']\").val(otherSignature.name);\n\t\t\t\t\t\t$(\"#dialog-signature [name='wormholeLife']\").val(wormhole.life).selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='wormholeMass']\").val(wormhole.mass).selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\n\t\t\t\t\t\tif (wormhole[wormhole.parent+\"ID\"] == signature.id) {\n\t\t\t\t\t\t\t$(\"#dialog-signature input[name='wormholeType']\").val(wormhole.type).change();\n\t\t\t\t\t\t} else if (wormhole[wormhole.parent+\"ID\"] == otherSignature.id) {\n\t\t\t\t\t\t\t$(\"#dialog-signature input[name='wormholeType2']\").val(wormhole.type).change();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(\"#dialog-signature #durationPicker\").val(signature.lifeLength).change();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Focus the sig ID, if it isn't set, otherwise the sig name\n\t\t\t\t\t\tif(sigAlpha != '???') { $(\"#dialog-signature input[name='wormholeName']\").select(); }\n\t\t\t\t\t\telse { $(\"#dialog-signature input[name='signatureID_Alpha']\").select(); }\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID_Alpha']\").val(signature.signatureID ? signature.signatureID.substr(0, 3) : \"???\");\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID_Numeric']\").val(signature.signatureID ? signature.signatureID.substr(3, 5) : \"\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='signatureType']\").val(signature.type).selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t\t$(\"#dialog-signature [name='signatureName']\").val(signature.name);\n\t\t\t\t\t\t$(\"#dialog-signature #durationPicker\").val(signature.lifeLength).change();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Not a wormhole - always focus the sig ID\n\t\t\t\t\t\t$(\"#dialog-signature input[name='signatureID_Alpha']\").select();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Hightlight first ID section, if not set, otherwise the name\n\t\t\t\t} else {\n\t\t\t\t\t// Change the dialog buttons\n\t\t\t\t\t$(\"#dialog-signature\").parent().find(\"button:contains('Add')\").show();\n\t\t\t\t\t$(\"#dialog-signature\").parent().find(\"button:contains('Save')\").hide();\n\n\t\t\t\t\t// Change the dialog title\n\t\t\t\t\t$(\"#dialog-signature\").dialog(\"option\", \"title\", \"Add Signature\");\n\n\t\t\t\t\t$(\"#dialog-signature [name='signatureType']\").val(options.signatures.editType || \"unknown\").selectmenu(\"refresh\")\n\t\t\t\t\tif ($(\"#dialog-signature [name='signatureType']\").val() === \"wormhole\") {\n\t\t\t\t\t\t$(\"#dialog-signature #site\").hide();\n\t\t\t\t\t\t$(\"#dialog-signature #wormhole\").show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tValidationTooltips.close();\n\t\t\t\t$(\"#sigTable tr.selected\").removeClass(\"selected\");\n\t\t\t\t$(\"#dialog-signature\").data(\"signatureid\", \"\");\n\t\t\t\t$(\"#dialog-signature\").data(\"signature2id\", \"\");\n\t\t\t\t$(\"#dialog-signature\").data(\"wormholeid\", \"\");\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-signature\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-signature\").dialog(\"open\");\n\t}\n};\n","const invasions = new _Invasions();\nsystemAnalysis.addMutator(invasions);\n\nfunction _Invasions() {\n\tconst _this = this;\n\tconst pathSymbolMap = {\n\t\tstellar_reconnaissance: '◆',\n\t\t\n\t\ttriglavian_minor_victory: '▽',\n\t\tescalating_liminality: '▽',\n\t\tfinal_liminality: '▼',\n\t\t\n\t\tedencom_minor_victory: '△',\n\t\tredoubt: '△', bulwark: '△',\n\t\tfortress: '▲',\n\t};\n\tconst textMap = {\n\t\tstellar_reconnaissance: 'Stellar Reconnaissance',\n\t\t\n\t\ttriglavian_minor_victory: 'Triglavian Minor Victory',\n\t\tescalating_liminality: 'Escalating Liminality',\n\t\tfinal_liminality: 'Final Liminality',\n\t\t\n\t\tedencom_minor_victory: 'EDENCOM Minor Victory',\n\t\tredoubt: 'Redoubt',\n\t\tbulwark: 'Bulwark',\n\t\tfortress: 'EDENCOM Fortress',\n\t}\n\t\n\tthis.invasions = {};\n\t\n\t/** Update the system */\n\tthis.mutate = function(system, systemID) {\n\t\tconst systemInvasion = this.invasions[systemID];\n\t\tif(systemInvasion) {\n\t\t\tif(systemInvasion.derived_security_status) { system.security = 1 * systemInvasion.derived_security_status; }\n\t\t\tsystem.pathSymbol = pathSymbolMap[systemInvasion.status];\n\t\t\tconst tip = textMap[systemInvasion.status] +\n\t\t\t\t(systemInvasion.derived_security_status ? '<br>Effective security lowered to ' + systemInvasion.derived_security_status : '');\n\t\t\tsystem.systemTypeModifiers.push('<span class=\"invasion ' + systemInvasion.status + '\" data-tooltip=\"' + tip + '\">' + system.pathSymbol + '</span>');\n\t\t}\n\t}\n\t\n\t/** Refresh the invasion data from the public Kybernauts API */\n\tthis.refresh = function() {\n\t\t$.ajax({\n\t\t\turl: 'cached_third_party.php?key=invasions',\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"JSON\"\n\t\t}).done(function(data, status, xhr) {\t\n\t\t\tif(!_.isEqual(data, _this.invasions)) {\n\t\t\t\tconsole.info('Updating map for invasions update');\n\t\t\t\t_this.invasions = _.keyBy(data, function(x) { return x.system_id; });\n\t\t\t\tchain.redraw();\n\t\t\t\ttripwire.systemChange(viewingSystemID);\n\t\t\t}\n\t\t}).fail(function(xhr, status, error) {\n\t\t\tconsole.warn('Failed to fetch invasion data from kybernaut.space: ' + status, error);\n\t\t});\n\t};\n\t\n\tsetInterval(this.refresh, 3600000);\n\tthis.refresh();\n}"]}